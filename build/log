D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(1):  cmake_minimum_required(VERSION 3.20.0 )
D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(2):  project(openVCB LANGUAGES CXX VERSION 1.0.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(35):  if(CMAKE_HOST_UNIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(129):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(130):  if(CMAKE_HOST_WIN32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(131):  if(DEFINED ENV{PROCESSOR_ARCHITEW6432} )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(133):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(134):  set(CMAKE_HOST_SYSTEM_PROCESSOR AMD64 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(143):  if(CMAKE_TOOLCHAIN_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(162):  if(CMAKE_SYSTEM_NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(167):  elseif(CMAKE_VS_WINCE_VERSION )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(173):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(174):  set(CMAKE_SYSTEM_NAME Windows )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(175):  if(NOT DEFINED CMAKE_SYSTEM_VERSION )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(176):  set(CMAKE_SYSTEM_VERSION 10.0.22621 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(178):  set(CMAKE_SYSTEM_PROCESSOR AMD64 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(179):  set(CMAKE_CROSSCOMPILING FALSE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(180):  set(PRESET_CMAKE_SYSTEM_NAME FALSE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(183):  include(Platform/Windows-Determine OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(185):  set(CMAKE_SYSTEM Windows )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(186):  if(CMAKE_SYSTEM_VERSION )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(187):  string(APPEND CMAKE_SYSTEM -10.0.22621 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(189):  set(CMAKE_HOST_SYSTEM Windows )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(190):  if(CMAKE_HOST_SYSTEM_VERSION )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(191):  string(APPEND CMAKE_HOST_SYSTEM -10.0.22621 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(196):  if(CMAKE_BINARY_DIR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(198):  if(PRESET_CMAKE_SYSTEM_NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(203):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(204):  message(CONFIGURE_LOG The system is: Windows - 10.0.22621 - AMD64
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(211):  set(INCLUDE_CMAKE_TOOLCHAIN_FILE_IF_REQUIRED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(212):  if(CMAKE_TOOLCHAIN_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineSystem.cmake(217):  configure_file(D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystem.cmake.in D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake @ONLY )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(1):  set(CMAKE_HOST_SYSTEM Windows-10.0.22621 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(2):  set(CMAKE_HOST_SYSTEM_NAME Windows )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(3):  set(CMAKE_HOST_SYSTEM_VERSION 10.0.22621 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(4):  set(CMAKE_HOST_SYSTEM_PROCESSOR AMD64 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(8):  set(CMAKE_SYSTEM Windows-10.0.22621 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(9):  set(CMAKE_SYSTEM_NAME Windows )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(10):  set(CMAKE_SYSTEM_VERSION 10.0.22621 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(11):  set(CMAKE_SYSTEM_PROCESSOR AMD64 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(13):  set(CMAKE_CROSSCOMPILING FALSE )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(15):  set(CMAKE_SYSTEM_LOADED 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeMSYSFindMake.cmake(5):  find_program(CMAKE_MAKE_PROGRAM make REGISTRY_VIEW 32 PATHS C:/msys32/usr C:/mingw/msys [HKEY_LOCAL_MACHINE\SOFTWARE\GitForWindows;InstallPath]/usr )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeMSYSFindMake.cmake(15):  mark_as_advanced(CMAKE_MAKE_PROGRAM )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(19):  set(CMAKE_EFFECTIVE_SYSTEM_NAME Windows )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(21):  include(Platform/Windows-Initialize OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(23):  set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(23):  include(D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(5):  macro(_cmake_find_compiler lang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(115):  macro(_cmake_find_compiler_path lang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(155):  function(_cmake_find_compiler_sysroot lang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(26):  include(Platform/Windows-Determine-CXX OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Determine-CXX.cmake(1):  if(NOT CMAKE_CXX_COMPILER_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Determine-CXX.cmake(2):  set(CMAKE_CXX_COMPILER_NAMES c++ )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Determine-CXX.cmake(7):  set(CMAKE_CXX_COMPILER_EXCLUDE CC aCC xlC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(27):  include(Platform/Windows-CXX OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(28):  if(NOT CMAKE_CXX_COMPILER_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(32):  if(MSYS Makefiles MATCHES Visual Studio )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(33):  elseif(MSYS Makefiles MATCHES Green Hills MULTI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(34):  elseif(MSYS Makefiles MATCHES Xcode )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(37):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(38):  if(NOT CMAKE_CXX_COMPILER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(71):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(72):  _cmake_find_compiler_path(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(116):  if(CMAKE_CXX_COMPILER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(123):  list(LENGTH CMAKE_CXX_COMPILER _CMAKE_CXX_COMPILER_LENGTH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(124):  if(_CMAKE_CXX_COMPILER_LENGTH GREATER 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(129):  unset(_CMAKE_CXX_COMPILER_LENGTH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(133):  get_filename_component(_CMAKE_USER_CXX_COMPILER_PATH clang++ PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(134):  if(NOT _CMAKE_USER_CXX_COMPILER_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(135):  find_program(CMAKE_CXX_COMPILER_WITH_PATH NAMES clang++ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(136):  if(CMAKE_CXX_COMPILER_WITH_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(137):  set(CMAKE_CXX_COMPILER D:/new_msys64/ucrt64/bin/clang++.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(138):  get_property(_CMAKE_CXX_COMPILER_CACHED CACHE CMAKE_CXX_COMPILER PROPERTY TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(139):  if(_CMAKE_CXX_COMPILER_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(140):  set(CMAKE_CXX_COMPILER D:/new_msys64/ucrt64/bin/clang++.exe CACHE STRING CXX compiler FORCE )
CMake Warning (dev) at D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake:140 (set):
  Policy CMP0126 is not set: set(CACHE) does not remove a normal variable of
  the same name.  Run "cmake --help-policy CMP0126" for policy details.  Use
  the cmake_policy command to set the policy and suppress this warning.

  For compatibility with older versions of CMake, normal variable
  "CMAKE_CXX_COMPILER" will be removed from the current scope.
Call Stack (most recent call first):
  D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake:72 (_cmake_find_compiler_path)
  CMakeLists.txt:2 (project)
This warning is for project developers.  Use -Wno-dev to suppress it.

D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(142):  unset(_CMAKE_CXX_COMPILER_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(144):  unset(CMAKE_CXX_COMPILER_WITH_PATH CACHE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(74):  mark_as_advanced(CMAKE_CXX_COMPILER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(79):  set(CMAKE_CXX_COMPILER_ID_TEST_FLAGS_FIRST )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(80):  set(CMAKE_CXX_COMPILER_ID_TEST_FLAGS -c --c++ --ec++ --target=arm-arm-none-eabi -mcpu=cortex-m3 -c -I__does_not_exist__ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(97):  if(CMAKE_CXX_COMPILER_TARGET )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(102):  if(NOT CMAKE_CXX_COMPILER_ID_RUN )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(103):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(106):  set(CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(107):  set(CMAKE_CXX_PLATFORM_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(108):  file(READ D:/new_msys64/ucrt64/share/cmake/Modules/CMakePlatformId.h.in CMAKE_CXX_COMPILER_ID_PLATFORM_CONTENT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(113):  list(APPEND CMAKE_CXX_COMPILER_ID_VENDORS IAR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(114):  set(CMAKE_CXX_COMPILER_ID_VENDOR_FLAGS_IAR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(115):  set(CMAKE_CXX_COMPILER_ID_VENDOR_REGEX_IAR IAR .+ Compiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(122):  set(CMAKE_CXX_COMPILER_ID_TOOL_MATCH_REGEX 
Ld[^
]*(
[ 	]+[^
]*)*
[ 	]+([^ 	
]+)[^
]*-o[^
]*CompilerIdCXX/(\./)?(CompilerIdCXX.(framework|xctest|build/[^ 	
]+)/)?CompilerIdCXX[ 	
\"] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(123):  set(CMAKE_CXX_COMPILER_ID_TOOL_MATCH_INDEX 2 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(125):  include(D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(4):  macro(__determine_compiler_id_test testflags_var userflags_var )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(25):  function(CMAKE_DETERMINE_COMPILER_ID lang flagvar src )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(306):  include(CMakeCompilerIdDetection )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(5):  function(_readFile file )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(14):  function(compiler_id_detection outvar lang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(310):  function(CMAKE_DETERMINE_COMPILER_ID_WRITE lang src )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(328):  function(CMAKE_DETERMINE_COMPILER_ID_BUILD lang testflags userflags src )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(818):  function(CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR lang output )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(829):  function(CMAKE_DETERMINE_COMPILER_ID_CHECK lang file )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1067):  function(CMAKE_DETERMINE_COMPILER_ID_VENDOR lang userflags )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1128):  function(CMAKE_DETERMINE_MSVC_SHOWINCLUDES_PREFIX lang userflags )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(126):  CMAKE_DETERMINE_COMPILER_ID(CXX CXXFLAGS CMakeCXXCompilerId.cpp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(27):  string(STRIP  CMAKE_CXX_COMPILER_ID_ARG1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(28):  string(REGEX REPLACE  + ; CMAKE_CXX_COMPILER_ID_ARG1  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(31):  if(CMAKE_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(33):  elseif(DEFINED ENV{CXXFLAGS} )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(35):  else(CMAKE_CXX_FLAGS_INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(36):  set(CMAKE_CXX_COMPILER_ID_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(38):  string(REPLACE   ; CMAKE_CXX_COMPILER_ID_FLAGS_LIST  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(41):  set(CMAKE_CXX_COMPILER_ID_DIR D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(45):  if(CMAKE_CXX_COMPILER_ID_REQUIRE_SUCCESS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(59):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(62):  foreach(userflags   )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(63):  foreach(testflags   -c;--c++;--ec++;--target=arm-arm-none-eabi -mcpu=cortex-m3;-c -I__does_not_exist__ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(64):  __determine_compiler_id_test(testflags userflags )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(5):  set(_CMAKE_CXX_COMPILER_ID_LOG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(7):  separate_arguments(testflags UNIX_COMMAND  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(8):  CMAKE_DETERMINE_COMPILER_ID_BUILD(CXX   CMakeCXXCompilerId.cpp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(330):  file(REMOVE_RECURSE D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(331):  file(MAKE_DIRECTORY D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(332):  file(MAKE_DIRECTORY D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/tmp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(333):  CMAKE_DETERMINE_COMPILER_ID_WRITE(CXX CMakeCXXCompilerId.cpp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(311):  find_file(src_in CMakeCXXCompilerId.cpp.in PATHS D:/new_msys64/ucrt64/share/cmake/Modules  NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(312):  file(READ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerId.cpp.in ID_CONTENT_IN )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(314):  compiler_id_detection(CMAKE_CXX_COMPILER_ID_CONTENT CXX ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT xCXX STREQUAL xFortran AND NOT xCXX STREQUAL xCSharp AND NOT xCXX STREQUAL xISPC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(18):  file(GLOB lang_files D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/*-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(20):  set(nonlang CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(21):  if(xCXX STREQUAL xCXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(22):  set(nonlang C )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(25):  file(GLOB nonlang_files D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/*-C-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(27):  list(REMOVE_ITEM lang_files D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Bruce-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Compaq-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/HP-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/LCC-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SDCC-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SunPro-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XL-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XLClang-C-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/zOS-C-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(30):  set(files D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ADSP-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMCC-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Borland-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Cray-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Embarcadero-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Fujitsu-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GHS-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/HP-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IAR-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/MSVC-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVHPC-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PGI-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PathScale-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SCO-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/TI-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Watcom-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XL-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(31):  if(files )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(32):  foreach(file D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ADSP-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMCC-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Borland-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Cray-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Embarcadero-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Fujitsu-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GHS-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/HP-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IAR-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/MSVC-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVHPC-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PGI-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PathScale-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SCO-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/TI-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Watcom-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XL-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake;D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ADSP-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ADSP-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_ADI_COMPILER) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSIONNUM__ >> 24 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSIONNUM__ >> 16 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__VERSIONNUM__ >> 8 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__VERSIONNUM__ & 0xFF)
#endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ADSP-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ADSP-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_ADSP 
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSIONNUM__ >> 24 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSIONNUM__ >> 16 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__VERSIONNUM__ >> 8 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__VERSIONNUM__ & 0xFF)
#endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_ADSP  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_ADSP defined(_ADI_COMPILER) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMCC-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMCC-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMCC-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ARMCC-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_ARMCC 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_ARMCC  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_ARMCC defined(__ARMCC_VERSION) && !defined(__clang__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ARMClang-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_ARMClang 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000)
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_ARMClang  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_ARMClang defined(__clang__) && defined(__ARMCOMPILER_VERSION) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompilerInternal.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId AppleClang-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_AppleClang 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_AppleClang 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_AppleClang defined(__clang__) && defined(__apple_build_version__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Borland-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Borland-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Borland-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Borland-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Borland 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Borland  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Borland defined(__BORLANDC__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompilerInternal.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Clang-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Clang 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Clang 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Clang defined(__clang__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__COMO__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Comeau-CXX-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Comeau 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Comeau  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Comeau defined(__COMO__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Compaq-CXX-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Compaq 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Compaq  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Compaq defined(__DECCXX) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Cray-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Cray-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Cray-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Cray-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Cray 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Cray  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Cray defined(_CRAYC) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Embarcadero-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Embarcadero-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Embarcadero-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Embarcadero-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Embarcadero 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Embarcadero  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Embarcadero defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Fujitsu-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Fujitsu-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__FCC_version__)
#   define @PREFIX@COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__fcc_version)
# elif defined(__FCC_VERSION)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__FCC_VERSION)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Fujitsu-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Fujitsu-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Fujitsu 
# if defined(__FCC_version__)
#   define @PREFIX@COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__fcc_version)
# elif defined(__FCC_VERSION)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__FCC_VERSION)
# endif
 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Fujitsu  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Fujitsu defined(__FUJITSU) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__CLANG_FUJITSU) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# define @PREFIX@COMPILER_VERSION_INTERNAL_STR __clang_version__
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId FujitsuClang-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_FujitsuClang 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# define @PREFIX@COMPILER_VERSION_INTERNAL_STR __clang_version__
 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_FujitsuClang  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_FujitsuClang defined(__CLANG_FUJITSU) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GHS-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GHS-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GHS-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId GHS-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_GHS 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_GHS  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_GHS defined(__ghs__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId GNU-CXX-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_GNU 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_GNU  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_GNU defined(__GNUC__) || defined(__GNUG__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/HP-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/HP-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/HP-CXX-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId HP-CXX-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_HP 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_HP  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_HP defined(__HP_aCC) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IAR-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IAR-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IAR-DetermineCompiler.cmake(24):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IAR-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId IAR-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_IAR 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_IAR  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_IAR defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__open_xl__) && defined(__clang__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__open_xl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__open_xl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__open_xl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__open_xl_ptf_fix_level__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId IBMClang-CXX-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_IBMClang 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__open_xl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__open_xl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__open_xl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__open_xl_ptf_fix_level__)
 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_IBMClang  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_IBMClang defined(__open_xl__) && defined(__clang__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
#  else
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
#  endif
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake(43):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID "GNU"
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Intel-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Intel 
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
#  else
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
#  endif
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Intel 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID "GNU"
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Intel defined(__INTEL_COMPILER) || defined(__ICC) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER    % 10)
#else
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#elif defined(__GNUG__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#endif )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake(35):  set(_compiler_id_simulate 
#if defined(_MSC_VER)
# define @PREFIX@SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_ID "GNU"
#endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId IntelLLVM-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_IntelLLVM 
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER    % 10)
#else
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#elif defined(__GNUG__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_IntelLLVM 
#if defined(_MSC_VER)
# define @PREFIX@SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_ID "GNU"
#endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_IntelLLVM (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__)) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__LCC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_ID "GNU"
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#  endif
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId LCC-CXX-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_LCC 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__LCC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_ID "GNU"
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#  endif
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_LCC  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_LCC defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__)) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/MSVC-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/MSVC-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/MSVC-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId MSVC-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_MSVC 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_MSVC  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_MSVC defined(_MSC_VER) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVHPC-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVHPC-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVHPC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCOMPILER) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVHPC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__NVCOMPILER_MAJOR__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__NVCOMPILER_PATCHLEVEL__)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVHPC-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId NVHPC-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_NVHPC 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__NVCOMPILER_MAJOR__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__NVCOMPILER_PATCHLEVEL__)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_NVHPC  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_NVHPC defined(__NVCOMPILER) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# elif defined(__clang__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# elif defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(22):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# elif defined(__clang__)
#  define @PREFIX@SIMULATE_ID "Clang"
# elif defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID "GNU"
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId NVIDIA-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_NVIDIA 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# elif defined(__clang__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# elif defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_NVIDIA 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# elif defined(__clang__)
#  define @PREFIX@SIMULATE_ID "Clang"
# elif defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID "GNU"
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_NVIDIA defined(__NVCC__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId OpenWatcom-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_OpenWatcom 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_OpenWatcom  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_OpenWatcom defined(__WATCOMC__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PGI-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PGI-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PGI-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId PGI-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_PGI 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_PGI  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_PGI defined(__PGI) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PathScale-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PathScale-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/PathScale-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId PathScale-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_PathScale 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_PathScale  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_PathScale defined(__PATHCC__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SCO-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SCO-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SCO-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId SCO-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_SCO  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_SCO  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_SCO defined(__SCO_VERSION__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId SunPro-CXX-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_SunPro 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_SunPro  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_SunPro defined(__SUNPRO_CC) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/TI-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/TI-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/TI-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId TI-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_TI 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_TI  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_TI defined(__TI_COMPILER_VERSION__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake(3):  set(_compiler_id_pp_test defined(__TASKING__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake(5):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSION__/1000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSION__ % 100) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__VERSION__) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Tasking-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Tasking 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSION__/1000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSION__ % 100)
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__VERSION__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Tasking  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Tasking defined(__TASKING__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId VisualAge-CXX-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_VisualAge 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_VisualAge  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_VisualAge defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Watcom-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Watcom-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Watcom-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId Watcom-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_Watcom 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_Watcom  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_Watcom defined(__WATCOMC__) && __WATCOMC__ < 1200 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XL-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XL-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XL-CXX-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId XL-CXX-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_XL 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_XL  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_XL defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId XLClang-CXX-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_XLClang 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_XLClang  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_XLClang defined(__ibmxl__) && defined(__clang__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(33):  _readFile(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(6):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId zOS-CXX-DetermineCompiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_zOS 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_zOS  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_zOS defined(__IBMCPP__) && defined(__COMPILER_VER__) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(36):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(37):  set(oneValueArgs PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(38):  cmake_parse_arguments(CID ID_STRING;VERSION_STRINGS;ID_DEFINE;PLATFORM_DEFAULT_COMPILER PREFIX  ID_STRING;VERSION_STRINGS;PLATFORM_DEFAULT_COMPILER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(39):  if(CID_UNPARSED_ARGUMENTS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(45):  if(xCXX STREQUAL xCXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(46):  list(APPEND ordered_compilers Comeau )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(50):  list(APPEND ordered_compilers Intel IntelLLVM PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS IBMClang XLClang XL VisualAge NVHPC PGI Cray TI FujitsuClang Fujitsu GHS Tasking )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(75):  if(xCXX STREQUAL xC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(81):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(87):  list(APPEND ordered_compilers Clang LCC GNU MSVC ADSP IAR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(95):  if(xCXX STREQUAL xC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(101):  if(xCXX STREQUAL xCUDA )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(105):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(113):  set(pp_if #if )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(114):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(115):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(119):  foreach(Id Comeau;Intel;IntelLLVM;PathScale;Embarcadero;Borland;Watcom;OpenWatcom;SunPro;HP;Compaq;zOS;IBMClang;XLClang;XL;VisualAge;NVHPC;PGI;Cray;TI;FujitsuClang;Fujitsu;GHS;Tasking;SCO;ARMCC;AppleClang;ARMClang;Clang;LCC;GNU;MSVC;ADSP;IAR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_Comeau )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #if defined(__COMO__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "Comeau" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  /* __COMO_VERSION__ = VRR */
# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#if defined(__COMO__)
# define COMPILER_ID "Comeau"
  /* __COMO_VERSION__ = VRR */
# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_Intel )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__INTEL_COMPILER) || defined(__ICC)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID "GNU"
# endif SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "Intel"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define SIMULATE_ID "GNU"
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
#  else
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
#  endif
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
#  else
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
#  endif
# else
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define COMPILER_VERSION_PATCH DEC(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
# elif defined(__GNUG__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__INTEL_COMPILER) || defined(__ICC)
# define COMPILER_ID "Intel"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define SIMULATE_ID "GNU"
# endif
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
#  else
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
#  endif
# else
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define COMPILER_VERSION_PATCH DEC(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
# elif defined(__GNUG__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_IntelLLVM )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE 
#if defined(_MSC_VER)
# define @PREFIX@SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_ID "GNU"
#endif SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "IntelLLVM"
#if defined(_MSC_VER)
# define SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define SIMULATE_ID "GNU"
#endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER    % 10)
#else
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_LLVM_COMPILER/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#elif defined(__GNUG__)
# define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
#else
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#elif defined(__GNUG__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
# define COMPILER_ID "IntelLLVM"
#if defined(_MSC_VER)
# define SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define SIMULATE_ID "GNU"
#endif
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
#else
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#elif defined(__GNUG__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_PathScale )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__PATHCC__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "PathScale" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__PATHCC__)
# define COMPILER_ID "PathScale"
# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_Embarcadero )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "Embarcadero" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
# define COMPILER_ID "Embarcadero"
# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_Borland )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__BORLANDC__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "Borland" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  /* __BORLANDC__ = 0xVRR */
# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__BORLANDC__)
# define COMPILER_ID "Borland"
  /* __BORLANDC__ = 0xVRR */
# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_Watcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__WATCOMC__) && __WATCOMC__ < 1200
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "Watcom" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
   /* __WATCOMC__ = VVRR */
# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
# define COMPILER_ID "Watcom"
   /* __WATCOMC__ = VVRR */
# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_OpenWatcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__WATCOMC__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "OpenWatcom" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
   /* __WATCOMC__ = VVRP + 1100 */
# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__WATCOMC__)
# define COMPILER_ID "OpenWatcom"
   /* __WATCOMC__ = VVRP + 1100 */
# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_SunPro )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__SUNPRO_CC)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "SunPro" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__SUNPRO_CC)
# define COMPILER_ID "SunPro"
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_HP )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__HP_aCC)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "HP" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  /* __HP_aCC = VVRRPP */
# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__HP_aCC)
# define COMPILER_ID "HP"
  /* __HP_aCC = VVRRPP */
# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_Compaq )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__DECCXX)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "Compaq" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  /* __DECCXX_VER = VVRRTPPPP */
# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__DECCXX)
# define COMPILER_ID "Compaq"
  /* __DECCXX_VER = VVRRTPPPP */
# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_zOS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "zOS" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
# define COMPILER_ID "zOS"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_IBMClang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__open_xl__) && defined(__clang__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "IBMClang" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__open_xl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__open_xl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__open_xl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__open_xl_ptf_fix_level__)
 VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__open_xl__) && defined(__clang__)
# define COMPILER_ID "IBMClang"
# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_XLClang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__ibmxl__) && defined(__clang__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "XLClang" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__ibmxl__) && defined(__clang__)
# define COMPILER_ID "XLClang"
# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_XL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "XL" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
# define COMPILER_ID "XL"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_VisualAge )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "VisualAge" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
# define COMPILER_ID "VisualAge"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_NVHPC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__NVCOMPILER)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "NVHPC" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__NVCOMPILER_MAJOR__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__NVCOMPILER_PATCHLEVEL__)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__NVCOMPILER)
# define COMPILER_ID "NVHPC"
# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__PGI)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "PGI" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__PGI)
# define COMPILER_ID "PGI"
# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_Cray )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(_CRAYC)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "Cray" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(_CRAYC)
# define COMPILER_ID "Cray"
# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_TI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__TI_COMPILER_VERSION__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "TI" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__TI_COMPILER_VERSION__)
# define COMPILER_ID "TI"
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_FujitsuClang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__CLANG_FUJITSU)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "FujitsuClang" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# define @PREFIX@COMPILER_VERSION_INTERNAL_STR __clang_version__
 VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__CLANG_FUJITSU)
# define COMPILER_ID "FujitsuClang"
# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_Fujitsu )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__FUJITSU)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "Fujitsu" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# if defined(__FCC_version__)
#   define @PREFIX@COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__FCC_major__)
#   define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__FCC_minor__)
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__fcc_version)
# elif defined(__FCC_VERSION)
#   define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__FCC_VERSION)
# endif
 VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# if defined(__FCC_version__)
#   define COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
# elif defined(__FCC_VERSION)
#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
# endif

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__FUJITSU)
# define COMPILER_ID "Fujitsu"
# if defined(__FCC_version__)
#   define COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
# elif defined(__FCC_VERSION)
#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
# endif

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_GHS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__ghs__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "GHS" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__ghs__)
# define COMPILER_ID "GHS"
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_Tasking )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__TASKING__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "Tasking" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSION__/1000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSION__ % 100)
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__VERSION__) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__TASKING__)
# define COMPILER_ID "Tasking"
  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_SCO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__SCO_VERSION__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "SCO" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE  VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__SCO_VERSION__)
# define COMPILER_ID "SCO"
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_ARMCC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__ARMCC_VERSION) && !defined(__clang__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "ARMCC" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
#endif

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__ARMCC_VERSION) && !defined(__clang__)
# define COMPILER_ID "ARMCC"
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
#endif

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_AppleClang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__clang__) && defined(__apple_build_version__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "AppleClang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__clang__) && defined(__apple_build_version__)
# define COMPILER_ID "AppleClang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_ARMClang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "ARMClang" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000)
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
# define COMPILER_ID "ARMClang"
  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_Clang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__clang__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID "MSVC"
# endif SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "Clang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__clang__)
# define COMPILER_ID "Clang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_LCC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "LCC" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__LCC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_ID "GNU"
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
#  endif
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define SIMULATE_ID "GNU"
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#  endif
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
# define COMPILER_ID "LCC"
# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define SIMULATE_ID "GNU"
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#  endif
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_GNU )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__GNUC__) || defined(__GNUG__)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "GNU" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# if defined(__GNUC__)
#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
# else
#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__GNUC__) || defined(__GNUG__)
# define COMPILER_ID "GNU"
# if defined(__GNUC__)
#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
# else
#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_MSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(_MSC_VER)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "MSVC" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
  /* _MSC_VER = VVRR */
# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(_MSC_VER)
# define COMPILER_ID "MSVC"
  /* _MSC_VER = VVRR */
# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_ADSP )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(_ADI_COMPILER)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "ADSP" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__VERSIONNUM__ >> 24 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__VERSIONNUM__ >> 16 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__VERSIONNUM__ >> 8 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__VERSIONNUM__ & 0xFF)
#endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
#endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(_ADI_COMPILER)
# define COMPILER_ID "ADSP"
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
#endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(120):  if(NOT _compiler_id_pp_test_IAR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(123):  set(id_content #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(124):  if(CID_ID_STRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(125):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(126):  string(CONFIGURE  SIMULATE_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(127):  string(APPEND id_content # define COMPILER_ID "IAR" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(129):  if(CID_ID_DEFINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(133):  if(CID_VERSION_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(134):  set(PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(135):  set(MACRO_DEC DEC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(136):  set(MACRO_HEX HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(137):  string(CONFIGURE 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif VERSION_BLOCK @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(138):  string(APPEND id_content 
# if defined(__VER__) && defined(__ICCARM__)
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(140):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 
#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# define COMPILER_ID "IAR"
# if defined(__VER__) && defined(__ICCARM__)
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# endif
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(141):  set(pp_if #elif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(144):  if(CID_PLATFORM_DEFAULT_COMPILER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(145):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define COMPILER_ID "HP"

#else /* unknown compiler */
# define COMPILER_ID "" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(156):  string(APPEND CMAKE_CXX_COMPILER_ID_CONTENT 

/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define COMPILER_ID "HP"

#else /* unknown compiler */
# define COMPILER_ID ""
#endif )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCompilerIdDetection.cmake(159):  set(CMAKE_CXX_COMPILER_ID_CONTENT 
/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */

#if defined(__COMO__)
# define COMPILER_ID "Comeau"
  /* __COMO_VERSION__ = VRR */
# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)

#elif defined(__INTEL_COMPILER) || defined(__ICC)
# define COMPILER_ID "Intel"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define SIMULATE_ID "GNU"
# endif
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
#  else
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
#  endif
# else
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define COMPILER_VERSION_PATCH DEC(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
# elif defined(__GNUG__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif

#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
# define COMPILER_ID "IntelLLVM"
#if defined(_MSC_VER)
# define SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define SIMULATE_ID "GNU"
#endif
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
#else
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#elif defined(__GNUG__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#endif

#elif defined(__PATHCC__)
# define COMPILER_ID "PathScale"
# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
# endif

#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
# define COMPILER_ID "Embarcadero"
# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)

#elif defined(__BORLANDC__)
# define COMPILER_ID "Borland"
  /* __BORLANDC__ = 0xVRR */
# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)

#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
# define COMPILER_ID "Watcom"
   /* __WATCOMC__ = VVRR */
# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif

#elif defined(__WATCOMC__)
# define COMPILER_ID "OpenWatcom"
   /* __WATCOMC__ = VVRP + 1100 */
# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif

#elif defined(__SUNPRO_CC)
# define COMPILER_ID "SunPro"
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# endif

#elif defined(__HP_aCC)
# define COMPILER_ID "HP"
  /* __HP_aCC = VVRRPP */
# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)

#elif defined(__DECCXX)
# define COMPILER_ID "Compaq"
  /* __DECCXX_VER = VVRRTPPPP */
# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)

#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
# define COMPILER_ID "zOS"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__open_xl__) && defined(__clang__)
# define COMPILER_ID "IBMClang"
# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)


#elif defined(__ibmxl__) && defined(__clang__)
# define COMPILER_ID "XLClang"
# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)


#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
# define COMPILER_ID "XL"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
# define COMPILER_ID "VisualAge"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__NVCOMPILER)
# define COMPILER_ID "NVHPC"
# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
# endif

#elif defined(__PGI)
# define COMPILER_ID "PGI"
# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
# endif

#elif defined(_CRAYC)
# define COMPILER_ID "Cray"
# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)

#elif defined(__TI_COMPILER_VERSION__)
# define COMPILER_ID "TI"
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)

#elif defined(__CLANG_FUJITSU)
# define COMPILER_ID "FujitsuClang"
# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__


#elif defined(__FUJITSU)
# define COMPILER_ID "Fujitsu"
# if defined(__FCC_version__)
#   define COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
# elif defined(__FCC_VERSION)
#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
# endif


#elif defined(__ghs__)
# define COMPILER_ID "GHS"
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
# endif

#elif defined(__TASKING__)
# define COMPILER_ID "Tasking"
  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)

#elif defined(__SCO_VERSION__)
# define COMPILER_ID "SCO"

#elif defined(__ARMCC_VERSION) && !defined(__clang__)
# define COMPILER_ID "ARMCC"
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
#endif


#elif defined(__clang__) && defined(__apple_build_version__)
# define COMPILER_ID "AppleClang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)

#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
# define COMPILER_ID "ARMClang"
  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)

#elif defined(__clang__)
# define COMPILER_ID "Clang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif

#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
# define COMPILER_ID "LCC"
# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define SIMULATE_ID "GNU"
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#  endif
# endif

#elif defined(__GNUC__) || defined(__GNUG__)
# define COMPILER_ID "GNU"
# if defined(__GNUC__)
#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
# else
#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif

#elif defined(_MSC_VER)
# define COMPILER_ID "MSVC"
  /* _MSC_VER = VVRR */
# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
# endif

#elif defined(_ADI_COMPILER)
# define COMPILER_ID "ADSP"
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
#endif

#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# define COMPILER_ID "IAR"
# if defined(__VER__) && defined(__ICCARM__)
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# endif


/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define COMPILER_ID "HP"

#else /* unknown compiler */
# define COMPILER_ID ""
#endif PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(320):  unset(src_in CACHE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(321):  string(CONFIGURE /* This source file must have a .cpp extension so that all C++ compilers
   recognize the extension without flags.  Borland does not know .cxx for
   example.  */
#ifndef __cplusplus
# error "A C compiler has been selected for C++."
#endif

#if !defined(__has_include)
/* If the compiler does not have __has_include, pretend the answer is
   always no.  */
#  define __has_include(x) 0
#endif

@CMAKE_CXX_COMPILER_ID_CONTENT@

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
#ifdef SIMULATE_ID
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
#endif

#ifdef __QNXNTO__
char const* qnxnto = "INFO" ":" "qnxnto[]";
#endif

#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
#endif

@CMAKE_CXX_COMPILER_ID_PLATFORM_CONTENT@
@CMAKE_CXX_COMPILER_ID_ERROR_FOR_TEST@

#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
#  if defined(__INTEL_CXX11_MODE__)
#    if defined(__cpp_aggregate_nsdmi)
#      define CXX_STD 201402L
#    else
#      define CXX_STD 201103L
#    endif
#  else
#    define CXX_STD 199711L
#  endif
#elif defined(_MSC_VER) && defined(_MSVC_LANG)
#  define CXX_STD _MSVC_LANG
#else
#  define CXX_STD __cplusplus
#endif

const char* info_language_standard_default = "INFO" ":" "standard_default["
#if CXX_STD > 202002L
  "23"
#elif CXX_STD > 201703L
  "20"
#elif CXX_STD >= 201703L
  "17"
#elif CXX_STD >= 201402L
  "14"
#elif CXX_STD >= 201103L
  "11"
#else
  "98"
#endif
"]";

const char* info_language_extensions_default = "INFO" ":" "extensions_default["
#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
     defined(__TI_COMPILER_VERSION__)) &&                                     \
  !defined(__STRICT_ANSI__)
  "ON"
#else
  "OFF"
#endif
"]";

/*--------------------------------------------------------------------------*/

int main(int argc, char* argv[])
{
  int require = 0;
  require += info_compiler[argc];
  require += info_platform[argc];
  require += info_arch[argc];
#ifdef COMPILER_VERSION_MAJOR
  require += info_version[argc];
#endif
#ifdef COMPILER_VERSION_INTERNAL
  require += info_version_internal[argc];
#endif
#ifdef SIMULATE_ID
  require += info_simulate[argc];
#endif
#ifdef SIMULATE_VERSION_MAJOR
  require += info_simulate_version[argc];
#endif
#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
  require += info_cray[argc];
#endif
  require += info_language_standard_default[argc];
  require += info_language_extensions_default[argc];
  (void)argv;
  return require;
}
 ID_CONTENT_OUT @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(322):  file(WRITE D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/CMakeCXXCompilerId.cpp /* This source file must have a .cpp extension so that all C++ compilers
   recognize the extension without flags.  Borland does not know .cxx for
   example.  */
#ifndef __cplusplus
# error "A C compiler has been selected for C++."
#endif

#if !defined(__has_include)
/* If the compiler does not have __has_include, pretend the answer is
   always no.  */
#  define __has_include(x) 0
#endif


/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */

#if defined(__COMO__)
# define COMPILER_ID "Comeau"
  /* __COMO_VERSION__ = VRR */
# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)

#elif defined(__INTEL_COMPILER) || defined(__ICC)
# define COMPILER_ID "Intel"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define SIMULATE_ID "GNU"
# endif
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
#  else
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
#  endif
# else
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define COMPILER_VERSION_PATCH DEC(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
# elif defined(__GNUG__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif

#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
# define COMPILER_ID "IntelLLVM"
#if defined(_MSC_VER)
# define SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define SIMULATE_ID "GNU"
#endif
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
#else
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#elif defined(__GNUG__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#endif

#elif defined(__PATHCC__)
# define COMPILER_ID "PathScale"
# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
# endif

#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
# define COMPILER_ID "Embarcadero"
# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)

#elif defined(__BORLANDC__)
# define COMPILER_ID "Borland"
  /* __BORLANDC__ = 0xVRR */
# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)

#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
# define COMPILER_ID "Watcom"
   /* __WATCOMC__ = VVRR */
# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif

#elif defined(__WATCOMC__)
# define COMPILER_ID "OpenWatcom"
   /* __WATCOMC__ = VVRP + 1100 */
# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif

#elif defined(__SUNPRO_CC)
# define COMPILER_ID "SunPro"
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# endif

#elif defined(__HP_aCC)
# define COMPILER_ID "HP"
  /* __HP_aCC = VVRRPP */
# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)

#elif defined(__DECCXX)
# define COMPILER_ID "Compaq"
  /* __DECCXX_VER = VVRRTPPPP */
# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)

#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
# define COMPILER_ID "zOS"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__open_xl__) && defined(__clang__)
# define COMPILER_ID "IBMClang"
# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)


#elif defined(__ibmxl__) && defined(__clang__)
# define COMPILER_ID "XLClang"
# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)


#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
# define COMPILER_ID "XL"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
# define COMPILER_ID "VisualAge"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)

#elif defined(__NVCOMPILER)
# define COMPILER_ID "NVHPC"
# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
# endif

#elif defined(__PGI)
# define COMPILER_ID "PGI"
# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
# endif

#elif defined(_CRAYC)
# define COMPILER_ID "Cray"
# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)

#elif defined(__TI_COMPILER_VERSION__)
# define COMPILER_ID "TI"
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)

#elif defined(__CLANG_FUJITSU)
# define COMPILER_ID "FujitsuClang"
# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__


#elif defined(__FUJITSU)
# define COMPILER_ID "Fujitsu"
# if defined(__FCC_version__)
#   define COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
# elif defined(__FCC_VERSION)
#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
# endif


#elif defined(__ghs__)
# define COMPILER_ID "GHS"
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
# endif

#elif defined(__TASKING__)
# define COMPILER_ID "Tasking"
  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)

#elif defined(__SCO_VERSION__)
# define COMPILER_ID "SCO"

#elif defined(__ARMCC_VERSION) && !defined(__clang__)
# define COMPILER_ID "ARMCC"
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
#endif


#elif defined(__clang__) && defined(__apple_build_version__)
# define COMPILER_ID "AppleClang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)

#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
# define COMPILER_ID "ARMClang"
  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)

#elif defined(__clang__)
# define COMPILER_ID "Clang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif

#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
# define COMPILER_ID "LCC"
# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define SIMULATE_ID "GNU"
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#  endif
# endif

#elif defined(__GNUC__) || defined(__GNUG__)
# define COMPILER_ID "GNU"
# if defined(__GNUC__)
#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
# else
#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif

#elif defined(_MSC_VER)
# define COMPILER_ID "MSVC"
  /* _MSC_VER = VVRR */
# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
# endif

#elif defined(_ADI_COMPILER)
# define COMPILER_ID "ADSP"
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
#endif

#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# define COMPILER_ID "IAR"
# if defined(__VER__) && defined(__ICCARM__)
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# endif


/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define COMPILER_ID "HP"

#else /* unknown compiler */
# define COMPILER_ID ""
#endif

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
#ifdef SIMULATE_ID
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
#endif

#ifdef __QNXNTO__
char const* qnxnto = "INFO" ":" "qnxnto[]";
#endif

#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
#endif

#define STRINGIFY_HELPER(X) #X
#define STRINGIFY(X) STRINGIFY_HELPER(X)

/* Identify known platforms by name.  */
#if defined(__linux) || defined(__linux__) || defined(linux)
# define PLATFORM_ID "Linux"

#elif defined(__MSYS__)
# define PLATFORM_ID "MSYS"

#elif defined(__CYGWIN__)
# define PLATFORM_ID "Cygwin"

#elif defined(__MINGW32__)
# define PLATFORM_ID "MinGW"

#elif defined(__APPLE__)
# define PLATFORM_ID "Darwin"

#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
# define PLATFORM_ID "Windows"

#elif defined(__FreeBSD__) || defined(__FreeBSD)
# define PLATFORM_ID "FreeBSD"

#elif defined(__NetBSD__) || defined(__NetBSD)
# define PLATFORM_ID "NetBSD"

#elif defined(__OpenBSD__) || defined(__OPENBSD)
# define PLATFORM_ID "OpenBSD"

#elif defined(__sun) || defined(sun)
# define PLATFORM_ID "SunOS"

#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
# define PLATFORM_ID "AIX"

#elif defined(__hpux) || defined(__hpux__)
# define PLATFORM_ID "HP-UX"

#elif defined(__HAIKU__)
# define PLATFORM_ID "Haiku"

#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
# define PLATFORM_ID "BeOS"

#elif defined(__QNX__) || defined(__QNXNTO__)
# define PLATFORM_ID "QNX"

#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
# define PLATFORM_ID "Tru64"

#elif defined(__riscos) || defined(__riscos__)
# define PLATFORM_ID "RISCos"

#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
# define PLATFORM_ID "SINIX"

#elif defined(__UNIX_SV__)
# define PLATFORM_ID "UNIX_SV"

#elif defined(__bsdos__)
# define PLATFORM_ID "BSDOS"

#elif defined(_MPRAS) || defined(MPRAS)
# define PLATFORM_ID "MP-RAS"

#elif defined(__osf) || defined(__osf__)
# define PLATFORM_ID "OSF1"

#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
# define PLATFORM_ID "SCO_SV"

#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
# define PLATFORM_ID "ULTRIX"

#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
# define PLATFORM_ID "Xenix"

#elif defined(__WATCOMC__)
# if defined(__LINUX__)
#  define PLATFORM_ID "Linux"

# elif defined(__DOS__)
#  define PLATFORM_ID "DOS"

# elif defined(__OS2__)
#  define PLATFORM_ID "OS2"

# elif defined(__WINDOWS__)
#  define PLATFORM_ID "Windows3x"

# elif defined(__VXWORKS__)
#  define PLATFORM_ID "VxWorks"

# else /* unknown platform */
#  define PLATFORM_ID
# endif

#elif defined(__INTEGRITY)
# if defined(INT_178B)
#  define PLATFORM_ID "Integrity178"

# else /* regular Integrity */
#  define PLATFORM_ID "Integrity"
# endif

# elif defined(_ADI_COMPILER)
#  define PLATFORM_ID "ADSP"

#else /* unknown platform */
# define PLATFORM_ID

#endif

/* For windows compilers MSVC and Intel we can determine
   the architecture of the compiler being used.  This is because
   the compilers do not have flags that can change the architecture,
   but rather depend on which compiler is being used
*/
#if defined(_WIN32) && defined(_MSC_VER)
# if defined(_M_IA64)
#  define ARCHITECTURE_ID "IA64"

# elif defined(_M_ARM64EC)
#  define ARCHITECTURE_ID "ARM64EC"

# elif defined(_M_X64) || defined(_M_AMD64)
#  define ARCHITECTURE_ID "x64"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# elif defined(_M_ARM64)
#  define ARCHITECTURE_ID "ARM64"

# elif defined(_M_ARM)
#  if _M_ARM == 4
#   define ARCHITECTURE_ID "ARMV4I"
#  elif _M_ARM == 5
#   define ARCHITECTURE_ID "ARMV5I"
#  else
#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
#  endif

# elif defined(_M_MIPS)
#  define ARCHITECTURE_ID "MIPS"

# elif defined(_M_SH)
#  define ARCHITECTURE_ID "SHx"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__WATCOMC__)
# if defined(_M_I86)
#  define ARCHITECTURE_ID "I86"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# if defined(__ICCARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__ICCRX__)
#  define ARCHITECTURE_ID "RX"

# elif defined(__ICCRH850__)
#  define ARCHITECTURE_ID "RH850"

# elif defined(__ICCRL78__)
#  define ARCHITECTURE_ID "RL78"

# elif defined(__ICCRISCV__)
#  define ARCHITECTURE_ID "RISCV"

# elif defined(__ICCAVR__)
#  define ARCHITECTURE_ID "AVR"

# elif defined(__ICC430__)
#  define ARCHITECTURE_ID "MSP430"

# elif defined(__ICCV850__)
#  define ARCHITECTURE_ID "V850"

# elif defined(__ICC8051__)
#  define ARCHITECTURE_ID "8051"

# elif defined(__ICCSTM8__)
#  define ARCHITECTURE_ID "STM8"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__ghs__)
# if defined(__PPC64__)
#  define ARCHITECTURE_ID "PPC64"

# elif defined(__ppc__)
#  define ARCHITECTURE_ID "PPC"

# elif defined(__ARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__x86_64__)
#  define ARCHITECTURE_ID "x64"

# elif defined(__i386__)
#  define ARCHITECTURE_ID "X86"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__TI_COMPILER_VERSION__)
# if defined(__TI_ARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__MSP430__)
#  define ARCHITECTURE_ID "MSP430"

# elif defined(__TMS320C28XX__)
#  define ARCHITECTURE_ID "TMS320C28x"

# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
#  define ARCHITECTURE_ID "TMS320C6x"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

# elif defined(__ADSPSHARC__)
#  define ARCHITECTURE_ID "SHARC"

# elif defined(__ADSPBLACKFIN__)
#  define ARCHITECTURE_ID "Blackfin"

#elif defined(__TASKING__)

# if defined(__CTC__) || defined(__CPTC__)
#  define ARCHITECTURE_ID "TriCore"

# elif defined(__CMCS__)
#  define ARCHITECTURE_ID "MCS"

# elif defined(__CARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__CARC__)
#  define ARCHITECTURE_ID "ARC"

# elif defined(__C51__)
#  define ARCHITECTURE_ID "8051"

# elif defined(__CPCP__)
#  define ARCHITECTURE_ID "PCP"

# else
#  define ARCHITECTURE_ID ""
# endif

#else
#  define ARCHITECTURE_ID
#endif

/* Convert integer to decimal digit literals.  */
#define DEC(n)                   \
  ('0' + (((n) / 10000000)%10)), \
  ('0' + (((n) / 1000000)%10)),  \
  ('0' + (((n) / 100000)%10)),   \
  ('0' + (((n) / 10000)%10)),    \
  ('0' + (((n) / 1000)%10)),     \
  ('0' + (((n) / 100)%10)),      \
  ('0' + (((n) / 10)%10)),       \
  ('0' +  ((n) % 10))

/* Convert integer to hex digit literals.  */
#define HEX(n)             \
  ('0' + ((n)>>28 & 0xF)), \
  ('0' + ((n)>>24 & 0xF)), \
  ('0' + ((n)>>20 & 0xF)), \
  ('0' + ((n)>>16 & 0xF)), \
  ('0' + ((n)>>12 & 0xF)), \
  ('0' + ((n)>>8  & 0xF)), \
  ('0' + ((n)>>4  & 0xF)), \
  ('0' + ((n)     & 0xF))

/* Construct a string literal encoding the version number. */
#ifdef COMPILER_VERSION
char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";

/* Construct a string literal encoding the version number components. */
#elif defined(COMPILER_VERSION_MAJOR)
char const info_version[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
  COMPILER_VERSION_MAJOR,
# ifdef COMPILER_VERSION_MINOR
  '.', COMPILER_VERSION_MINOR,
#  ifdef COMPILER_VERSION_PATCH
   '.', COMPILER_VERSION_PATCH,
#   ifdef COMPILER_VERSION_TWEAK
    '.', COMPILER_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct a string literal encoding the internal version number. */
#ifdef COMPILER_VERSION_INTERNAL
char const info_version_internal[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
  'i','n','t','e','r','n','a','l','[',
  COMPILER_VERSION_INTERNAL,']','\0'};
#elif defined(COMPILER_VERSION_INTERNAL_STR)
char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
#endif

/* Construct a string literal encoding the version number components. */
#ifdef SIMULATE_VERSION_MAJOR
char const info_simulate_version[] = {
  'I', 'N', 'F', 'O', ':',
  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
  SIMULATE_VERSION_MAJOR,
# ifdef SIMULATE_VERSION_MINOR
  '.', SIMULATE_VERSION_MINOR,
#  ifdef SIMULATE_VERSION_PATCH
   '.', SIMULATE_VERSION_PATCH,
#   ifdef SIMULATE_VERSION_TWEAK
    '.', SIMULATE_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";



#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
#  if defined(__INTEL_CXX11_MODE__)
#    if defined(__cpp_aggregate_nsdmi)
#      define CXX_STD 201402L
#    else
#      define CXX_STD 201103L
#    endif
#  else
#    define CXX_STD 199711L
#  endif
#elif defined(_MSC_VER) && defined(_MSVC_LANG)
#  define CXX_STD _MSVC_LANG
#else
#  define CXX_STD __cplusplus
#endif

const char* info_language_standard_default = "INFO" ":" "standard_default["
#if CXX_STD > 202002L
  "23"
#elif CXX_STD > 201703L
  "20"
#elif CXX_STD >= 201703L
  "17"
#elif CXX_STD >= 201402L
  "14"
#elif CXX_STD >= 201103L
  "11"
#else
  "98"
#endif
"]";

const char* info_language_extensions_default = "INFO" ":" "extensions_default["
#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
     defined(__TI_COMPILER_VERSION__)) &&                                     \
  !defined(__STRICT_ANSI__)
  "ON"
#else
  "OFF"
#endif
"]";

/*--------------------------------------------------------------------------*/

int main(int argc, char* argv[])
{
  int require = 0;
  require += info_compiler[argc];
  require += info_platform[argc];
  require += info_arch[argc];
#ifdef COMPILER_VERSION_MAJOR
  require += info_version[argc];
#endif
#ifdef COMPILER_VERSION_INTERNAL
  require += info_version_internal[argc];
#endif
#ifdef SIMULATE_ID
  require += info_simulate[argc];
#endif
#ifdef SIMULATE_VERSION_MAJOR
  require += info_simulate_version[argc];
#endif
#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
  require += info_cray[argc];
#endif
  require += info_language_standard_default[argc];
  require += info_language_extensions_default[argc];
  (void)argv;
  return require;
}
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(336):  set(COMPILER_DESCRIPTION Compiler: D:/new_msys64/ucrt64/bin/clang++.exe 
Build flags: 
Id flags:  
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(343):  if(MSYS Makefiles MATCHES Visual Studio ([0-9]+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(566):  elseif(MSYS Makefiles MATCHES Xcode )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(668):  elseif(MSYS Makefiles MATCHES Green Hills MULTI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(706):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(707):  execute_process(COMMAND D:/new_msys64/ucrt64/bin/clang++.exe     CMakeCXXCompilerId.cpp WORKING_DIRECTORY D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX OUTPUT_VARIABLE CMAKE_CXX_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_CXX_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_CXX_COMPILER_ID_RESULT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(719):  if( MATCHES exec: [^
]*\((/[^,
]*/cpp),CMakeFortranCompilerId.F )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(728):  if(CMAKE_CXX_COMPILER_ID_RESULT OR CMAKE_CXX_COMPILER_ID_OUTPUT MATCHES warning #5117: Bad # preprocessor line )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(761):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(763):  string(APPEND _CMAKE_CXX_COMPILER_ID_LOG Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: D:/new_msys64/ucrt64/bin/clang++.exe 
Build flags: 
Id flags:  

The output was:
0


 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(774):  string(REGEX REPLACE ([][]) [\1] _glob_id_dir D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(775):  file(GLOB files RELATIVE D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/* D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/*.xctest/* D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/*.framework/* )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(787):  list(REMOVE_ITEM files CMakeCXXCompilerId.cpp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(788):  set(COMPILER_CXX_PRODUCED_FILES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(789):  foreach(file a.exe;tmp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(790):  if(NOT IS_DIRECTORY D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/a.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(791):  list(APPEND COMPILER_CXX_PRODUCED_FILES a.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(792):  string(APPEND _CMAKE_CXX_COMPILER_ID_LOG Compilation of the CXX compiler identification source " CMakeCXXCompilerId.cpp" produced "a.exe"

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(790):  if(NOT IS_DIRECTORY D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/tmp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(798):  if(NOT COMPILER_CXX_PRODUCED_FILES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(806):  set(COMPILER_CXX_PRODUCED_OUTPUT  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(810):  set(COMPILER_CXX_PRODUCED_FILES a.exe PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(811):  set(COMPILER_CXX_PRODUCED_OUTPUT  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(812):  set(_CMAKE_CXX_COMPILER_ID_LOG Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: D:/new_msys64/ucrt64/bin/clang++.exe 
Build flags: 
Id flags:  

The output was:
0


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.exe"

 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(9):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(CXX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(819):  foreach(vendor  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_CXX_COMPILER_ID  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(11):  if(NOT CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(12):  foreach(file a.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(13):  CMAKE_DETERMINE_COMPILER_ID_CHECK(CXX D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/a.exe CMakeCXXCompilerId.cpp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(831):  if(NOT CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(833):  set(COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(834):  set(COMPILER_VERSION )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(835):  set(COMPILER_VERSION_MAJOR 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(836):  set(COMPILER_VERSION_MINOR 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(837):  set(COMPILER_VERSION_PATCH 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(838):  set(COMPILER_VERSION_TWEAK 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(839):  set(COMPILER_VERSION_INTERNAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(840):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(841):  set(HAVE_COMPILER_VERSION_MINOR 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(842):  set(HAVE_COMPILER_VERSION_PATCH 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(843):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(844):  set(COMPILER_WRAPPER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(845):  set(DIGIT_VALUE_1 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(846):  set(DIGIT_VALUE_2 10 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(847):  set(DIGIT_VALUE_3 100 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(848):  set(DIGIT_VALUE_4 1000 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(849):  set(DIGIT_VALUE_5 10000 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(850):  set(DIGIT_VALUE_6 100000 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(851):  set(DIGIT_VALUE_7 1000000 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(852):  set(DIGIT_VALUE_8 10000000 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(853):  set(PLATFORM_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(854):  set(ARCHITECTURE_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(855):  set(SIMULATE_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(856):  set(SIMULATE_VERSION )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(857):  set(CMAKE_CXX_COMPILER_ID_STRING_REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\[[^]]*\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(858):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(859):  file(STRINGS D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/a.exe CMAKE_CXX_COMPILER_ID_STRINGS LIMIT_COUNT 38  REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\[[^]]*\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(862):  if(NOT CMAKE_CXX_COMPILER_ID_STRINGS STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(863):  break()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(868):  if(CMAKE_CXX_COMPILER_ID_STRINGS STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(877):  list(FILTER CMAKE_CXX_COMPILER_ID_STRINGS EXCLUDE REGEX \?<Constant \" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(882):  if(CMAKE_CXX_COMPILER_ID_STRINGS MATCHES (.)I.N.F.O.:. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(888):  string(REGEX MATCHALL INFO:[A-Za-z0-9_]+\[([^]"]*)\] CMAKE_CXX_COMPILER_ID_STRINGS INFO:compiler[Clang];INFO:platform[MinGW];INFO:arch[];INFO:standard_default[17];INFO:extensions_default[ON];INFO:compiler_version[00000016.00000000.00000005] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(892):  list(REMOVE_DUPLICATES CMAKE_CXX_COMPILER_ID_STRINGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(894):  set(COMPILER_ID_TWICE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(895):  foreach(info INFO:compiler[Clang];INFO:platform[MinGW];INFO:arch[];INFO:standard_default[17];INFO:extensions_default[ON];INFO:compiler_version[00000016.00000000.00000005] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(896):  if(INFO:compiler[Clang] MATCHES INFO:compiler\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(897):  if(COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(900):  set(COMPILER_ID Clang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(902):  if(INFO:compiler[Clang] MATCHES INFO:platform\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(905):  if(INFO:compiler[Clang] MATCHES INFO:arch\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(908):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(912):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(918):  foreach(comp MAJOR MINOR PATCH TWEAK )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler[Clang] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(927):  if(INFO:compiler[Clang] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(930):  if(INFO:compiler[Clang] MATCHES INFO:simulate\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(933):  if(INFO:compiler[Clang] MATCHES INFO:simulate_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(937):  if(INFO:compiler[Clang] MATCHES INFO:qnxnto\[\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(940):  if(INFO:compiler[Clang] MATCHES INFO:standard_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(943):  if(INFO:compiler[Clang] MATCHES INFO:extensions_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(896):  if(INFO:platform[MinGW] MATCHES INFO:compiler\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(902):  if(INFO:platform[MinGW] MATCHES INFO:platform\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(903):  set(PLATFORM_ID MinGW )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(905):  if(INFO:platform[MinGW] MATCHES INFO:arch\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(908):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(912):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(918):  foreach(comp MAJOR MINOR PATCH TWEAK )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:platform[MinGW] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(927):  if(INFO:platform[MinGW] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(930):  if(INFO:platform[MinGW] MATCHES INFO:simulate\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(933):  if(INFO:platform[MinGW] MATCHES INFO:simulate_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(937):  if(INFO:platform[MinGW] MATCHES INFO:qnxnto\[\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(940):  if(INFO:platform[MinGW] MATCHES INFO:standard_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(943):  if(INFO:platform[MinGW] MATCHES INFO:extensions_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(896):  if(INFO:arch[] MATCHES INFO:compiler\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(902):  if(INFO:arch[] MATCHES INFO:platform\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(905):  if(INFO:arch[] MATCHES INFO:arch\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(906):  set(ARCHITECTURE_ID  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(908):  if(INFO:arch[] MATCHES INFO:compiler_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(912):  if(INFO:arch[] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(918):  foreach(comp MAJOR MINOR PATCH TWEAK )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:arch[] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(927):  if(INFO:arch[] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(930):  if(INFO:arch[] MATCHES INFO:simulate\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(933):  if(INFO:arch[] MATCHES INFO:simulate_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(937):  if(INFO:arch[] MATCHES INFO:qnxnto\[\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(940):  if(INFO:arch[] MATCHES INFO:standard_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(943):  if(INFO:arch[] MATCHES INFO:extensions_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(896):  if(INFO:standard_default[17] MATCHES INFO:compiler\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(902):  if(INFO:standard_default[17] MATCHES INFO:platform\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(905):  if(INFO:standard_default[17] MATCHES INFO:arch\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(908):  if(INFO:standard_default[17] MATCHES INFO:compiler_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(912):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(918):  foreach(comp MAJOR MINOR PATCH TWEAK )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:standard_default[17] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(927):  if(INFO:standard_default[17] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(930):  if(INFO:standard_default[17] MATCHES INFO:simulate\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(933):  if(INFO:standard_default[17] MATCHES INFO:simulate_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(937):  if(INFO:standard_default[17] MATCHES INFO:qnxnto\[\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(940):  if(INFO:standard_default[17] MATCHES INFO:standard_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(941):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 17 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(943):  if(INFO:standard_default[17] MATCHES INFO:extensions_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(896):  if(INFO:extensions_default[ON] MATCHES INFO:compiler\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(902):  if(INFO:extensions_default[ON] MATCHES INFO:platform\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(905):  if(INFO:extensions_default[ON] MATCHES INFO:arch\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(908):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(912):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(918):  foreach(comp MAJOR MINOR PATCH TWEAK )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(927):  if(INFO:extensions_default[ON] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(930):  if(INFO:extensions_default[ON] MATCHES INFO:simulate\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(933):  if(INFO:extensions_default[ON] MATCHES INFO:simulate_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(937):  if(INFO:extensions_default[ON] MATCHES INFO:qnxnto\[\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(940):  if(INFO:extensions_default[ON] MATCHES INFO:standard_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(943):  if(INFO:extensions_default[ON] MATCHES INFO:extensions_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(944):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT ON )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(896):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(902):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:platform\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(905):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:arch\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(908):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(909):  string(REGEX REPLACE ^0+([0-9]+) \1 COMPILER_VERSION 00000016.00000000.00000005 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(910):  string(REGEX REPLACE \.0+([0-9]) .\1 COMPILER_VERSION 16.00000000.00000005 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(912):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_internal\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(918):  foreach(comp MAJOR MINOR PATCH TWEAK )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MAJOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MAJOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MAJOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MAJOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MAJOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MAJOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MAJOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MAJOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MAJOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MINOR_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MINOR_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MINOR_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MINOR_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MINOR_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MINOR_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MINOR_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MINOR_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_MINOR_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_PATCH_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_PATCH_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_PATCH_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_PATCH_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_PATCH_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_PATCH_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_PATCH_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_PATCH_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_PATCH_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(919):  foreach(digit 1 2 3 4 5 6 7 8 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_TWEAK_digit_1\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_TWEAK_digit_2\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_TWEAK_digit_3\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_TWEAK_digit_4\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_TWEAK_digit_5\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_TWEAK_digit_6\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_TWEAK_digit_7\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_TWEAK_digit_8\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(920):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_version_TWEAK_digit_9\[([0-9])\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(927):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:compiler_wrapper\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(930):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:simulate\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(933):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:simulate_version\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(937):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:qnxnto\[\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(940):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:standard_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(943):  if(INFO:compiler_version[00000016.00000000.00000005] MATCHES INFO:extensions_default\[([^]"]*)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(949):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(963):  if(WIN32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(965):  file(READ D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/a.exe peoffsethex LIMIT 1 OFFSET 60 HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(966):  if(NOT peoffsethex STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(967):  string(SUBSTRING 80 0 1 peoffsethex1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(968):  string(SUBSTRING 80 1 1 peoffsethex2 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(969):  set(peoffsetexpression 8 * 16 + 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(970):  string(REPLACE a 10 peoffsetexpression 8 * 16 + 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(971):  string(REPLACE b 11 peoffsetexpression 8 * 16 + 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(972):  string(REPLACE c 12 peoffsetexpression 8 * 16 + 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(973):  string(REPLACE d 13 peoffsetexpression 8 * 16 + 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(974):  string(REPLACE e 14 peoffsetexpression 8 * 16 + 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(975):  string(REPLACE f 15 peoffsetexpression 8 * 16 + 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(976):  math(EXPR peoffset 8 * 16 + 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(978):  file(READ D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/a.exe peheader LIMIT 6 OFFSET 128 HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(979):  if(peheader STREQUAL 50450000a201 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(981):  elseif(peheader STREQUAL 50450000a301 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(983):  elseif(peheader STREQUAL 50450000a601 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(985):  elseif(peheader STREQUAL 50450000a801 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(992):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(993):  set(CMAKE_CXX_COMPILER_ID Clang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(994):  set(CMAKE_CXX_PLATFORM_ID MinGW )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(995):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(996):  set(MSVC_CXX_ARCHITECTURE_ID  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(997):  set(CMAKE_CXX_COMPILER_VERSION 16.0.5 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(998):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(999):  set(CMAKE_CXX_SIMULATE_ID  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1000):  set(CMAKE_CXX_SIMULATE_VERSION  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1004):  if(CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1006):  string(APPEND _CMAKE_CXX_COMPILER_ID_LOG The CXX compiler identification is Clang, found in:
   D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/a.exe

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1015):  set(_CMAKE_CXX_COMPILER_ID_LOG Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: D:/new_msys64/ucrt64/bin/clang++.exe 
Build flags: 
Id flags:  

The output was:
0


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.exe"

The CXX compiler identification is Clang, found in:
  D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/a.exe

 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1019):  if(NOT CMAKE_EXECUTABLE_FORMAT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1020):  file(READ D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/a.exe CMAKE_EXECUTABLE_MAGIC LIMIT 4 HEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1023):  if(4d5a9000 STREQUAL 7f454c46 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1033):  if(4d5a9000 MATCHES feedface|cefaedfe|feedfacf|cffaedfe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1038):  if(4d5a9000 MATCHES ^01(df|f7) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1044):  set(CMAKE_CXX_COMPILER_ID Clang PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1045):  set(CMAKE_CXX_PLATFORM_ID MinGW PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1046):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1047):  set(MSVC_CXX_ARCHITECTURE_ID  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1049):  set(CMAKE_CXX_COMPILER_VERSION 16.0.5 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1050):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1051):  set(CMAKE_CXX_COMPILER_WRAPPER  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1052):  set(CMAKE_CXX_SIMULATE_ID  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1053):  set(CMAKE_CXX_SIMULATE_VERSION  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1054):  set(COMPILER_QNXNTO  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1055):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 17 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(1056):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT ON PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(17):  message(CONFIGURE_LOG Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: D:/new_msys64/ucrt64/bin/clang++.exe 
Build flags: 
Id flags:  

The output was:
0


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.exe"

The CXX compiler identification is Clang, found in:
  D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CompilerIdCXX/a.exe

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(18):  unset(_CMAKE_CXX_COMPILER_ID_LOG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(65):  if(CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(66):  break()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(69):  if(CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(70):  break()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(76):  if(CMAKE_CXX_COMPILER_ID_TOOL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(79):  elseif(NOT CMAKE_CXX_COMPILER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(84):  if(CMAKE_CXX_COMPILER AND NOT CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(91):  if(NOT CMAKE_CXX_COMPILER_ID AND MSYS Makefiles MATCHES Green Hills MULTI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(96):  if(lang STREQUAL CUDA AND CMAKE_CXX_COMPILER_ID STREQUAL NVIDIA AND NOT CMAKE_CXX_COMPILER_VERSION )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(112):  if(lang STREQUAL Swift AND CMAKE_CXX_COMPILER AND NOT CMAKE_CXX_COMPILER_VERSION )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(136):  if(lang STREQUAL ISPC AND CMAKE_CXX_COMPILER AND NOT CMAKE_CXX_COMPILER_VERSION )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(157):  if(lang STREQUAL Fortran AND CMAKE_CXX_COMPILER_ID STREQUAL LCC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(177):  if(COMPILER_QNXNTO AND ( CMAKE_CXX_COMPILER_ID STREQUAL GNU OR CMAKE_CXX_COMPILER_ID STREQUAL LCC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(194):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(212):  if(NOT CMAKE_EXECUTABLE_FORMAT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(213):  set(CMAKE_EXECUTABLE_FORMAT Unknown CACHE INTERNAL Executable file format )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(216):  if(( CMAKE_GENERATOR MATCHES ^Ninja OR ( ( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles|WMake ) ) AND MSVC_CXX_ARCHITECTURE_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(226):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(227):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(230):  set(_variant  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(231):  if(xClang STREQUAL xClang OR xClang STREQUAL xIntelLLVM )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(233):  if(x STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(249):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(250):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT GNU )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(263):  if(CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(264):  if(CMAKE_CXX_COMPILER_VERSION )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(265):  set(_version  16.0.5 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(269):  if(CMAKE_CXX_COMPILER_ARCHITECTURE_ID AND xClang STREQUAL xIAR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(271):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(272):  set(_archid  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(274):  message(STATUS The CXX compiler identification is  Clang 16.0.5 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(276):  unset(_archid )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(277):  unset(_version )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(278):  unset(_variant )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(283):  if(lang STREQUAL Fortran AND CMAKE_CXX_COMPILER_ID STREQUAL XL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(287):  set(CMAKE_CXX_COMPILER_ID Clang PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(288):  set(CMAKE_CXX_PLATFORM_ID MinGW PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(289):  set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(290):  set(MSVC_CXX_ARCHITECTURE_ID  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(292):  set(CMAKE_CXX_XCODE_ARCHS  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(293):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(294):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT GNU PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(295):  set(CMAKE_CXX_COMPILER_VERSION 16.0.5 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(296):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(297):  set(CMAKE_CXX_COMPILER_WRAPPER  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(298):  set(CMAKE_CXX_SIMULATE_ID  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(299):  set(CMAKE_CXX_SIMULATE_VERSION  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(300):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 17 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(301):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT ON PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(302):  set(CMAKE_CXX_COMPILER_PRODUCED_OUTPUT  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerId.cmake(303):  set(CMAKE_CXX_COMPILER_PRODUCED_FILES a.exe PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(128):  _cmake_find_compiler_sysroot(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompiler.cmake(156):  if(CMAKE_CXX_COMPILER_ID STREQUAL GNU OR CMAKE_CXX_COMPILER_ID STREQUAL LCC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(131):  if(CMAKE_CXX_COMPILER_ID STREQUAL GNU )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(153):  if(NOT _CMAKE_TOOLCHAIN_LOCATION )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(154):  get_filename_component(_CMAKE_TOOLCHAIN_LOCATION D:/new_msys64/ucrt64/bin/clang++.exe PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(166):  if(NOT _CMAKE_TOOLCHAIN_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(168):  if(Clang MATCHES GNU|Clang|QCC|LCC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(169):  get_filename_component(COMPILER_BASENAME D:/new_msys64/ucrt64/bin/clang++.exe NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(170):  if(COMPILER_BASENAME MATCHES ^(.+-)?(clang\+\+|[gc]\+\+|clang-cl)(-[0-9]+(\.[0-9]+)*)?(-[^.]+)?(\.exe)?$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(171):  set(_CMAKE_TOOLCHAIN_PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(172):  set(_CMAKE_TOOLCHAIN_SUFFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(173):  set(_CMAKE_COMPILER_SUFFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(186):  if( MATCHES (.+-)?llvm-$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(201):  set(_CMAKE_PROCESSING_LANGUAGE CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(202):  include(CMakeFindBinUtils )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(23):  cmake_policy(PUSH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(24):  cmake_policy(SET CMP0057 NEW )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(27):  function(__resolve_tool_path CMAKE_TOOL SEARCH_PATH DOCSTRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(60):  __resolve_tool_path(CMAKE_LINKER D:/new_msys64/ucrt64/bin Default Linker )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(29):  if(CMAKE_LINKER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(61):  __resolve_tool_path(CMAKE_MT D:/new_msys64/ucrt64/bin Default Manifest Tool )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(29):  if(CMAKE_MT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(63):  set(_CMAKE_TOOL_VARS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(66):  if(( x STREQUAL xMSVC AND ( xGNU STREQUAL xMSVC OR NOT xClang STREQUAL xClang ) ) OR xClang STREQUAL xMSVC OR ( CMAKE_HOST_WIN32 AND xClang STREQUAL xPGI ) OR ( CMAKE_HOST_WIN32 AND xClang STREQUAL xNVIDIA ) OR ( CMAKE_HOST_WIN32 AND xCXX STREQUAL xISPC ) OR ( CMAKE_GENERATOR MATCHES Visual Studio AND NOT CMAKE_VS_PLATFORM_NAME STREQUAL Tegra-Android ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(96):  elseif(xClang MATCHES ^x(Open)?Watcom$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(101):  elseif(xClang MATCHES ^xIAR$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(149):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(150):  if(CMAKE_C_COMPILER_EXTERNAL_TOOLCHAIN )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(153):  if(CMAKE_CXX_COMPILER_EXTERNAL_TOOLCHAIN )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(158):  set(_CMAKE_AR_NAMES ar )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(159):  set(_CMAKE_RANLIB_NAMES ranlib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(160):  set(_CMAKE_STRIP_NAMES strip )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(161):  set(_CMAKE_LINKER_NAMES ld )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(162):  set(_CMAKE_NM_NAMES nm )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(163):  set(_CMAKE_OBJDUMP_NAMES objdump )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(164):  set(_CMAKE_OBJCOPY_NAMES objcopy )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(165):  set(_CMAKE_READELF_NAMES readelf )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(166):  set(_CMAKE_DLLTOOL_NAMES dlltool )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(167):  set(_CMAKE_ADDR2LINE_NAMES addr2line )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(170):  if(Clang STREQUAL Clang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(171):  if(x STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(173):  elseif(NOT APPLE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(174):  list(PREPEND _CMAKE_LINKER_NAMES ld.lld )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(176):  if(APPLE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(182):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(183):  list(PREPEND _CMAKE_AR_NAMES llvm-ar )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(185):  list(PREPEND _CMAKE_RANLIB_NAMES llvm-ranlib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(186):  if(16.0.5 VERSION_GREATER_EQUAL 11 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(188):  list(PREPEND _CMAKE_STRIP_NAMES llvm-strip )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(190):  list(PREPEND _CMAKE_NM_NAMES llvm-nm )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(191):  if(16.0.5 VERSION_GREATER_EQUAL 9 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(193):  list(PREPEND _CMAKE_OBJDUMP_NAMES llvm-objdump )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(195):  list(PREPEND _CMAKE_OBJCOPY_NAMES llvm-objcopy )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(196):  list(PREPEND _CMAKE_READELF_NAMES llvm-readelf )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(197):  list(PREPEND _CMAKE_DLLTOOL_NAMES llvm-dlltool )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(198):  list(PREPEND _CMAKE_ADDR2LINE_NAMES llvm-addr2line )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(204):  list(APPEND _CMAKE_TOOL_VARS AR RANLIB STRIP LINKER NM OBJDUMP OBJCOPY READELF DLLTOOL ADDR2LINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(207):  foreach(_CMAKE_TOOL IN LISTS _CMAKE_TOOL_VARS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(209):  set(_CMAKE_AR_FIND_NAMES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(210):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_AR_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_AR_FIND_NAMES llvm-ar llvm-ar llvm-ar llvm-ar )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_AR_FIND_NAMES ar ar ar ar )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(218):  list(REMOVE_DUPLICATES _CMAKE_AR_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(220):  find_program(CMAKE_AR NAMES llvm-ar;ar HINTS D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(221):  unset(_CMAKE_AR_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(209):  set(_CMAKE_RANLIB_FIND_NAMES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(210):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_RANLIB_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_RANLIB_FIND_NAMES llvm-ranlib llvm-ranlib llvm-ranlib llvm-ranlib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_RANLIB_FIND_NAMES ranlib ranlib ranlib ranlib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(218):  list(REMOVE_DUPLICATES _CMAKE_RANLIB_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(220):  find_program(CMAKE_RANLIB NAMES llvm-ranlib;ranlib HINTS D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(221):  unset(_CMAKE_RANLIB_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(209):  set(_CMAKE_STRIP_FIND_NAMES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(210):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_STRIP_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_STRIP_FIND_NAMES llvm-strip llvm-strip llvm-strip llvm-strip )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_STRIP_FIND_NAMES strip strip strip strip )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(218):  list(REMOVE_DUPLICATES _CMAKE_STRIP_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(220):  find_program(CMAKE_STRIP NAMES llvm-strip;strip HINTS D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(221):  unset(_CMAKE_STRIP_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(209):  set(_CMAKE_LINKER_FIND_NAMES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(210):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_LINKER_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_LINKER_FIND_NAMES ld.lld ld.lld ld.lld ld.lld )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_LINKER_FIND_NAMES ld ld ld ld )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(218):  list(REMOVE_DUPLICATES _CMAKE_LINKER_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(220):  find_program(CMAKE_LINKER NAMES ld.lld;ld HINTS D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(221):  unset(_CMAKE_LINKER_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(209):  set(_CMAKE_NM_FIND_NAMES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(210):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_NM_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_NM_FIND_NAMES llvm-nm llvm-nm llvm-nm llvm-nm )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_NM_FIND_NAMES nm nm nm nm )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(218):  list(REMOVE_DUPLICATES _CMAKE_NM_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(220):  find_program(CMAKE_NM NAMES llvm-nm;nm HINTS D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(221):  unset(_CMAKE_NM_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(209):  set(_CMAKE_OBJDUMP_FIND_NAMES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(210):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_OBJDUMP_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_OBJDUMP_FIND_NAMES llvm-objdump llvm-objdump llvm-objdump llvm-objdump )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_OBJDUMP_FIND_NAMES objdump objdump objdump objdump )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(218):  list(REMOVE_DUPLICATES _CMAKE_OBJDUMP_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(220):  find_program(CMAKE_OBJDUMP NAMES llvm-objdump;objdump HINTS D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(221):  unset(_CMAKE_OBJDUMP_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(209):  set(_CMAKE_OBJCOPY_FIND_NAMES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(210):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_OBJCOPY_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_OBJCOPY_FIND_NAMES llvm-objcopy llvm-objcopy llvm-objcopy llvm-objcopy )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_OBJCOPY_FIND_NAMES objcopy objcopy objcopy objcopy )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(218):  list(REMOVE_DUPLICATES _CMAKE_OBJCOPY_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(220):  find_program(CMAKE_OBJCOPY NAMES llvm-objcopy;objcopy HINTS D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(221):  unset(_CMAKE_OBJCOPY_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(209):  set(_CMAKE_READELF_FIND_NAMES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(210):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_READELF_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_READELF_FIND_NAMES llvm-readelf llvm-readelf llvm-readelf llvm-readelf )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_READELF_FIND_NAMES readelf readelf readelf readelf )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(218):  list(REMOVE_DUPLICATES _CMAKE_READELF_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(220):  find_program(CMAKE_READELF NAMES llvm-readelf;readelf HINTS D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(221):  unset(_CMAKE_READELF_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(209):  set(_CMAKE_DLLTOOL_FIND_NAMES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(210):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_DLLTOOL_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_DLLTOOL_FIND_NAMES llvm-dlltool llvm-dlltool llvm-dlltool llvm-dlltool )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_DLLTOOL_FIND_NAMES dlltool dlltool dlltool dlltool )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(218):  list(REMOVE_DUPLICATES _CMAKE_DLLTOOL_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(220):  find_program(CMAKE_DLLTOOL NAMES llvm-dlltool;dlltool HINTS D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(221):  unset(_CMAKE_DLLTOOL_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(209):  set(_CMAKE_ADDR2LINE_FIND_NAMES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(210):  foreach(_CMAKE_TOOL_NAME IN LISTS _CMAKE_ADDR2LINE_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_ADDR2LINE_FIND_NAMES llvm-addr2line llvm-addr2line llvm-addr2line llvm-addr2line )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(211):  list(APPEND _CMAKE_ADDR2LINE_FIND_NAMES addr2line addr2line addr2line addr2line )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(218):  list(REMOVE_DUPLICATES _CMAKE_ADDR2LINE_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(220):  find_program(CMAKE_ADDR2LINE NAMES llvm-addr2line;addr2line HINTS D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(221):  unset(_CMAKE_ADDR2LINE_FIND_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(224):  if(NOT CMAKE_RANLIB )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(229):  if(CMAKE_PLATFORM_HAS_INSTALLNAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(240):  foreach(_CMAKE_TOOL IN LISTS _CMAKE_TOOL_VARS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(241):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_AR PROPERTY TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(242):  if(_CMAKE_TOOL_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(243):  mark_as_advanced(CMAKE_AR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(245):  unset(_CMAKE_AR_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(241):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_RANLIB PROPERTY TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(242):  if(_CMAKE_TOOL_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(243):  mark_as_advanced(CMAKE_RANLIB )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(245):  unset(_CMAKE_RANLIB_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(241):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_STRIP PROPERTY TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(242):  if(_CMAKE_TOOL_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(243):  mark_as_advanced(CMAKE_STRIP )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(245):  unset(_CMAKE_STRIP_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(241):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_LINKER PROPERTY TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(242):  if(_CMAKE_TOOL_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(243):  mark_as_advanced(CMAKE_LINKER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(245):  unset(_CMAKE_LINKER_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(241):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_NM PROPERTY TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(242):  if(_CMAKE_TOOL_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(243):  mark_as_advanced(CMAKE_NM )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(245):  unset(_CMAKE_NM_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(241):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_OBJDUMP PROPERTY TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(242):  if(_CMAKE_TOOL_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(243):  mark_as_advanced(CMAKE_OBJDUMP )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(245):  unset(_CMAKE_OBJDUMP_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(241):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_OBJCOPY PROPERTY TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(242):  if(_CMAKE_TOOL_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(243):  mark_as_advanced(CMAKE_OBJCOPY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(245):  unset(_CMAKE_OBJCOPY_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(241):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_READELF PROPERTY TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(242):  if(_CMAKE_TOOL_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(243):  mark_as_advanced(CMAKE_READELF )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(245):  unset(_CMAKE_READELF_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(241):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_DLLTOOL PROPERTY TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(242):  if(_CMAKE_TOOL_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(243):  mark_as_advanced(CMAKE_DLLTOOL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(245):  unset(_CMAKE_DLLTOOL_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(241):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_ADDR2LINE PROPERTY TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(242):  if(_CMAKE_TOOL_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(243):  mark_as_advanced(CMAKE_ADDR2LINE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(245):  unset(_CMAKE_ADDR2LINE_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(247):  unset(_CMAKE_TOOL_VARS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(248):  unset(_CMAKE_TOOL_CACHED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(249):  unset(_CMAKE_TOOL_NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(250):  unset(_CMAKE_TOOL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(252):  if(xClang MATCHES ^xIAR$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeFindBinUtils.cmake(259):  cmake_policy(POP )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(203):  include(Compiler/Clang-FindBinUtils OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(1):  if(NOT DEFINED _CMAKE_PROCESSING_LANGUAGE OR _CMAKE_PROCESSING_LANGUAGE STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(8):  string(REGEX MATCH ^([0-9]+) __version_x 16.0.5 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(14):  string(REGEX MATCH ^([0-9]+\.[0-9]+) __version_x_y 16.0.5 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(18):  get_filename_component(__clang_hint_1 D:/new_msys64/ucrt64/bin/clang++.exe REALPATH )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(19):  get_filename_component(__clang_hint_1 D:/new_msys64/ucrt64/bin/clang++.exe DIRECTORY )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(21):  get_filename_component(__clang_hint_2 D:/new_msys64/ucrt64/bin/clang++.exe DIRECTORY )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(23):  set(__clang_hints D:/new_msys64/ucrt64/bin D:/new_msys64/ucrt64/bin )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(26):  find_program(CMAKE_CXX_COMPILER_AR NAMES llvm-ar-16.0 llvm-ar-16 llvm-ar HINTS D:/new_msys64/ucrt64/bin;D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH DOC LLVM archiver )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(34):  mark_as_advanced(CMAKE_CXX_COMPILER_AR )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(37):  find_program(CMAKE_CXX_COMPILER_RANLIB NAMES llvm-ranlib-16.0 llvm-ranlib-16 llvm-ranlib HINTS D:/new_msys64/ucrt64/bin;D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH DOC Generate index for LLVM archive )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(45):  mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(48):  find_program(CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS NAMES clang-scan-deps-16.0 clang-scan-deps-16 clang-scan-deps HINTS D:/new_msys64/ucrt64/bin;D:/new_msys64/ucrt64/bin NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH DOC `clang-scan-deps` dependency scanner )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake(56):  mark_as_advanced(CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(204):  unset(_CMAKE_PROCESSING_LANGUAGE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(206):  if(CMAKE_CXX_COMPILER_SYSROOT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(210):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(211):  set(_SET_CMAKE_CXX_COMPILER_SYSROOT  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(214):  if(CMAKE_CXX_COMPILER_ARCHITECTURE_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(217):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(218):  set(_SET_CMAKE_CXX_COMPILER_ARCHITECTURE_ID  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(221):  if(MSVC_CXX_ARCHITECTURE_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(226):  if(CMAKE_CXX_XCODE_ARCHS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(232):  configure_file(D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompiler.cmake.in D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake(237):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER D:/new_msys64/ucrt64/bin/clang++.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID Clang )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION 16.0.5 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 17 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT ON )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX98_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX11_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX14_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX17_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(14):  set(CMAKE_CXX20_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX23_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX_PLATFORM_ID MinGW )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(18):  set(CMAKE_CXX_SIMULATE_ID  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(19):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT GNU )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(20):  set(CMAKE_CXX_SIMULATE_VERSION  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(25):  set(CMAKE_AR D:/new_msys64/ucrt64/bin/llvm-ar.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(26):  set(CMAKE_CXX_COMPILER_AR D:/new_msys64/ucrt64/bin/llvm-ar.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(27):  set(CMAKE_RANLIB D:/new_msys64/ucrt64/bin/llvm-ranlib.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(28):  set(CMAKE_CXX_COMPILER_RANLIB D:/new_msys64/ucrt64/bin/llvm-ranlib.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(29):  set(CMAKE_LINKER D:/new_msys64/ucrt64/bin/ld.lld.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(30):  set(CMAKE_MT  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(31):  set(CMAKE_COMPILER_IS_GNUCXX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(32):  set(CMAKE_CXX_COMPILER_LOADED 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(33):  set(CMAKE_CXX_COMPILER_WORKS )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(34):  set(CMAKE_CXX_ABI_COMPILED )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(36):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(38):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(39):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(40):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(42):  foreach(lang C OBJC OBJCXX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(43):  if(CMAKE_C_COMPILER_ID_RUN )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(43):  if(CMAKE_OBJC_COMPILER_ID_RUN )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(43):  if(CMAKE_OBJCXX_COMPILER_ID_RUN )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(50):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(51):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(54):  set(CMAKE_CXX_SIZEOF_DATA_PTR  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(55):  set(CMAKE_CXX_COMPILER_ABI  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(56):  set(CMAKE_CXX_BYTE_ORDER  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(57):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(59):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(63):  if(CMAKE_CXX_COMPILER_ABI )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(67):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(71):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(72):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(80):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(81):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(82):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(83):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(14):  set(APPLE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(15):  set(UNIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(16):  set(CYGWIN )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(17):  set(MSYS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(18):  set(WIN32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(19):  set(BSD )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(20):  set(LINUX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(22):  function(_cmake_record_install_prefix )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(40):  include(CMakeGenericSystem )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(4):  include(CMakeInitializeConfigs )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(4):  include_guard(GLOBAL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(8):  function(cmake_initialize_per_config_variable _PREFIX _DOCSTRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(6):  set(CMAKE_SHARED_LIBRARY_C_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(7):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(8):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(9):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(10):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(11):  set(CMAKE_INCLUDE_FLAG_C -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(12):  set(CMAKE_LIBRARY_PATH_FLAG -L )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(13):  set(CMAKE_LIBRARY_PATH_TERMINATOR  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(14):  set(CMAKE_LINK_LIBRARY_FLAG -l )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(16):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(17):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(18):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(19):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .so )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(21):  set(CMAKE_EXECUTABLE_SUFFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(22):  set(CMAKE_DL_LIBS dl )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(24):  set(CMAKE_FIND_LIBRARY_PREFIXES lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(25):  set(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(31):  set(CMAKE_LINK_LIBRARY_USING_DEFAULT_SUPPORTED TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(33):  if(NOT DEFINED CMAKE_AUTOGEN_ORIGIN_DEPENDS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(34):  set(CMAKE_AUTOGEN_ORIGIN_DEPENDS ON )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(36):  if(NOT DEFINED CMAKE_AUTOMOC_COMPILER_PREDEFINES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(37):  set(CMAKE_AUTOMOC_COMPILER_PREDEFINES ON )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(39):  if(NOT DEFINED CMAKE_AUTOMOC_PATH_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(40):  set(CMAKE_AUTOMOC_PATH_PREFIX OFF )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(42):  if(NOT DEFINED CMAKE_AUTOMOC_MACRO_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(43):  set(CMAKE_AUTOMOC_MACRO_NAMES Q_OBJECT Q_GADGET Q_NAMESPACE Q_NAMESPACE_EXPORT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(47):  set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(49):  set(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(51):  set(CMAKE_SKIP_INSTALL_RPATH NO CACHE BOOL If set, runtime paths are not added when installing shared libraries, but are added when building. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(54):  set(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(56):  if(DEFINED ENV{CMAKE_COLOR_DIAGNOSTICS} AND NOT DEFINED CACHE{CMAKE_COLOR_DIAGNOSTICS} )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(60):  if(CMAKE_GENERATOR MATCHES Make )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(61):  if(NOT DEFINED CMAKE_COLOR_DIAGNOSTICS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(62):  set(CMAKE_COLOR_MAKEFILE ON CACHE BOOL Enable/Disable color output during build. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(64):  mark_as_advanced(CMAKE_COLOR_MAKEFILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(66):  if(DEFINED CMAKE_RULE_MESSAGES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(69):  if(DEFINED CMAKE_TARGET_MESSAGES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(74):  if(NOT DEFINED CMAKE_EXPORT_COMPILE_COMMANDS AND CMAKE_GENERATOR MATCHES Ninja|Unix Makefiles )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(88):  function(GetDefaultWindowsPrefixBase var )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(180):  if(NOT DEFINED CMAKE_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(181):  set(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(185):  if(CMAKE_HOST_UNIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(188):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(189):  GetDefaultWindowsPrefixBase(CMAKE_GENERIC_PROGRAM_FILES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(95):  if(MSYS Makefiles MATCHES (Win64|IA64) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(97):  elseif( MATCHES x64 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(99):  elseif( MATCHES ARM64 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(101):  elseif(MSYS Makefiles MATCHES ARM )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(103):  elseif( MATCHES ARM )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(105):  elseif( STREQUAL 8 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(107):  elseif( MATCHES (amd64|ia64) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(111):  if(NOT arch_hint )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(112):  set(arch_hint x86 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(133):  set(_PREFIX_ENV_VAR ProgramFiles )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(135):  if(C:\Program Files STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(139):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(141):  if(C:\Program Files STREQUAL C:\Program Files )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(144):  if(NOT x86 STREQUAL x64 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(146):  set(_PREFIX_ENV_VAR ProgramFiles(x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(164):  if(NOT C:\Program Files (x86) STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(165):  file(TO_CMAKE_PATH C:\Program Files (x86) _base )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(172):  set(CMAKE_GENERIC_PROGRAM_FILES C:/Program Files (x86) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(190):  set(CMAKE_INSTALL_PREFIX C:/Program Files (x86)/openVCB CACHE PATH Install path prefix, prepended onto install directories. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(193):  set(CMAKE_GENERIC_PROGRAM_FILES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(198):  set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Unspecified )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(200):  mark_as_advanced(CMAKE_SKIP_RPATH CMAKE_SKIP_INSTALL_RPATH CMAKE_VERBOSE_MAKEFILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(43):  set(CMAKE_SYSTEM_INFO_FILE Platform/Windows )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(45):  include(Platform/Windows OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(1):  set(WIN32 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(3):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(5):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsPhone )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(7):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsStore )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(11):  set(CMAKE_STATIC_LIBRARY_PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(12):  set(CMAKE_STATIC_LIBRARY_SUFFIX .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(13):  set(CMAKE_SHARED_LIBRARY_PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(14):  set(CMAKE_SHARED_LIBRARY_SUFFIX .dll )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(15):  set(CMAKE_IMPORT_LIBRARY_PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(16):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(17):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(18):  set(CMAKE_LINK_LIBRARY_SUFFIX .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(19):  set(CMAKE_DL_LIBS  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(20):  set(CMAKE_EXTRA_LINK_EXTENSIONS .targets )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(22):  set(CMAKE_FIND_LIBRARY_PREFIXES  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(23):  set(CMAKE_FIND_LIBRARY_SUFFIXES .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(27):  if(CMAKE_GENERATOR MATCHES Borland )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(34):  if(CMAKE_GENERATOR MATCHES NMake )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(39):  include(Platform/WindowsPaths )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(10):  if(__WINDOWS_PATHS_INCLUDED )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(13):  set(__WINDOWS_PATHS_INCLUDED 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(31):  set(_programfiles  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(32):  foreach(v ProgramW6432 ProgramFiles ProgramFiles(x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramW6432} )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles} )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles(x86)} )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files (x86) _env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files (x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(39):  if(DEFINED ENV{SystemDrive} )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(40):  foreach(d Program Files Program Files (x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files (x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files (x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(46):  if(_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(47):  list(REMOVE_DUPLICATES _programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(48):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files;C:/Program Files (x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(50):  unset(_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(53):  get_filename_component(_CMAKE_INSTALL_DIR D:/new_msys64/ucrt64/share/cmake PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(54):  get_filename_component(_CMAKE_INSTALL_DIR D:/new_msys64/ucrt64/share PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(55):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH D:/new_msys64/ucrt64 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(57):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(59):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files (x86)/openVCB )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(63):  if(CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(70):  _cmake_record_install_prefix()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(23):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_VALUE C:/Program Files (x86)/openVCB PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(24):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_VALUE  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(25):  set(icount 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(26):  set(scount 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(27):  foreach(value IN LISTS CMAKE_SYSTEM_PREFIX_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(28):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(31):  if(value STREQUAL CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(28):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(31):  if(value STREQUAL CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(28):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(31):  if(value STREQUAL CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(28):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(29):  math(EXPR icount 0+1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(31):  if(value STREQUAL CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(35):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_COUNT 1 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(36):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_COUNT 0 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(72):  if(CMAKE_CROSSCOMPILING AND NOT CMAKE_HOST_SYSTEM_NAME MATCHES Windows )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(77):  list(APPEND CMAKE_SYSTEM_INCLUDE_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(81):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(82):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files (x86)/openVCB/bin )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(85):  if(CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(91):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH D:/new_msys64/ucrt64/bin /bin )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(96):  list(APPEND CMAKE_SYSTEM_PROGRAM_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(47):  if(NOT _INCLUDED_SYSTEM_INFO_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(61):  if(CMAKE_EXTRA_GENERATOR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(71):  if(NOT CMAKE_MODULE_EXISTS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(72):  set(CMAKE_SHARED_MODULE_PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(73):  set(CMAKE_SHARED_MODULE_SUFFIX .dll )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(77):  set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(11):  include(CMakeLanguageInformation )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(15):  if(UNIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(17):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(18):  set(CMAKE_CXX_OUTPUT_EXTENSION .obj )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(21):  set(_INCLUDED_FILE 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(24):  if(CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(25):  include(Compiler/Clang-CXX OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(1):  include(Compiler/Clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(6):  if(__COMPILER_CLANG )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(9):  set(__COMPILER_CLANG 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(11):  include(Compiler/CMakeCommonCompilerMacros )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(8):  set(__COMPILER_CMAKE_COMMON_COMPILER_MACROS 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(32):  macro(__compiler_check_default_language_standard lang stdver1 std1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(71):  macro(cmake_record_c_compile_features )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(106):  macro(cmake_record_cxx_compile_features )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(143):  macro(cmake_record_cuda_compile_features )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(180):  macro(cmake_record_hip_compile_features )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(13):  set(__pch_header_C c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(14):  set(__pch_header_CXX c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(15):  set(__pch_header_OBJC objective-c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(16):  set(__pch_header_OBJCXX objective-c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(18):  if(x STREQUAL xMSVC OR x STREQUAL xMSVC OR x STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(23):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(24):  include(Compiler/GNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(6):  if(__COMPILER_GNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(9):  set(__COMPILER_GNU 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(11):  include(Compiler/CMakeCommonCompilerMacros )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(6):  return()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(13):  set(__pch_header_C c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(14):  set(__pch_header_CXX c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(15):  set(__pch_header_OBJC objective-c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(16):  set(__pch_header_OBJCXX objective-c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(18):  macro(__compiler_gnu lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(26):  macro(__compiler_clang lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(126):  macro(__compiler_clang_cxx_standards lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(2):  __compiler_clang(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(27):  __compiler_gnu(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(20):  set(CMAKE_CXX_VERBOSE_FLAG -v )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(21):  set(CMAKE_CXX_COMPILE_OPTIONS_WARNING_AS_ERROR -Werror )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(22):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC -fPIC )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(23):  set(_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER NO )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(24):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(25):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE -fPIE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(28):  set(_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER YES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(29):  set(CMAKE_CXX_LINK_OPTIONS_PIE -fPIE -pie )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(30):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE -no-pie )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(32):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(33):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(35):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS -fPIC )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(36):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(37):  set(CMAKE_CXX_COMPILE_OPTIONS_SYSROOT --sysroot= )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(39):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG -Wl, )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(40):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG_SEP , )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(46):  get_property(_IN_TC GLOBAL PROPERTY IN_TRY_COMPILE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(47):  if(CMAKE_CXX_COMPILER_ID STREQUAL GNU AND _IN_TC AND NOT CMAKE_FORCE_DEPFILES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(48):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(52):  set(CMAKE_DEPFILE_FLAGS_CXX -MD -MT <DEP_TARGET> -MF <DEP_FILE> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(56):  string(APPEND CMAKE_CXX_FLAGS_INIT   )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(57):  string(APPEND CMAKE_CXX_FLAGS_DEBUG_INIT  -g )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(58):  string(APPEND CMAKE_CXX_FLAGS_MINSIZEREL_INIT  -Os -DNDEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(59):  string(APPEND CMAKE_CXX_FLAGS_RELEASE_INIT  -O3 -DNDEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(60):  string(APPEND CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT  -O2 -g -DNDEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(61):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(62):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(63):  if(NOT APPLE OR NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(64):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(67):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(68):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER NO )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(73):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.5 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(74):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(76):  set(__lto_flags  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(83):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 11.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(84):  list(APPEND __lto_flags -flto=auto )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(95):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.7 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(99):  list(APPEND __lto_flags -fno-fat-lto-objects )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(102):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO -flto=auto;-fno-fat-lto-objects )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(111):  set(CMAKE_CXX_ARCHIVE_CREATE_IPO "D:/new_msys64/ucrt64/bin/llvm-ar.exe" cr <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(115):  set(CMAKE_CXX_ARCHIVE_APPEND_IPO "D:/new_msys64/ucrt64/bin/llvm-ar.exe" r <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(119):  set(CMAKE_CXX_ARCHIVE_FINISH_IPO "D:/new_msys64/ucrt64/bin/llvm-ranlib.exe" <TARGET> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(124):  if(CXX STREQUAL CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(125):  set(CMAKE_CXX_COMPILER_PREDEFINES_COMMAND D:/new_msys64/ucrt64/bin/clang++.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(126):  if(CMAKE_CXX_COMPILER_ARG1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(131):  list(APPEND CMAKE_CXX_COMPILER_PREDEFINES_COMMAND -dM -E -c D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(134):  if(NOT xCXX STREQUAL xFortran )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(135):  set(CMAKE_PCH_EXTENSION .gch )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(136):  if(NOT CMAKE_GENERATOR MATCHES Xcode )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(137):  set(CMAKE_PCH_PROLOGUE #pragma GCC system_header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(139):  set(CMAKE_CXX_COMPILE_OPTIONS_INVALID_PCH -Winvalid-pch )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(140):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH -include <PCH_HEADER> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(141):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH -x c++-header -include <PCH_HEADER> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(146):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 4.9 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(147):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS -fdiagnostics-color=always )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(148):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS_OFF -fno-diagnostics-color )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(28):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE -fPIE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(31):  if(APPLE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(35):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(36):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(37):  if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(40):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(41):  set(CMAKE_CXX_COMPILE_OPTIONS_TARGET --target= )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(42):  set(CMAKE_CXX_COMPILE_OPTIONS_EXTERNAL_TOOLCHAIN --gcc-toolchain= )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(44):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG -Xlinker   )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(45):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG_SEP )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(47):  if(CMAKE_CXX_COMPILER_TARGET AND CXX STREQUAL CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(55):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(56):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(58):  string(COMPARE EQUAL Clang AppleClang __is_apple_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(59):  string(COMPARE EQUAL Clang FujitsuClang __is_fujitsu_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(64):  set(_CMAKE_LTO_THIN TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(65):  if(__is_apple_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(69):  elseif(__is_fujitsu_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(71):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(72):  if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.9 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(77):  if(_CMAKE_LTO_THIN )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(78):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO -flto=thin )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(83):  if(ANDROID AND NOT CMAKE_ANDROID_NDK_VERSION VERSION_GREATER_EQUAL 22 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(88):  if(ANDROID OR __is_apple_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(91):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(92):  set(__ar D:/new_msys64/ucrt64/bin/llvm-ar.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(93):  set(__ranlib D:/new_msys64/ucrt64/bin/llvm-ranlib.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(96):  set(CMAKE_CXX_ARCHIVE_CREATE_IPO "D:/new_msys64/ucrt64/bin/llvm-ar.exe" cr <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(100):  set(CMAKE_CXX_ARCHIVE_APPEND_IPO "D:/new_msys64/ucrt64/bin/llvm-ar.exe" r <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(104):  set(CMAKE_CXX_ARCHIVE_FINISH_IPO "D:/new_msys64/ucrt64/bin/llvm-ranlib.exe" <TARGET> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(108):  set(CMAKE_PCH_EXTENSION .pch )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(109):  if(NOT CMAKE_GENERATOR MATCHES Xcode )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(110):  set(CMAKE_PCH_PROLOGUE #pragma clang system_header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(112):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 11.0.0 AND NOT __is_apple_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(113):  set(CMAKE_CXX_COMPILE_OPTIONS_INSTANTIATE_TEMPLATES_PCH -fpch-instantiate-templates )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(115):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH -Xclang -include-pch -Xclang <PCH_FILE> -Xclang -include -Xclang <PCH_HEADER> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(116):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH -Xclang -emit-pch -Xclang -include -Xclang <PCH_HEADER> -x c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(119):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 2.6 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(120):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS -fcolor-diagnostics )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(121):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS_OFF -fno-color-diagnostics )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(3):  __compiler_clang_cxx_standards(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(127):  if(xGNU STREQUAL xGNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(128):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 2.1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(129):  set(CMAKE_CXX98_STANDARD_COMPILE_OPTION -std=c++98 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(130):  set(CMAKE_CXX98_EXTENSION_COMPILE_OPTION -std=gnu++98 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(133):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(134):  set(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT ON )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(135):  set(CMAKE_CXX11_STANDARD_COMPILE_OPTION -std=c++11 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(136):  set(CMAKE_CXX11_EXTENSION_COMPILE_OPTION -std=gnu++11 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(137):  set(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT ON )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(143):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.5 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(144):  set(CMAKE_CXX14_STANDARD_COMPILE_OPTION -std=c++14 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(145):  set(CMAKE_CXX14_EXTENSION_COMPILE_OPTION -std=gnu++14 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(146):  set(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT ON )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(153):  set(_clang_version_std17 5.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(154):  if(CMAKE_SYSTEM_NAME STREQUAL Android )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(158):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 5.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(159):  set(CMAKE_CXX17_STANDARD_COMPILE_OPTION -std=c++17 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(160):  set(CMAKE_CXX17_EXTENSION_COMPILE_OPTION -std=gnu++17 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(166):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 11.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(167):  set(CMAKE_CXX20_STANDARD_COMPILE_OPTION -std=c++20 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(168):  set(CMAKE_CXX20_EXTENSION_COMPILE_OPTION -std=gnu++20 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(174):  unset(_clang_version_std17 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(176):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 12.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(177):  set(CMAKE_CXX23_STANDARD_COMPILE_OPTION -std=c++2b )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(178):  set(CMAKE_CXX23_EXTENSION_COMPILE_OPTION -std=gnu++2b )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(181):  if(x STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(194):  __compiler_check_default_language_standard(CXX 2.1 98 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(33):  set(__std_ver_pairs 2.1;98; )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(34):  string(REGEX REPLACE  *; *   __std_ver_pairs 2.1;98; )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(35):  string(REGEX MATCHALL [^ ]+ [^ ]+ __std_ver_pairs 2.1 98  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(39):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 2.1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(40):  if(NOT CMAKE_CXX_COMPILER_FORCED )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(41):  if(NOT CMAKE_CXX_STANDARD_COMPUTED_DEFAULT OR NOT DEFINED CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(44):  set(CMAKE_CXX_STANDARD_DEFAULT 17 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(45):  set(CMAKE_CXX_EXTENSIONS_DEFAULT ON )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(67):  unset(__std_ver_pairs )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(5):  if(xGNU STREQUAL xGNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(6):  if(( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles|WMake AND CMAKE_DEPFILE_FLAGS_CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(10):  set(CMAKE_CXX_DEPFILE_FORMAT gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(11):  set(CMAKE_CXX_DEPENDS_USE_COMPILER TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(14):  set(CMAKE_CXX_COMPILE_OPTIONS_EXPLICIT_LANGUAGE -x c++ )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(15):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY_INLINES_HIDDEN -fvisibility-inlines-hidden )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(18):  cmake_policy(GET CMP0025 appleClangPolicy )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(19):  if(APPLE AND NOT appleClangPolicy STREQUAL NEW )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(23):  if(xGNU STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(33):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 16.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(34):  if(xGNU STREQUAL xGNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(35):  string(CONCAT CMAKE_EXPERIMENTAL_CXX_SCANDEP_SOURCE "D:/new_msys64/ucrt64/bin/clang-scan-deps.exe"  -format=p1689  --  <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS>  -x c++ <SOURCE> -c -o <OBJECT>  -MT <DYNDEP_FILE>  -MD -MF <DEP_FILE>  > <DYNDEP_FILE> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(44):  set(CMAKE_EXPERIMENTAL_CXX_MODULE_MAP_FORMAT clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(45):  set(CMAKE_EXPERIMENTAL_CXX_MODULE_MAP_FLAG @<MODULE_MAP_FILE> )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(28):  set(CMAKE_BASE_NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME D:/new_msys64/ucrt64/bin/clang++.exe NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(31):  if(CMAKE_COMPILER_IS_GNUCXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(37):  if(CMAKE_SYSTEM_PROCESSOR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(38):  if(CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(39):  include(Platform/Windows-Clang-CXX-AMD64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(41):  if(NOT _INCLUDED_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(42):  include(Platform/Windows-clang++-AMD64 OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(47):  if(CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(48):  include(Platform/Windows-Clang-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(1):  include(Platform/Windows-Clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(6):  if(__WINDOWS_CLANG )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(9):  set(__WINDOWS_CLANG 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(11):  set(__pch_header_C c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(12):  set(__pch_header_CXX c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(13):  set(__pch_header_OBJC objective-c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(14):  set(__pch_header_OBJCXX objective-c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(16):  macro(__windows_compiler_clang_gnu lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(138):  macro(__enable_llvm_rc_preprocessing clang_option_prefix extra_pp_flags )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(160):  macro(__verify_same_language_values variable )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(176):  if(x STREQUAL xMSVC OR x STREQUAL xMSVC OR x STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(248):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(249):  include(Platform/Windows-GNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(6):  if(__WINDOWS_GNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(9):  set(__WINDOWS_GNU 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(11):  set(MINGW 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(13):  set(CMAKE_IMPORT_LIBRARY_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(14):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(15):  set(CMAKE_SHARED_MODULE_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(16):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(18):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(19):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .dll.a )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .dll )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(21):  set(CMAKE_SHARED_MODULE_SUFFIX .dll )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(22):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(24):  set(CMAKE_EXTRA_LINK_EXTENSIONS .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(26):  set(CMAKE_FIND_LIBRARY_PREFIXES lib  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(27):  set(CMAKE_FIND_LIBRARY_SUFFIXES .dll.a .a .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(28):  set(CMAKE_C_STANDARD_LIBRARIES_INIT -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(29):  set(CMAKE_CXX_STANDARD_LIBRARIES_INIT -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(31):  set(CMAKE_DL_LIBS  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(32):  set(CMAKE_LIBRARY_PATH_FLAG -L )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(33):  set(CMAKE_LINK_LIBRARY_FLAG -l )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(34):  set(CMAKE_LINK_DEF_FILE_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(35):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(37):  set(CMAKE_GNULD_IMAGE_VERSION -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(41):  set(__WINDOWS_GNU_LD_RESPONSE 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(42):  execute_process(COMMAND ld -v OUTPUT_VARIABLE _help ERROR_VARIABLE _help )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(43):  if(GNU ld (GNU Binutils) 2.40
 MATCHES GNU ld .* 2\.1[1-6] )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(50):  if(NOT DEFINED _CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(51):  execute_process(COMMAND D:/new_msys64/ucrt64/bin/ld.lld.exe --help OUTPUT_VARIABLE __linker_help ERROR_VARIABLE __linker_help )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(54):  if(__linker_help MATCHES --push-state AND __linker_help MATCHES --pop-state )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(56):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(57):  set(_CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED FALSE CACHE INTERNAL linker supports push/pop state )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(59):  unset(__linker_help )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(62):  if(_CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(66):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(67):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:--whole-archive <LINK_ITEM> LINKER:--no-whole-archive )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(71):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(76):  set(CMAKE_LINK_GROUP_USING_RESCAN LINKER:--start-group LINKER:--end-group )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(77):  set(CMAKE_LINK_GROUP_USING_RESCAN_SUPPORTED TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(80):  macro(__windows_compiler_gnu lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(169):  macro(__windows_compiler_gnu_abi lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(250):  __enable_llvm_rc_preprocessing( -x c )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(140):  if(CMAKE_RC_COMPILER_INIT MATCHES llvm-rc OR CMAKE_RC_COMPILER MATCHES llvm-rc )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(251):  macro(__windows_compiler_clang_base lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(256):  macro(__windows_compiler_clang lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(2):  set(_COMPILE_CXX_MSVC  -TP )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(3):  __windows_compiler_clang(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(257):  if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(259):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(260):  set(CMAKE_CXX_COMPILE_OPTIONS_TARGET --target= )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(262):  __windows_compiler_clang_base(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(252):  __windows_compiler_gnu(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(83):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(84):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(85):  set(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(91):  foreach(type SHARED_LIBRARY SHARED_MODULE EXE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(92):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(93):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(92):  set(CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(93):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(92):  set(CMAKE_EXE_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(93):  set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(97):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(98):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(99):  set(_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER NO )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(100):  set(CMAKE_CXX_LINK_OPTIONS_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(101):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(102):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(104):  if(NOT CMAKE_GENERATOR STREQUAL MSYS Makefiles OR CMAKE_NEED_RESPONSE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(111):  execute_process(COMMAND D:/new_msys64/ucrt64/bin/clang++.exe --version OUTPUT_VARIABLE _ver ERROR_VARIABLE _ver )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(112):  if(clang version 16.0.5
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: D:/new_msys64/ucrt64/bin
 MATCHES \(GCC\) 3\. )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(126):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(128):  set(CMAKE_CXX_RESPONSE_FILE_LINK_FLAG @ )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(132):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_CXX_COMPILER> <CMAKE_SHARED_MODULE_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <OBJECTS> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(134):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <OBJECTS> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(136):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(138):  set(CMAKE_CXX_CREATE_WIN32_EXE -mwindows )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(140):  list(APPEND CMAKE_CXX_ABI_FILES Platform/Windows-GNU-CXX-ABI )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(145):  if(@ STREQUAL @ AND NOT CMAKE_GENERATOR MATCHES Ninja )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(146):  foreach(rule CREATE_SHARED_MODULE CREATE_SHARED_LIBRARY LINK_EXECUTABLE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(151):  string(REPLACE <OBJECTS> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_CXX_COMPILER> <CMAKE_SHARED_MODULE_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <OBJECTS> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(153):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_COMMAND> -E rm -f <OBJECT_DIR>/objects.a <CMAKE_AR> qc <OBJECT_DIR>/objects.a <OBJECTS> <CMAKE_CXX_COMPILER> <CMAKE_SHARED_MODULE_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(151):  string(REPLACE <OBJECTS> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <OBJECTS> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(153):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_COMMAND> -E rm -f <OBJECT_DIR>/objects.a <CMAKE_AR> qc <OBJECT_DIR>/objects.a <OBJECTS> <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(151):  string(REPLACE <OBJECTS> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive CMAKE_CXX_LINK_EXECUTABLE <CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(153):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_COMMAND> -E rm -f <OBJECT_DIR>/objects.a <CMAKE_AR> qc <OBJECT_DIR>/objects.a <OBJECTS> <CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(161):  if(NOT CMAKE_RC_COMPILER_INIT AND NOT CMAKE_GENERATOR_RC )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(162):  set(_CMAKE_RC_COMPILER_LIST windres windres )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(163):  set(_CMAKE_RC_COMPILER_FALLBACK windres )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(166):  enable_language(RC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(11):  if(NOT CMAKE_RC_COMPILER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(13):  if(NOT  STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(25):  if(CMAKE_GENERATOR_RC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(32):  if(CMAKE_RC_COMPILER_INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(35):  elseif(NOT _CMAKE_RC_COMPILER_LIST )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(40):  find_program(CMAKE_RC_COMPILER NAMES windres;windres DOC RC compiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(41):  if(_CMAKE_RC_COMPILER_FALLBACK AND NOT CMAKE_RC_COMPILER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(44):  unset(_CMAKE_RC_COMPILER_FALLBACK )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(45):  unset(_CMAKE_RC_COMPILER_LIST )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(48):  mark_as_advanced(CMAKE_RC_COMPILER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(50):  get_filename_component(_CMAKE_RC_COMPILER_NAME_WE D:/new_msys64/ucrt64/bin/windres.exe NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(51):  if(_CMAKE_RC_COMPILER_NAME_WE STREQUAL windres )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(52):  set(CMAKE_RC_OUTPUT_EXTENSION .obj )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(58):  configure_file(D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCCompiler.cmake.in D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake(60):  set(CMAKE_RC_COMPILER_ENV_VAR RC )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(1):  set(CMAKE_RC_COMPILER D:/new_msys64/ucrt64/bin/windres.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(2):  set(CMAKE_RC_COMPILER_ARG1  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(3):  set(CMAKE_RC_COMPILER_LOADED 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(4):  set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(5):  set(CMAKE_RC_OUTPUT_EXTENSION .obj )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(6):  set(CMAKE_RC_COMPILER_ENV_VAR RC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(10):  set(CMAKE_BASE_NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(11):  if(CMAKE_RC_COMPILER MATCHES windres[^/]*$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(12):  set(CMAKE_BASE_NAME windres )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(16):  set(CMAKE_SYSTEM_AND_RC_COMPILER_INFO_FILE D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-windres.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(18):  include(Platform/Windows-windres OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-windres.cmake(1):  set(CMAKE_RC_COMPILE_OBJECT <CMAKE_RC_COMPILER> -O coff <DEFINES> <INCLUDES> <FLAGS> <SOURCE> <OBJECT> )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(25):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(31):  set(CMAKE_RC_FLAGS_INIT   )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(33):  cmake_initialize_per_config_variable(CMAKE_RC_FLAGS Flags for Windows Resource Compiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_RC_FLAGS  CACHE STRING Flags for Windows Resource Compiler during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_RC_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Release )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_DEBUG  CACHE STRING Flags for Windows Resource Compiler during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELEASE  CACHE STRING Flags for Windows Resource Compiler during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_MINSIZEREL  CACHE STRING Flags for Windows Resource Compiler during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELWITHDEBINFO  CACHE STRING Flags for Windows Resource Compiler during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(38):  set(CMAKE_RC_FLAG_REGEX ^[-/](D|I) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(42):  set(CMAKE_INCLUDE_FLAG_RC -I  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(44):  if(NOT CMAKE_RC_COMPILE_OBJECT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(50):  set(CMAKE_RC_INFORMATION_LOADED 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestRCCompiler.cmake(13):  set(CMAKE_RC_COMPILER_WORKS 1 CACHE INTERNAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(5):  if(x STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(11):  elseif(xGNU STREQUAL xGNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(12):  if(( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles|WMake AND CMAKE_DEPFILE_FLAGS_CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(16):  set(CMAKE_CXX_DEPFILE_FORMAT gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(17):  set(CMAKE_CXX_DEPENDS_USE_COMPILER TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(50):  if(NOT _INCLUDED_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(56):  if(CMAKE_CXX_COMPILER_WRAPPER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(64):  if(NOT _INCLUDED_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(68):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(81):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(87):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(97):  if(NOT CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(101):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(102):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(105):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(106):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(108):  if(NOT CMAKE_CXX_LINK_OPTIONS_PIE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(109):  set(CMAKE_CXX_LINK_OPTIONS_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(111):  if(NOT CMAKE_CXX_LINK_OPTIONS_NO_PIE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(112):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(115):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_DLL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(116):  set(CMAKE_CXX_COMPILE_OPTIONS_DLL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(119):  if(NOT CMAKE_SHARED_LIBRARY_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(120):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(123):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(124):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(127):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(128):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(131):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(132):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(135):  if(NOT CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(136):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(139):  if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(140):  set(CMAKE_EXE_EXPORTS_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(143):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(144):  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(147):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(148):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(151):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(152):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(155):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(156):  set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(159):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(160):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(163):  if(NOT CMAKE_INCLUDE_FLAG_CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(164):  set(CMAKE_INCLUDE_FLAG_CXX -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(170):  if(NOT CMAKE_MODULE_EXISTS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(171):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(172):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS -shared )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(176):  if(NOT CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(180):  if(NOT CMAKE_SHARED_MODULE_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(181):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(185):  foreach(type SHARED_LIBRARY SHARED_MODULE EXE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_EXE_LINK_STATIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(196):  if(CMAKE_EXECUTABLE_FORMAT STREQUAL ELF )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(209):  set(CMAKE_CXX_FLAGS_INIT    )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(211):  cmake_initialize_per_config_variable(CMAKE_CXX_FLAGS Flags used by the CXX compiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_CXX_FLAGS  CACHE STRING Flags used by the CXX compiler during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Release )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -g _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_DEBUG -g CACHE STRING Flags used by the CXX compiler during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O3 -DNDEBUG _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELEASE -O3 -DNDEBUG CACHE STRING Flags used by the CXX compiler during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -Os -DNDEBUG _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_MINSIZEREL -Os -DNDEBUG CACHE STRING Flags used by the CXX compiler during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O2 -g -DNDEBUG _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO -O2 -g -DNDEBUG CACHE STRING Flags used by the CXX compiler during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(213):  if(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(214):  set(CMAKE_CXX_STANDARD_LIBRARIES -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 CACHE STRING Libraries linked by default with all C++ applications. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(216):  mark_as_advanced(CMAKE_CXX_STANDARD_LIBRARIES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(219):  if(NOT CMAKE_CXX_COMPILER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_COMPILER_LAUNCHER} )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(224):  if(NOT CMAKE_CXX_LINKER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_LINKER_LAUNCHER} )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(229):  include(CMakeCommonLanguageInclude )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT   )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT   )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT   )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_EXE_LINKER_FLAGS  CACHE STRING Flags used by the linker during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Release )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_SHARED_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of shared libraries during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Release )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of shared libraries during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of shared libraries during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of shared libraries during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_MODULE_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of modules during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Release )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of modules during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of modules during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of modules during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of modules during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_STATIC_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of static libraries during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Release )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of static libraries during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of static libraries during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of static libraries during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL D:/new_msys64/usr/bin/make.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(258):  if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(264):  if(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(271):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_CREATE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(274):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_APPEND )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(277):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_FINISH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(282):  if(NOT CMAKE_CXX_COMPILE_OBJECT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(283):  set(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE> )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(287):  if(NOT CMAKE_CXX_LINK_EXECUTABLE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(292):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(296):  set(CMAKE_CXX_INFORMATION_LOADED 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(5):  if(CMAKE_CXX_COMPILER_FORCED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(12):  include(CMakeTestCompilerCommon )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCompilerCommon.cmake(5):  function(PrintTestCompilerStatus LANG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCompilerCommon.cmake(12):  function(PrintTestCompilerResult TYPE MSG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCompilerCommon.cmake(17):  macro(__TestCompiler_setTryCompileTargetType )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCompilerCommon.cmake(29):  macro(__TestCompiler_restoreTryCompileTargetType )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(15):  set(__CMAKE_SAVED_TRY_COMPILE_TARGET_TYPE  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(16):  if(_CMAKE_FEATURE_DETECTION_TARGET_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(22):  unset(CMAKE_CXX_COMPILER_WORKS CACHE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(25):  include(D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(9):  include(D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(9):  function(cmake_parse_implicit_include_line line lang id_var log_var state_var )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(177):  function(cmake_parse_implicit_include_info text lang dir_var log_var state_var )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(10):  include(D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(4):  cmake_policy(PUSH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(5):  cmake_policy(SET CMP0053 NEW )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(6):  cmake_policy(SET CMP0054 NEW )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(17):  function(CMAKE_PARSE_IMPLICIT_LINK_INFO text lib_var dir_var fwk_var log_var obj_regex )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(280):  cmake_policy(POP )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(11):  include(D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake(4):  cmake_policy(PUSH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake(5):  cmake_policy(SET CMP0053 NEW )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake(6):  cmake_policy(SET CMP0054 NEW )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake(12):  function(cmake_parse_library_architecture lang implicit_dirs implicit_objs output_var )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake(54):  cmake_policy(POP )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(12):  include(CMakeTestCompilerCommon )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCompilerCommon.cmake(5):  function(PrintTestCompilerStatus LANG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCompilerCommon.cmake(12):  function(PrintTestCompilerResult TYPE MSG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCompilerCommon.cmake(17):  macro(__TestCompiler_setTryCompileTargetType )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCompilerCommon.cmake(29):  macro(__TestCompiler_restoreTryCompileTargetType )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(14):  function(CMAKE_DETERMINE_COMPILER_ABI lang src )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(26):  CMAKE_DETERMINE_COMPILER_ABI(CXX D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(15):  if(NOT DEFINED CMAKE_CXX_ABI_COMPILED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(16):  message(CHECK_START Detecting CXX compiler ABI info )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(19):  set(BIN D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeDetermineCompilerABI_CXX.bin )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(20):  set(CMAKE_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(21):  set(COMPILE_DEFINITIONS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(22):  if(DEFINED CMAKE_CXX_VERBOSE_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(23):  set(CMAKE_FLAGS -DEXE_LINKER_FLAGS=-v )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(24):  set(COMPILE_DEFINITIONS -v )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(26):  if(DEFINED CMAKE_CXX_VERBOSE_COMPILE_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(29):  if(lang STREQUAL CUDA )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(37):  if(NOT xClang STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(40):  list(APPEND CMAKE_FLAGS -DCMAKE_CXX_STANDARD_LIBRARIES= )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(42):  __TestCompiler_setTryCompileTargetType()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCompilerCommon.cmake(18):  if(NOT CMAKE_TRY_COMPILE_TARGET_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCompilerCommon.cmake(19):  if(MSYS Makefiles MATCHES Green Hills MULTI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(45):  string(REGEX REPLACE (^| )-Werror([= ][^ ]*)?( |$)   CMAKE_CXX_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(50):  set(_orig_lc_all  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(51):  set(_orig_lc_messages  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(52):  set(_orig_lang en_CA.UTF-8 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(53):  set(ENV{LC_ALL} C )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(54):  set(ENV{LC_MESSAGES} C )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(55):  set(ENV{LANG} C )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(57):  try_compile(CMAKE_CXX_ABI_COMPILED SOURCES D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp CMAKE_FLAGS -DEXE_LINKER_FLAGS=-v;-DCMAKE_CXX_STANDARD_LIBRARIES= --no-warn-unused-cli COMPILE_DEFINITIONS -v OUTPUT_VARIABLE OUTPUT COPY_FILE D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeDetermineCompilerABI_CXX.bin COPY_FILE_ERROR _copy_error __CMAKE_INTERNAL ABI )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(1):  cmake_minimum_required(VERSION 3.26.4.0 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(2):  cmake_policy(SET CMP0126 OLD )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(3):  cmake_policy(SET CMP0128 OLD )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(4):  project(CMAKE_TRY_COMPILE CXX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(1):  set(CMAKE_HOST_SYSTEM Windows-10.0.22621 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(2):  set(CMAKE_HOST_SYSTEM_NAME Windows )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(3):  set(CMAKE_HOST_SYSTEM_VERSION 10.0.22621 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(4):  set(CMAKE_HOST_SYSTEM_PROCESSOR AMD64 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(8):  set(CMAKE_SYSTEM Windows-10.0.22621 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(9):  set(CMAKE_SYSTEM_NAME Windows )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(10):  set(CMAKE_SYSTEM_VERSION 10.0.22621 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(11):  set(CMAKE_SYSTEM_PROCESSOR AMD64 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(13):  set(CMAKE_CROSSCOMPILING FALSE )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeSystem.cmake(15):  set(CMAKE_SYSTEM_LOADED 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(19):  set(CMAKE_EFFECTIVE_SYSTEM_NAME Windows )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(21):  include(Platform/Windows-Initialize OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(23):  set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER D:/new_msys64/ucrt64/bin/clang++.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID Clang )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION 16.0.5 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 17 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT ON )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX98_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX11_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX14_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX17_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(14):  set(CMAKE_CXX20_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX23_COMPILE_FEATURES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX_PLATFORM_ID MinGW )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(18):  set(CMAKE_CXX_SIMULATE_ID  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(19):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT GNU )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(20):  set(CMAKE_CXX_SIMULATE_VERSION  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(25):  set(CMAKE_AR D:/new_msys64/ucrt64/bin/llvm-ar.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(26):  set(CMAKE_CXX_COMPILER_AR D:/new_msys64/ucrt64/bin/llvm-ar.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(27):  set(CMAKE_RANLIB D:/new_msys64/ucrt64/bin/llvm-ranlib.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(28):  set(CMAKE_CXX_COMPILER_RANLIB D:/new_msys64/ucrt64/bin/llvm-ranlib.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(29):  set(CMAKE_LINKER D:/new_msys64/ucrt64/bin/ld.lld.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(30):  set(CMAKE_MT  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(31):  set(CMAKE_COMPILER_IS_GNUCXX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(32):  set(CMAKE_CXX_COMPILER_LOADED 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(33):  set(CMAKE_CXX_COMPILER_WORKS )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(34):  set(CMAKE_CXX_ABI_COMPILED )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(36):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(38):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(39):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(40):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(42):  foreach(lang C OBJC OBJCXX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(43):  if(CMAKE_C_COMPILER_ID_RUN )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(43):  if(CMAKE_OBJC_COMPILER_ID_RUN )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(43):  if(CMAKE_OBJCXX_COMPILER_ID_RUN )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(50):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(51):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(54):  set(CMAKE_CXX_SIZEOF_DATA_PTR  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(55):  set(CMAKE_CXX_COMPILER_ABI  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(56):  set(CMAKE_CXX_BYTE_ORDER  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(57):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(59):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(63):  if(CMAKE_CXX_COMPILER_ABI )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(67):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(71):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(72):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(80):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(81):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(82):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(83):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(14):  set(APPLE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(15):  set(UNIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(16):  set(CYGWIN )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(17):  set(MSYS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(18):  set(WIN32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(19):  set(BSD )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(20):  set(LINUX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(22):  function(_cmake_record_install_prefix )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(40):  include(CMakeGenericSystem )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(4):  include(CMakeInitializeConfigs )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(4):  include_guard(GLOBAL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(8):  function(cmake_initialize_per_config_variable _PREFIX _DOCSTRING )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(6):  set(CMAKE_SHARED_LIBRARY_C_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(7):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(8):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(9):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(10):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(11):  set(CMAKE_INCLUDE_FLAG_C -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(12):  set(CMAKE_LIBRARY_PATH_FLAG -L )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(13):  set(CMAKE_LIBRARY_PATH_TERMINATOR  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(14):  set(CMAKE_LINK_LIBRARY_FLAG -l )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(16):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(17):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(18):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(19):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .so )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(21):  set(CMAKE_EXECUTABLE_SUFFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(22):  set(CMAKE_DL_LIBS dl )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(24):  set(CMAKE_FIND_LIBRARY_PREFIXES lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(25):  set(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(31):  set(CMAKE_LINK_LIBRARY_USING_DEFAULT_SUPPORTED TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(33):  if(NOT DEFINED CMAKE_AUTOGEN_ORIGIN_DEPENDS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(34):  set(CMAKE_AUTOGEN_ORIGIN_DEPENDS ON )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(36):  if(NOT DEFINED CMAKE_AUTOMOC_COMPILER_PREDEFINES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(37):  set(CMAKE_AUTOMOC_COMPILER_PREDEFINES ON )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(39):  if(NOT DEFINED CMAKE_AUTOMOC_PATH_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(40):  set(CMAKE_AUTOMOC_PATH_PREFIX OFF )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(42):  if(NOT DEFINED CMAKE_AUTOMOC_MACRO_NAMES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(43):  set(CMAKE_AUTOMOC_MACRO_NAMES Q_OBJECT Q_GADGET Q_NAMESPACE Q_NAMESPACE_EXPORT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(47):  set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(49):  set(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(51):  set(CMAKE_SKIP_INSTALL_RPATH NO CACHE BOOL If set, runtime paths are not added when installing shared libraries, but are added when building. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(54):  set(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(56):  if(DEFINED ENV{CMAKE_COLOR_DIAGNOSTICS} AND NOT DEFINED CACHE{CMAKE_COLOR_DIAGNOSTICS} )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(60):  if(CMAKE_GENERATOR MATCHES Make )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(61):  if(NOT DEFINED CMAKE_COLOR_DIAGNOSTICS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(62):  set(CMAKE_COLOR_MAKEFILE ON CACHE BOOL Enable/Disable color output during build. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(64):  mark_as_advanced(CMAKE_COLOR_MAKEFILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(66):  if(DEFINED CMAKE_RULE_MESSAGES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(69):  if(DEFINED CMAKE_TARGET_MESSAGES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(74):  if(NOT DEFINED CMAKE_EXPORT_COMPILE_COMMANDS AND CMAKE_GENERATOR MATCHES Ninja|Unix Makefiles )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(88):  function(GetDefaultWindowsPrefixBase var )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(180):  if(NOT DEFINED CMAKE_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(181):  set(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(185):  if(CMAKE_HOST_UNIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(188):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(189):  GetDefaultWindowsPrefixBase(CMAKE_GENERIC_PROGRAM_FILES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(95):  if(MSYS Makefiles MATCHES (Win64|IA64) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(97):  elseif( MATCHES x64 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(99):  elseif( MATCHES ARM64 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(101):  elseif(MSYS Makefiles MATCHES ARM )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(103):  elseif( MATCHES ARM )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(105):  elseif( STREQUAL 8 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(107):  elseif( MATCHES (amd64|ia64) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(111):  if(NOT arch_hint )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(112):  set(arch_hint x86 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(133):  set(_PREFIX_ENV_VAR ProgramFiles )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(135):  if(C:\Program Files STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(139):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(141):  if(C:\Program Files STREQUAL C:\Program Files )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(144):  if(NOT x86 STREQUAL x64 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(146):  set(_PREFIX_ENV_VAR ProgramFiles(x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(164):  if(NOT C:\Program Files (x86) STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(165):  file(TO_CMAKE_PATH C:\Program Files (x86) _base )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(172):  set(CMAKE_GENERIC_PROGRAM_FILES C:/Program Files (x86) PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(190):  set(CMAKE_INSTALL_PREFIX C:/Program Files (x86)/CMAKE_TRY_COMPILE CACHE PATH Install path prefix, prepended onto install directories. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(193):  set(CMAKE_GENERIC_PROGRAM_FILES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(198):  set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Unspecified )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeGenericSystem.cmake(200):  mark_as_advanced(CMAKE_SKIP_RPATH CMAKE_SKIP_INSTALL_RPATH CMAKE_VERBOSE_MAKEFILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(43):  set(CMAKE_SYSTEM_INFO_FILE Platform/Windows )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(45):  include(Platform/Windows OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(1):  set(WIN32 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(3):  if(CMAKE_SYSTEM_NAME STREQUAL WindowsCE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(5):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsPhone )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(7):  elseif(CMAKE_SYSTEM_NAME STREQUAL WindowsStore )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(11):  set(CMAKE_STATIC_LIBRARY_PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(12):  set(CMAKE_STATIC_LIBRARY_SUFFIX .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(13):  set(CMAKE_SHARED_LIBRARY_PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(14):  set(CMAKE_SHARED_LIBRARY_SUFFIX .dll )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(15):  set(CMAKE_IMPORT_LIBRARY_PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(16):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(17):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(18):  set(CMAKE_LINK_LIBRARY_SUFFIX .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(19):  set(CMAKE_DL_LIBS  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(20):  set(CMAKE_EXTRA_LINK_EXTENSIONS .targets )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(22):  set(CMAKE_FIND_LIBRARY_PREFIXES  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(23):  set(CMAKE_FIND_LIBRARY_SUFFIXES .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(27):  if(CMAKE_GENERATOR MATCHES Borland )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(34):  if(CMAKE_GENERATOR MATCHES NMake )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows.cmake(39):  include(Platform/WindowsPaths )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(10):  if(__WINDOWS_PATHS_INCLUDED )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(13):  set(__WINDOWS_PATHS_INCLUDED 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(31):  set(_programfiles  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(32):  foreach(v ProgramW6432 ProgramFiles ProgramFiles(x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramW6432} )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles} )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files _env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(33):  if(DEFINED ENV{ProgramFiles(x86)} )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(34):  file(TO_CMAKE_PATH C:\Program Files (x86) _env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(35):  list(APPEND _programfiles C:/Program Files (x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(36):  unset(_env_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(39):  if(DEFINED ENV{SystemDrive} )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(40):  foreach(d Program Files Program Files (x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(41):  if(EXISTS C:/Program Files (x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(42):  list(APPEND _programfiles C:/Program Files (x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(46):  if(_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(47):  list(REMOVE_DUPLICATES _programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(48):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files;C:/Program Files (x86) )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(50):  unset(_programfiles )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(53):  get_filename_component(_CMAKE_INSTALL_DIR D:/new_msys64/ucrt64/share/cmake PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(54):  get_filename_component(_CMAKE_INSTALL_DIR D:/new_msys64/ucrt64/share PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(55):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH D:/new_msys64/ucrt64 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(57):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(59):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH C:/Program Files (x86)/CMAKE_TRY_COMPILE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(63):  if(CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(70):  _cmake_record_install_prefix()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(23):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_VALUE C:/Program Files (x86)/CMAKE_TRY_COMPILE PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(24):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_VALUE  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(25):  set(icount 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(26):  set(scount 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(27):  foreach(value IN LISTS CMAKE_SYSTEM_PREFIX_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(28):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(31):  if(value STREQUAL CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(28):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(31):  if(value STREQUAL CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(28):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(31):  if(value STREQUAL CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(28):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(29):  math(EXPR icount 0+1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(31):  if(value STREQUAL CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(35):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_COUNT 1 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(36):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_COUNT 0 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(72):  if(CMAKE_CROSSCOMPILING AND NOT CMAKE_HOST_SYSTEM_NAME MATCHES Windows )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(77):  list(APPEND CMAKE_SYSTEM_INCLUDE_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(81):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(82):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH C:/Program Files (x86)/CMAKE_TRY_COMPILE/bin )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(85):  if(CMAKE_STAGING_PREFIX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(91):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH D:/new_msys64/ucrt64/bin /bin )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/WindowsPaths.cmake(96):  list(APPEND CMAKE_SYSTEM_PROGRAM_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(47):  if(NOT _INCLUDED_SYSTEM_INFO_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(61):  if(CMAKE_EXTRA_GENERATOR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(71):  if(NOT CMAKE_MODULE_EXISTS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(72):  set(CMAKE_SHARED_MODULE_PREFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(73):  set(CMAKE_SHARED_MODULE_SUFFIX .dll )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(77):  set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(11):  include(CMakeLanguageInformation )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(15):  if(UNIX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(17):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(18):  set(CMAKE_CXX_OUTPUT_EXTENSION .obj )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(21):  set(_INCLUDED_FILE 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(24):  if(CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(25):  include(Compiler/Clang-CXX OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(1):  include(Compiler/Clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(6):  if(__COMPILER_CLANG )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(9):  set(__COMPILER_CLANG 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(11):  include(Compiler/CMakeCommonCompilerMacros )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(8):  set(__COMPILER_CMAKE_COMMON_COMPILER_MACROS 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(32):  macro(__compiler_check_default_language_standard lang stdver1 std1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(71):  macro(cmake_record_c_compile_features )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(106):  macro(cmake_record_cxx_compile_features )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(143):  macro(cmake_record_cuda_compile_features )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(180):  macro(cmake_record_hip_compile_features )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(13):  set(__pch_header_C c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(14):  set(__pch_header_CXX c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(15):  set(__pch_header_OBJC objective-c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(16):  set(__pch_header_OBJCXX objective-c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(18):  if(x STREQUAL xMSVC OR x STREQUAL xMSVC OR x STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(23):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(24):  include(Compiler/GNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(6):  if(__COMPILER_GNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(9):  set(__COMPILER_GNU 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(11):  include(Compiler/CMakeCommonCompilerMacros )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(6):  return()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(13):  set(__pch_header_C c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(14):  set(__pch_header_CXX c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(15):  set(__pch_header_OBJC objective-c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(16):  set(__pch_header_OBJCXX objective-c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(18):  macro(__compiler_gnu lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(26):  macro(__compiler_clang lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(126):  macro(__compiler_clang_cxx_standards lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(2):  __compiler_clang(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(27):  __compiler_gnu(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(20):  set(CMAKE_CXX_VERBOSE_FLAG -v )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(21):  set(CMAKE_CXX_COMPILE_OPTIONS_WARNING_AS_ERROR -Werror )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(22):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC -fPIC )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(23):  set(_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER NO )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(24):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(25):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE -fPIE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(28):  set(_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER YES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(29):  set(CMAKE_CXX_LINK_OPTIONS_PIE -fPIE -pie )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(30):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE -no-pie )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(32):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(33):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(35):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS -fPIC )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(36):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(37):  set(CMAKE_CXX_COMPILE_OPTIONS_SYSROOT --sysroot= )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(39):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG -Wl, )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(40):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG_SEP , )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(46):  get_property(_IN_TC GLOBAL PROPERTY IN_TRY_COMPILE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(47):  if(CMAKE_CXX_COMPILER_ID STREQUAL GNU AND _IN_TC AND NOT CMAKE_FORCE_DEPFILES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(48):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(52):  set(CMAKE_DEPFILE_FLAGS_CXX -MD -MT <DEP_TARGET> -MF <DEP_FILE> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(56):  string(APPEND CMAKE_CXX_FLAGS_INIT   )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(57):  string(APPEND CMAKE_CXX_FLAGS_DEBUG_INIT  -g )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(58):  string(APPEND CMAKE_CXX_FLAGS_MINSIZEREL_INIT  -Os -DNDEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(59):  string(APPEND CMAKE_CXX_FLAGS_RELEASE_INIT  -O3 -DNDEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(60):  string(APPEND CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT  -O2 -g -DNDEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(61):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(62):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(63):  if(NOT APPLE OR NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(64):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(67):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(68):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER NO )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(73):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.5 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(74):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(76):  set(__lto_flags  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(83):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 11.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(84):  list(APPEND __lto_flags -flto=auto )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(95):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.7 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(99):  list(APPEND __lto_flags -fno-fat-lto-objects )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(102):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO -flto=auto;-fno-fat-lto-objects )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(111):  set(CMAKE_CXX_ARCHIVE_CREATE_IPO "D:/new_msys64/ucrt64/bin/llvm-ar.exe" cr <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(115):  set(CMAKE_CXX_ARCHIVE_APPEND_IPO "D:/new_msys64/ucrt64/bin/llvm-ar.exe" r <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(119):  set(CMAKE_CXX_ARCHIVE_FINISH_IPO "D:/new_msys64/ucrt64/bin/llvm-ranlib.exe" <TARGET> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(124):  if(CXX STREQUAL CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(125):  set(CMAKE_CXX_COMPILER_PREDEFINES_COMMAND D:/new_msys64/ucrt64/bin/clang++.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(126):  if(CMAKE_CXX_COMPILER_ARG1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(131):  list(APPEND CMAKE_CXX_COMPILER_PREDEFINES_COMMAND -dM -E -c D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(134):  if(NOT xCXX STREQUAL xFortran )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(135):  set(CMAKE_PCH_EXTENSION .gch )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(136):  if(NOT CMAKE_GENERATOR MATCHES Xcode )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(137):  set(CMAKE_PCH_PROLOGUE #pragma GCC system_header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(139):  set(CMAKE_CXX_COMPILE_OPTIONS_INVALID_PCH -Winvalid-pch )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(140):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH -include <PCH_HEADER> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(141):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH -x c++-header -include <PCH_HEADER> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(146):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 4.9 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(147):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS -fdiagnostics-color=always )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/GNU.cmake(148):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS_OFF -fno-diagnostics-color )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(28):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE -fPIE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(31):  if(APPLE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(35):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(36):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(37):  if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(40):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(41):  set(CMAKE_CXX_COMPILE_OPTIONS_TARGET --target= )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(42):  set(CMAKE_CXX_COMPILE_OPTIONS_EXTERNAL_TOOLCHAIN --gcc-toolchain= )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(44):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG -Xlinker   )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(45):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG_SEP )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(47):  if(CMAKE_CXX_COMPILER_TARGET AND CXX STREQUAL CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(55):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(56):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(58):  string(COMPARE EQUAL Clang AppleClang __is_apple_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(59):  string(COMPARE EQUAL Clang FujitsuClang __is_fujitsu_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(64):  set(_CMAKE_LTO_THIN TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(65):  if(__is_apple_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(69):  elseif(__is_fujitsu_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(71):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(72):  if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.9 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(77):  if(_CMAKE_LTO_THIN )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(78):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO -flto=thin )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(83):  if(ANDROID AND NOT CMAKE_ANDROID_NDK_VERSION VERSION_GREATER_EQUAL 22 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(88):  if(ANDROID OR __is_apple_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(91):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(92):  set(__ar D:/new_msys64/ucrt64/bin/llvm-ar.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(93):  set(__ranlib D:/new_msys64/ucrt64/bin/llvm-ranlib.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(96):  set(CMAKE_CXX_ARCHIVE_CREATE_IPO "D:/new_msys64/ucrt64/bin/llvm-ar.exe" cr <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(100):  set(CMAKE_CXX_ARCHIVE_APPEND_IPO "D:/new_msys64/ucrt64/bin/llvm-ar.exe" r <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(104):  set(CMAKE_CXX_ARCHIVE_FINISH_IPO "D:/new_msys64/ucrt64/bin/llvm-ranlib.exe" <TARGET> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(108):  set(CMAKE_PCH_EXTENSION .pch )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(109):  if(NOT CMAKE_GENERATOR MATCHES Xcode )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(110):  set(CMAKE_PCH_PROLOGUE #pragma clang system_header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(112):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 11.0.0 AND NOT __is_apple_clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(113):  set(CMAKE_CXX_COMPILE_OPTIONS_INSTANTIATE_TEMPLATES_PCH -fpch-instantiate-templates )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(115):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH -Xclang -include-pch -Xclang <PCH_FILE> -Xclang -include -Xclang <PCH_HEADER> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(116):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH -Xclang -emit-pch -Xclang -include -Xclang <PCH_HEADER> -x c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(119):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 2.6 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(120):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS -fcolor-diagnostics )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(121):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS_OFF -fno-color-diagnostics )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(3):  __compiler_clang_cxx_standards(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(127):  if(xGNU STREQUAL xGNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(128):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 2.1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(129):  set(CMAKE_CXX98_STANDARD_COMPILE_OPTION -std=c++98 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(130):  set(CMAKE_CXX98_EXTENSION_COMPILE_OPTION -std=gnu++98 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(133):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(134):  set(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT ON )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(135):  set(CMAKE_CXX11_STANDARD_COMPILE_OPTION -std=c++11 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(136):  set(CMAKE_CXX11_EXTENSION_COMPILE_OPTION -std=gnu++11 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(137):  set(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT ON )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(143):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.5 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(144):  set(CMAKE_CXX14_STANDARD_COMPILE_OPTION -std=c++14 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(145):  set(CMAKE_CXX14_EXTENSION_COMPILE_OPTION -std=gnu++14 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(146):  set(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT ON )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(153):  set(_clang_version_std17 5.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(154):  if(CMAKE_SYSTEM_NAME STREQUAL Android )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(158):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 5.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(159):  set(CMAKE_CXX17_STANDARD_COMPILE_OPTION -std=c++17 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(160):  set(CMAKE_CXX17_EXTENSION_COMPILE_OPTION -std=gnu++17 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(166):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 11.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(167):  set(CMAKE_CXX20_STANDARD_COMPILE_OPTION -std=c++20 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(168):  set(CMAKE_CXX20_EXTENSION_COMPILE_OPTION -std=gnu++20 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(174):  unset(_clang_version_std17 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(176):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 12.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(177):  set(CMAKE_CXX23_STANDARD_COMPILE_OPTION -std=c++2b )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(178):  set(CMAKE_CXX23_EXTENSION_COMPILE_OPTION -std=gnu++2b )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(181):  if(x STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang.cmake(194):  __compiler_check_default_language_standard(CXX 2.1 98 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(33):  set(__std_ver_pairs 2.1;98; )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(34):  string(REGEX REPLACE  *; *   __std_ver_pairs 2.1;98; )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(35):  string(REGEX MATCHALL [^ ]+ [^ ]+ __std_ver_pairs 2.1 98  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(39):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 2.1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(40):  if(NOT CMAKE_CXX_COMPILER_FORCED )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(41):  if(NOT CMAKE_CXX_STANDARD_COMPUTED_DEFAULT OR NOT DEFINED CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(44):  set(CMAKE_CXX_STANDARD_DEFAULT 17 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(45):  set(CMAKE_CXX_EXTENSIONS_DEFAULT ON )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(67):  unset(__std_ver_pairs )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(5):  if(xGNU STREQUAL xGNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(6):  if(( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles|WMake AND CMAKE_DEPFILE_FLAGS_CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(10):  set(CMAKE_CXX_DEPFILE_FORMAT gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(11):  set(CMAKE_CXX_DEPENDS_USE_COMPILER TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(14):  set(CMAKE_CXX_COMPILE_OPTIONS_EXPLICIT_LANGUAGE -x c++ )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(15):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY_INLINES_HIDDEN -fvisibility-inlines-hidden )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(18):  cmake_policy(GET CMP0025 appleClangPolicy )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(19):  if(APPLE AND NOT appleClangPolicy STREQUAL NEW )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(23):  if(xGNU STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(33):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 16.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(34):  if(xGNU STREQUAL xGNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(35):  string(CONCAT CMAKE_EXPERIMENTAL_CXX_SCANDEP_SOURCE ""  -format=p1689  --  <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS>  -x c++ <SOURCE> -c -o <OBJECT>  -MT <DYNDEP_FILE>  -MD -MF <DEP_FILE>  > <DYNDEP_FILE> )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(44):  set(CMAKE_EXPERIMENTAL_CXX_MODULE_MAP_FORMAT clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/Clang-CXX.cmake(45):  set(CMAKE_EXPERIMENTAL_CXX_MODULE_MAP_FLAG @<MODULE_MAP_FILE> )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(28):  set(CMAKE_BASE_NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME D:/new_msys64/ucrt64/bin/clang++.exe NAME_WE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(31):  if(CMAKE_COMPILER_IS_GNUCXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(37):  if(CMAKE_SYSTEM_PROCESSOR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(38):  if(CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(39):  include(Platform/Windows-Clang-CXX-AMD64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(41):  if(NOT _INCLUDED_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(42):  include(Platform/Windows-clang++-AMD64 OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(47):  if(CMAKE_CXX_COMPILER_ID )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(48):  include(Platform/Windows-Clang-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(1):  include(Platform/Windows-Clang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(6):  if(__WINDOWS_CLANG )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(9):  set(__WINDOWS_CLANG 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(11):  set(__pch_header_C c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(12):  set(__pch_header_CXX c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(13):  set(__pch_header_OBJC objective-c-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(14):  set(__pch_header_OBJCXX objective-c++-header )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(16):  macro(__windows_compiler_clang_gnu lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(138):  macro(__enable_llvm_rc_preprocessing clang_option_prefix extra_pp_flags )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(160):  macro(__verify_same_language_values variable )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(176):  if(x STREQUAL xMSVC OR x STREQUAL xMSVC OR x STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(248):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(249):  include(Platform/Windows-GNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(6):  if(__WINDOWS_GNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(9):  set(__WINDOWS_GNU 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(11):  set(MINGW 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(13):  set(CMAKE_IMPORT_LIBRARY_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(14):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(15):  set(CMAKE_SHARED_MODULE_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(16):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(18):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(19):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .dll.a )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .dll )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(21):  set(CMAKE_SHARED_MODULE_SUFFIX .dll )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(22):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(24):  set(CMAKE_EXTRA_LINK_EXTENSIONS .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(26):  set(CMAKE_FIND_LIBRARY_PREFIXES lib  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(27):  set(CMAKE_FIND_LIBRARY_SUFFIXES .dll.a .a .lib )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(28):  set(CMAKE_C_STANDARD_LIBRARIES_INIT -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(29):  set(CMAKE_CXX_STANDARD_LIBRARIES_INIT -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(31):  set(CMAKE_DL_LIBS  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(32):  set(CMAKE_LIBRARY_PATH_FLAG -L )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(33):  set(CMAKE_LINK_LIBRARY_FLAG -l )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(34):  set(CMAKE_LINK_DEF_FILE_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(35):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(37):  set(CMAKE_GNULD_IMAGE_VERSION -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(41):  set(__WINDOWS_GNU_LD_RESPONSE 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(42):  execute_process(COMMAND ld -v OUTPUT_VARIABLE _help ERROR_VARIABLE _help )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(43):  if(GNU ld (GNU Binutils) 2.40
 MATCHES GNU ld .* 2\.1[1-6] )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(50):  if(NOT DEFINED _CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(51):  execute_process(COMMAND D:/new_msys64/ucrt64/bin/ld.lld.exe --help OUTPUT_VARIABLE __linker_help ERROR_VARIABLE __linker_help )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(54):  if(__linker_help MATCHES --push-state AND __linker_help MATCHES --pop-state )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(56):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(57):  set(_CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED FALSE CACHE INTERNAL linker supports push/pop state )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(59):  unset(__linker_help )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(62):  if(_CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(66):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(67):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:--whole-archive <LINK_ITEM> LINKER:--no-whole-archive )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(71):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(76):  set(CMAKE_LINK_GROUP_USING_RESCAN LINKER:--start-group LINKER:--end-group )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(77):  set(CMAKE_LINK_GROUP_USING_RESCAN_SUPPORTED TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(80):  macro(__windows_compiler_gnu lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(169):  macro(__windows_compiler_gnu_abi lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(250):  __enable_llvm_rc_preprocessing( -x c )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(140):  if(CMAKE_RC_COMPILER_INIT MATCHES llvm-rc OR CMAKE_RC_COMPILER MATCHES llvm-rc )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(251):  macro(__windows_compiler_clang_base lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(256):  macro(__windows_compiler_clang lang )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(2):  set(_COMPILE_CXX_MSVC  -TP )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(3):  __windows_compiler_clang(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(257):  if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(259):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(260):  set(CMAKE_CXX_COMPILE_OPTIONS_TARGET --target= )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(262):  __windows_compiler_clang_base(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang.cmake(252):  __windows_compiler_gnu(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(83):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(84):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(85):  set(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(91):  foreach(type SHARED_LIBRARY SHARED_MODULE EXE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(92):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(93):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(92):  set(CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(93):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(92):  set(CMAKE_EXE_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(93):  set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(97):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(98):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(99):  set(_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER NO )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(100):  set(CMAKE_CXX_LINK_OPTIONS_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(101):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(102):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(104):  if(NOT CMAKE_GENERATOR STREQUAL MSYS Makefiles OR CMAKE_NEED_RESPONSE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(111):  execute_process(COMMAND D:/new_msys64/ucrt64/bin/clang++.exe --version OUTPUT_VARIABLE _ver ERROR_VARIABLE _ver )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(112):  if(clang version 16.0.5
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: D:/new_msys64/ucrt64/bin
 MATCHES \(GCC\) 3\. )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(126):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(128):  set(CMAKE_CXX_RESPONSE_FILE_LINK_FLAG @ )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(132):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_CXX_COMPILER> <CMAKE_SHARED_MODULE_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <OBJECTS> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(134):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <OBJECTS> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(136):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(138):  set(CMAKE_CXX_CREATE_WIN32_EXE -mwindows )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(140):  list(APPEND CMAKE_CXX_ABI_FILES Platform/Windows-GNU-CXX-ABI )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(145):  if(@ STREQUAL @ AND NOT CMAKE_GENERATOR MATCHES Ninja )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(146):  foreach(rule CREATE_SHARED_MODULE CREATE_SHARED_LIBRARY LINK_EXECUTABLE )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(151):  string(REPLACE <OBJECTS> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_CXX_COMPILER> <CMAKE_SHARED_MODULE_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <OBJECTS> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(153):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_COMMAND> -E rm -f <OBJECT_DIR>/objects.a <CMAKE_AR> qc <OBJECT_DIR>/objects.a <OBJECTS> <CMAKE_CXX_COMPILER> <CMAKE_SHARED_MODULE_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(151):  string(REPLACE <OBJECTS> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <OBJECTS> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(153):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_COMMAND> -E rm -f <OBJECT_DIR>/objects.a <CMAKE_AR> qc <OBJECT_DIR>/objects.a <OBJECTS> <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(151):  string(REPLACE <OBJECTS> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive CMAKE_CXX_LINK_EXECUTABLE <CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(153):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_COMMAND> -E rm -f <OBJECT_DIR>/objects.a <CMAKE_AR> qc <OBJECT_DIR>/objects.a <OBJECTS> <CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> -Wl,--whole-archive <OBJECT_DIR>/objects.a -Wl,--no-whole-archive -o <TARGET> -Wl,--out-implib,<TARGET_IMPLIB> -Wl,--major-image-version,<TARGET_VERSION_MAJOR>,--minor-image-version,<TARGET_VERSION_MINOR> <LINK_LIBRARIES> )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(161):  if(NOT CMAKE_RC_COMPILER_INIT AND NOT CMAKE_GENERATOR_RC )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(162):  set(_CMAKE_RC_COMPILER_LIST windres windres )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(163):  set(_CMAKE_RC_COMPILER_FALLBACK windres )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(166):  enable_language(RC )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(1):  set(CMAKE_RC_COMPILER D:/new_msys64/ucrt64/bin/windres.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(2):  set(CMAKE_RC_COMPILER_ARG1  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(3):  set(CMAKE_RC_COMPILER_LOADED 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(4):  set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(5):  set(CMAKE_RC_OUTPUT_EXTENSION .obj )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeRCCompiler.cmake(6):  set(CMAKE_RC_COMPILER_ENV_VAR RC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(10):  set(CMAKE_BASE_NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(11):  if(CMAKE_RC_COMPILER MATCHES windres[^/]*$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(12):  set(CMAKE_BASE_NAME windres )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(16):  set(CMAKE_SYSTEM_AND_RC_COMPILER_INFO_FILE D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-windres.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(18):  include(Platform/Windows-windres OPTIONAL )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-windres.cmake(1):  set(CMAKE_RC_COMPILE_OBJECT <CMAKE_RC_COMPILER> -O coff <DEFINES> <INCLUDES> <FLAGS> <SOURCE> <OBJECT> )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(25):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(31):  set(CMAKE_RC_FLAGS_INIT   )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(33):  cmake_initialize_per_config_variable(CMAKE_RC_FLAGS Flags for Windows Resource Compiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_RC_FLAGS  CACHE STRING Flags for Windows Resource Compiler during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_RC_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_DEBUG  CACHE STRING Flags for Windows Resource Compiler during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELEASE  CACHE STRING Flags for Windows Resource Compiler during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_MINSIZEREL  CACHE STRING Flags for Windows Resource Compiler during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_RC_FLAGS_RELWITHDEBINFO  CACHE STRING Flags for Windows Resource Compiler during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_RC_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(38):  set(CMAKE_RC_FLAG_REGEX ^[-/](D|I) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(42):  set(CMAKE_INCLUDE_FLAG_RC -I  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(44):  if(NOT CMAKE_RC_COMPILE_OBJECT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeRCInformation.cmake(50):  set(CMAKE_RC_INFORMATION_LOADED 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(5):  if(x STREQUAL xMSVC )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(11):  elseif(xGNU STREQUAL xGNU )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(12):  if(( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles|WMake AND CMAKE_DEPFILE_FLAGS_CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(16):  set(CMAKE_CXX_DEPFILE_FORMAT gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-Clang-CXX.cmake(17):  set(CMAKE_CXX_DEPENDS_USE_COMPILER TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(50):  if(NOT _INCLUDED_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(56):  if(CMAKE_CXX_COMPILER_WRAPPER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(64):  if(NOT _INCLUDED_FILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(68):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(81):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(87):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(97):  if(NOT CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(101):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(102):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(105):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(106):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(108):  if(NOT CMAKE_CXX_LINK_OPTIONS_PIE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(109):  set(CMAKE_CXX_LINK_OPTIONS_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(111):  if(NOT CMAKE_CXX_LINK_OPTIONS_NO_PIE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(112):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(115):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_DLL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(116):  set(CMAKE_CXX_COMPILE_OPTIONS_DLL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(119):  if(NOT CMAKE_SHARED_LIBRARY_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(120):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(123):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(124):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(127):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(128):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(131):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(132):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(135):  if(NOT CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(136):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(139):  if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(140):  set(CMAKE_EXE_EXPORTS_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(143):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(144):  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(147):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(148):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(151):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(152):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(155):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(156):  set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(159):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(160):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(163):  if(NOT CMAKE_INCLUDE_FLAG_CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(164):  set(CMAKE_INCLUDE_FLAG_CXX -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(170):  if(NOT CMAKE_MODULE_EXISTS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(171):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(172):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS -shared )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(176):  if(NOT CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(180):  if(NOT CMAKE_SHARED_MODULE_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(181):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(185):  foreach(type SHARED_LIBRARY SHARED_MODULE EXE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_EXE_LINK_STATIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(196):  if(CMAKE_EXECUTABLE_FORMAT STREQUAL ELF )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(209):  set(CMAKE_CXX_FLAGS_INIT    )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(211):  cmake_initialize_per_config_variable(CMAKE_CXX_FLAGS Flags used by the CXX compiler )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_CXX_FLAGS  CACHE STRING Flags used by the CXX compiler during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_CXX_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -g _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_DEBUG -g CACHE STRING Flags used by the CXX compiler during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O3 -DNDEBUG _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELEASE -O3 -DNDEBUG CACHE STRING Flags used by the CXX compiler during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -Os -DNDEBUG _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_MINSIZEREL -Os -DNDEBUG CACHE STRING Flags used by the CXX compiler during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O2 -g -DNDEBUG _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO -O2 -g -DNDEBUG CACHE STRING Flags used by the CXX compiler during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(213):  if(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(214):  set(CMAKE_CXX_STANDARD_LIBRARIES -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 CACHE STRING Libraries linked by default with all C++ applications. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(216):  mark_as_advanced(CMAKE_CXX_STANDARD_LIBRARIES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(219):  if(NOT CMAKE_CXX_COMPILER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_COMPILER_LAUNCHER} )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(224):  if(NOT CMAKE_CXX_LINKER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_LINKER_LAUNCHER} )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(229):  include(CMakeCommonLanguageInclude )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT   )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT   )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT   )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_EXE_LINKER_FLAGS  CACHE STRING Flags used by the linker during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_SHARED_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of shared libraries during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of shared libraries during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of shared libraries during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of shared libraries during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_MODULE_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of modules during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of modules during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of modules during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of modules during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of modules during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_STATIC_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of static libraries during all build types. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of static libraries during DEBUG builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of static libraries during RELEASE builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of static libraries during MINSIZEREL builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL D:/new_msys64/usr/bin/make.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(258):  if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(264):  if(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(271):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_CREATE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(274):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_APPEND )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(277):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_FINISH )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(282):  if(NOT CMAKE_CXX_COMPILE_OBJECT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(283):  set(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE> )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(287):  if(NOT CMAKE_CXX_LINK_EXECUTABLE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(292):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXInformation.cmake(296):  set(CMAKE_CXX_INFORMATION_LOADED 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(5):  set_property(DIRECTORY PROPERTY INCLUDE_DIRECTORIES  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(6):  set(CMAKE_VERBOSE_MAKEFILE 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(7):  set(CMAKE_CXX_FLAGS  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(8):  set(CMAKE_CXX_FLAGS   )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(9):  set(CMAKE_CXX_FLAGS_DEBUG -g )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(10):  set(CMAKE_EXE_LINKER_FLAGS  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(11):  set(CMAKE_EXE_LINKER_FLAGS  -v )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(12):  include_directories( )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(13):  set(CMAKE_SUPPRESS_REGENERATION 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(14):  link_directories( )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(15):  add_definitions(-v )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(16):  cmake_policy(SET CMP0065 NEW )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(17):  cmake_policy(SET CMP0083 NEW )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(18):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Internal/HeaderpadWorkaround.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/HeaderpadWorkaround.cmake(8):  if(NOT APPLE )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/HeaderpadWorkaround.cmake(9):  return()
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(19):  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(20):  add_executable(cmTC_d1bc9 D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(21):  file(GENERATE OUTPUT D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/cmTC_d1bc9_loc CONTENT $<TARGET_FILE:cmTC_d1bc9> )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd/CMakeLists.txt(23):  target_link_libraries(cmTC_d1bc9  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(70):  set(ENV{LC_ALL}  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(71):  set(ENV{LC_MESSAGES}  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(72):  set(ENV{LANG} en_CA.UTF-8 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(75):  set(CMAKE_CXX_ABI_COMPILED TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(76):  unset(CMAKE_CXX_ABI_COMPILED CACHE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(77):  if(CMAKE_CXX_ABI_COMPILED AND _copy_error )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(80):  set(CMAKE_CXX_ABI_COMPILED TRUE PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(83):  if(CMAKE_CXX_ABI_COMPILED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(84):  message(CHECK_PASS done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(85):  file(STRINGS D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeDetermineCompilerABI_CXX.bin ABI_STRINGS LIMIT_COUNT 32 REGEX INFO:[A-Za-z0-9_]+\[[^]]*\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(86):  set(ABI_SIZEOF_DPTR NOTFOUND )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(87):  set(ABI_BYTE_ORDER NOTFOUND )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(88):  set(ABI_NAME NOTFOUND )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(89):  foreach(info INFO:sizeof_dptr[08];INFO:byte_order[LITTLE_ENDIAN] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(90):  if(INFO:sizeof_dptr[08] MATCHES INFO:sizeof_dptr\[0*([^]]*)\] AND NOT ABI_SIZEOF_DPTR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(91):  set(ABI_SIZEOF_DPTR 8 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(93):  if(INFO:sizeof_dptr[08] MATCHES INFO:byte_order\[(BIG_ENDIAN|LITTLE_ENDIAN)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(103):  if(INFO:sizeof_dptr[08] MATCHES INFO:abi\[([^]]*)\] AND NOT ABI_NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(90):  if(INFO:byte_order[LITTLE_ENDIAN] MATCHES INFO:sizeof_dptr\[0*([^]]*)\] AND NOT ABI_SIZEOF_DPTR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(93):  if(INFO:byte_order[LITTLE_ENDIAN] MATCHES INFO:byte_order\[(BIG_ENDIAN|LITTLE_ENDIAN)\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(94):  set(byte_order LITTLE_ENDIAN )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(95):  if(ABI_BYTE_ORDER STREQUAL NOTFOUND )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(97):  set(ABI_BYTE_ORDER LITTLE_ENDIAN )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(103):  if(INFO:byte_order[LITTLE_ENDIAN] MATCHES INFO:abi\[([^]]*)\] AND NOT ABI_NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(108):  if(ABI_SIZEOF_DPTR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(109):  set(CMAKE_CXX_SIZEOF_DATA_PTR 8 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(114):  if(ABI_BYTE_ORDER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(115):  set(CMAKE_CXX_BYTE_ORDER LITTLE_ENDIAN PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(118):  if(ABI_NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(123):  if(CMAKE_CXX_VERBOSE_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(124):  set(implicit_incdirs  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(125):  cmake_parse_implicit_include_info(Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd

Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build
make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd'
Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj
/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp
clang version 16.0.5
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: D:/new_msys64/ucrt64/bin
 (in-process)
 "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp
clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include"
#include "..." search starts here:
#include <...> search starts here:
 D:/new_msys64/ucrt64/include/c++/13.1.0
 D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32
 D:/new_msys64/ucrt64/include/c++/13.1.0/backward
 D:/new_msys64/ucrt64/lib/clang/16/include
 D:/new_msys64/ucrt64/include
End of search list.
Linking CXX executable cmTC_d1bc9.exe
/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a
/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj" 
/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl,--whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl,--no-whole-archive -o cmTC_d1bc9.exe -Wl,--out-implib,libcmTC_d1bc9.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
clang version 16.0.5
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: D:/new_msys64/ucrt64/bin
 "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o
make[1]: Leaving directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd'

 CXX implicit_incdirs log rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(178):  set(state start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(181):  set(implicit_dirs_tmp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(182):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(185):  string(REGEX REPLACE *
 ; output_lines Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd

Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build
make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd'
Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj
/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp
clang version 16.0.5
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: D:/new_msys64/ucrt64/bin
 (in-process)
 "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp
clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include"
#include "..." search starts here:
#include <...> search starts here:
 D:/new_msys64/ucrt64/include/c++/13.1.0
 D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32
 D:/new_msys64/ucrt64/include/c++/13.1.0/backward
 D:/new_msys64/ucrt64/lib/clang/16/include
 D:/new_msys64/ucrt64/include
End of search list.
Linking CXX executable cmTC_d1bc9.exe
/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a
/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj" 
/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl,--whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl,--no-whole-archive -o cmTC_d1bc9.exe -Wl,--out-implib,libcmTC_d1bc9.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
clang version 16.0.5
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: D:/new_msys64/ucrt64/bin
 "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o
make[1]: Leaving directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd'

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(186):  foreach(line IN LISTS output_lines )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND  #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line( CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd' #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd' CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND /D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND clang version 16.0.5 #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(clang version 16.0.5 CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND Target: x86_64-w64-windows-gnu #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(Target: x86_64-w64-windows-gnu CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND Thread model: posix #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(Thread model: posix CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND InstalledDir: D:/new_msys64/ucrt64/bin #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(InstalledDir: D:/new_msys64/ucrt64/bin CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND  (in-process) #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line( (in-process) CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND  "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line( "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include" #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(193):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(194):  cmake_parse_implicit_include_line(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include" CXX implicit_dirs_tmp linelog state )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(11):  unset(rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(12):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(15):  if(CMAKE_CXX_COMPILER_ID STREQUAL Cray AND line MATCHES ^/ AND line MATCHES /ccfe |/ftnfe  AND line MATCHES  -isystem| -I )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(31):  if(CMAKE_CXX_COMPILER_ID STREQUAL PGI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(74):  if(CMAKE_CXX_COMPILER_ID STREQUAL SunPro AND ( line MATCHES -D__SUNPRO_C OR line MATCHES -D__SUNPRO_F ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(95):  if(( CMAKE_CXX_COMPILER_ID STREQUAL XL OR CMAKE_CXX_COMPILER_ID STREQUAL XLClang ) AND line MATCHES ^/ AND ( ( lang STREQUAL Fortran AND line MATCHES /xl[fF]entry  AND line MATCHES OSVAR\([^ ]+\) ) OR ( ( lang STREQUAL C OR lang STREQUAL CXX ) AND line MATCHES /xl[cC]2?entry  AND line MATCHES  -qosvar= ) ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(150):  if(CMAKE_CXX_COMPILER_ID STREQUAL Fujitsu AND line MATCHES /ccpcom )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(164):  if(log )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(166):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(167):  unset(linelog PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(169):  if(DEFINED rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(196):  if(linelog )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(199):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(188):  string(FIND #include "..." search starts here: #include "..." search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(189):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(190):  set(state loading )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(191):  set(preload 1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(192):  string(APPEND log   found start of include info
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(203):  elseif(state STREQUAL loading )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(204):  string(FIND #include <...> search starts here: End of search list. rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(205):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(210):  if(preload )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(211):  string(FIND #include <...> search starts here: #include <...> search starts here: rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(212):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(213):  set(preload 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(214):  string(APPEND log   found start of implicit include info
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(216):  continue()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(203):  elseif(state STREQUAL loading )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(204):  string(FIND  D:/new_msys64/ucrt64/include/c++/13.1.0 End of search list. rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(205):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(210):  if(preload )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(218):  if( D:/new_msys64/ucrt64/include/c++/13.1.0 MATCHES ^  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(219):  string(SUBSTRING  D:/new_msys64/ucrt64/include/c++/13.1.0 1 -1 line )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(221):  if(D:/new_msys64/ucrt64/include/c++/13.1.0 MATCHES  \(framework directory\)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(224):  string(REPLACE \ / path D:/new_msys64/ucrt64/include/c++/13.1.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(225):  list(APPEND implicit_dirs_tmp D:/new_msys64/ucrt64/include/c++/13.1.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(226):  string(APPEND log     add: [D:/new_msys64/ucrt64/include/c++/13.1.0]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(203):  elseif(state STREQUAL loading )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(204):  string(FIND  D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 End of search list. rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(205):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(210):  if(preload )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(218):  if( D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 MATCHES ^  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(219):  string(SUBSTRING  D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 1 -1 line )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(221):  if(D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 MATCHES  \(framework directory\)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(224):  string(REPLACE \ / path D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(225):  list(APPEND implicit_dirs_tmp D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(226):  string(APPEND log     add: [D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(203):  elseif(state STREQUAL loading )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(204):  string(FIND  D:/new_msys64/ucrt64/include/c++/13.1.0/backward End of search list. rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(205):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(210):  if(preload )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(218):  if( D:/new_msys64/ucrt64/include/c++/13.1.0/backward MATCHES ^  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(219):  string(SUBSTRING  D:/new_msys64/ucrt64/include/c++/13.1.0/backward 1 -1 line )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(221):  if(D:/new_msys64/ucrt64/include/c++/13.1.0/backward MATCHES  \(framework directory\)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(224):  string(REPLACE \ / path D:/new_msys64/ucrt64/include/c++/13.1.0/backward )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(225):  list(APPEND implicit_dirs_tmp D:/new_msys64/ucrt64/include/c++/13.1.0/backward )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(226):  string(APPEND log     add: [D:/new_msys64/ucrt64/include/c++/13.1.0/backward]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(203):  elseif(state STREQUAL loading )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(204):  string(FIND  D:/new_msys64/ucrt64/lib/clang/16/include End of search list. rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(205):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(210):  if(preload )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(218):  if( D:/new_msys64/ucrt64/lib/clang/16/include MATCHES ^  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(219):  string(SUBSTRING  D:/new_msys64/ucrt64/lib/clang/16/include 1 -1 line )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(221):  if(D:/new_msys64/ucrt64/lib/clang/16/include MATCHES  \(framework directory\)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(224):  string(REPLACE \ / path D:/new_msys64/ucrt64/lib/clang/16/include )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(225):  list(APPEND implicit_dirs_tmp D:/new_msys64/ucrt64/lib/clang/16/include )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(226):  string(APPEND log     add: [D:/new_msys64/ucrt64/lib/clang/16/include]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(203):  elseif(state STREQUAL loading )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(204):  string(FIND  D:/new_msys64/ucrt64/include End of search list. rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(205):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(210):  if(preload )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(218):  if( D:/new_msys64/ucrt64/include MATCHES ^  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(219):  string(SUBSTRING  D:/new_msys64/ucrt64/include 1 -1 line )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(221):  if(D:/new_msys64/ucrt64/include MATCHES  \(framework directory\)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(224):  string(REPLACE \ / path D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(225):  list(APPEND implicit_dirs_tmp D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(226):  string(APPEND log     add: [D:/new_msys64/ucrt64/include]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(187):  if(state STREQUAL start )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(203):  elseif(state STREQUAL loading )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(204):  string(FIND End of search list. End of search list. rv )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(205):  if(rv GREATER -1 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(206):  set(state done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(207):  string(APPEND log   end of search list found
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(208):  break()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(230):  set(implicit_dirs  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(231):  foreach(d IN LISTS implicit_dirs_tmp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(232):  if(IS_ABSOLUTE D:/new_msys64/ucrt64/include/c++/13.1.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(233):  get_filename_component(dir D:/new_msys64/ucrt64/include/c++/13.1.0 ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(234):  list(APPEND implicit_dirs D:/new_msys64/ucrt64/include/c++/13.1.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(235):  string(APPEND log   collapse include dir [D:/new_msys64/ucrt64/include/c++/13.1.0] ==> [D:/new_msys64/ucrt64/include/c++/13.1.0]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(232):  if(IS_ABSOLUTE D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(233):  get_filename_component(dir D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(234):  list(APPEND implicit_dirs D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(235):  string(APPEND log   collapse include dir [D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32] ==> [D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(232):  if(IS_ABSOLUTE D:/new_msys64/ucrt64/include/c++/13.1.0/backward )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(233):  get_filename_component(dir D:/new_msys64/ucrt64/include/c++/13.1.0/backward ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(234):  list(APPEND implicit_dirs D:/new_msys64/ucrt64/include/c++/13.1.0/backward )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(235):  string(APPEND log   collapse include dir [D:/new_msys64/ucrt64/include/c++/13.1.0/backward] ==> [D:/new_msys64/ucrt64/include/c++/13.1.0/backward]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(232):  if(IS_ABSOLUTE D:/new_msys64/ucrt64/lib/clang/16/include )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(233):  get_filename_component(dir D:/new_msys64/ucrt64/lib/clang/16/include ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(234):  list(APPEND implicit_dirs D:/new_msys64/ucrt64/lib/clang/16/include )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(235):  string(APPEND log   collapse include dir [D:/new_msys64/ucrt64/lib/clang/16/include] ==> [D:/new_msys64/ucrt64/lib/clang/16/include]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(232):  if(IS_ABSOLUTE D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(233):  get_filename_component(dir D:/new_msys64/ucrt64/include ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(234):  list(APPEND implicit_dirs D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(235):  string(APPEND log   collapse include dir [D:/new_msys64/ucrt64/include] ==> [D:/new_msys64/ucrt64/include]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(249):  list(REMOVE_DUPLICATES implicit_dirs )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(252):  if(state STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(253):  string(APPEND log   implicit include dirs: [D:/new_msys64/ucrt64/include/c++/13.1.0;D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32;D:/new_msys64/ucrt64/include/c++/13.1.0/backward;D:/new_msys64/ucrt64/lib/clang/16/include;D:/new_msys64/ucrt64/include]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(259):  set(implicit_incdirs D:/new_msys64/ucrt64/include/c++/13.1.0;D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32;D:/new_msys64/ucrt64/include/c++/13.1.0/backward;D:/new_msys64/ucrt64/lib/clang/16/include;D:/new_msys64/ucrt64/include PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(260):  set(log   found start of include info
  found start of implicit include info
    add: [D:/new_msys64/ucrt64/include/c++/13.1.0]
    add: [D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32]
    add: [D:/new_msys64/ucrt64/include/c++/13.1.0/backward]
    add: [D:/new_msys64/ucrt64/lib/clang/16/include]
    add: [D:/new_msys64/ucrt64/include]
  end of search list found
  collapse include dir [D:/new_msys64/ucrt64/include/c++/13.1.0] ==> [D:/new_msys64/ucrt64/include/c++/13.1.0]
  collapse include dir [D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32] ==> [D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32]
  collapse include dir [D:/new_msys64/ucrt64/include/c++/13.1.0/backward] ==> [D:/new_msys64/ucrt64/include/c++/13.1.0/backward]
  collapse include dir [D:/new_msys64/ucrt64/lib/clang/16/include] ==> [D:/new_msys64/ucrt64/lib/clang/16/include]
  collapse include dir [D:/new_msys64/ucrt64/include] ==> [D:/new_msys64/ucrt64/include]
  implicit include dirs: [D:/new_msys64/ucrt64/include/c++/13.1.0;D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32;D:/new_msys64/ucrt64/include/c++/13.1.0/backward;D:/new_msys64/ucrt64/lib/clang/16/include;D:/new_msys64/ucrt64/include]
 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake(261):  set(rv done PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(127):  message(CONFIGURE_LOG Parsed CXX implicit include dir info: rv=done
  found start of include info
  found start of implicit include info
    add: [D:/new_msys64/ucrt64/include/c++/13.1.0]
    add: [D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32]
    add: [D:/new_msys64/ucrt64/include/c++/13.1.0/backward]
    add: [D:/new_msys64/ucrt64/lib/clang/16/include]
    add: [D:/new_msys64/ucrt64/include]
  end of search list found
  collapse include dir [D:/new_msys64/ucrt64/include/c++/13.1.0] ==> [D:/new_msys64/ucrt64/include/c++/13.1.0]
  collapse include dir [D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32] ==> [D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32]
  collapse include dir [D:/new_msys64/ucrt64/include/c++/13.1.0/backward] ==> [D:/new_msys64/ucrt64/include/c++/13.1.0/backward]
  collapse include dir [D:/new_msys64/ucrt64/lib/clang/16/include] ==> [D:/new_msys64/ucrt64/lib/clang/16/include]
  collapse include dir [D:/new_msys64/ucrt64/include] ==> [D:/new_msys64/ucrt64/include]
  implicit include dirs: [D:/new_msys64/ucrt64/include/c++/13.1.0;D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32;D:/new_msys64/ucrt64/include/c++/13.1.0/backward;D:/new_msys64/ucrt64/lib/clang/16/include;D:/new_msys64/ucrt64/include]


 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(129):  if(done STREQUAL done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(132):  if(CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(137):  set(_CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES_INIT D:/new_msys64/ucrt64/include/c++/13.1.0;D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32;D:/new_msys64/ucrt64/include/c++/13.1.0/backward;D:/new_msys64/ucrt64/lib/clang/16/include;D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(140):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES D:/new_msys64/ucrt64/include/c++/13.1.0;D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32;D:/new_msys64/ucrt64/include/c++/13.1.0/backward;D:/new_msys64/ucrt64/lib/clang/16/include;D:/new_msys64/ucrt64/include PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(143):  set(implicit_dirs  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(144):  set(implicit_objs  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(145):  set(implicit_libs  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(146):  set(implicit_fwks  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(147):  if(CMAKE_CXX_VERBOSE_FLAG )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(148):  CMAKE_PARSE_IMPLICIT_LINK_INFO(Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd

Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build
make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd'
Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj
/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp
clang version 16.0.5
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: D:/new_msys64/ucrt64/bin
 (in-process)
 "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp
clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include"
#include "..." search starts here:
#include <...> search starts here:
 D:/new_msys64/ucrt64/include/c++/13.1.0
 D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32
 D:/new_msys64/ucrt64/include/c++/13.1.0/backward
 D:/new_msys64/ucrt64/lib/clang/16/include
 D:/new_msys64/ucrt64/include
End of search list.
Linking CXX executable cmTC_d1bc9.exe
/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a
/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj" 
/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl,--whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl,--no-whole-archive -o cmTC_d1bc9.exe -Wl,--out-implib,libcmTC_d1bc9.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
clang version 16.0.5
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: D:/new_msys64/ucrt64/bin
 "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o
make[1]: Leaving directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd'

 implicit_libs implicit_dirs implicit_fwks log  COMPUTE_IMPLICIT_OBJECTS implicit_objs LANGUAGE CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(18):  set(implicit_libs_tmp  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(19):  set(implicit_objs_tmp  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(20):  set(implicit_dirs_tmp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(21):  set(implicit_fwks_tmp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(22):  set(log  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(24):  set(keywordArgs )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(25):  set(oneValueArgs COMPUTE_IMPLICIT_OBJECTS LANGUAGE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(26):  set(multiValueArgs )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(27):  cmake_parse_arguments(EXTRA_PARSE  COMPUTE_IMPLICIT_OBJECTS;LANGUAGE  COMPUTE_IMPLICIT_OBJECTS;implicit_objs;LANGUAGE;CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(30):  set(linker CMAKE_LINKER-NOTFOUND )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(31):  if(CMAKE_LINKER )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(32):  get_filename_component(linker D:/new_msys64/ucrt64/bin/ld.lld.exe NAME )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(33):  string(REGEX REPLACE ([][+.*?()^$]) \\\1 linker ld.lld.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(35):  set(startfile CMAKE_LINK_STARTFILE-NOTFOUND )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(36):  if(CMAKE_LINK_STARTFILE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(41):  set(linker_regex ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(42):  set(linker_exclude_regex collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(43):  string(APPEND log   link line regex: [^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(44):  string(REGEX REPLACE ?
 ; output_lines Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd

Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build
make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd'
Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj
/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp
clang version 16.0.5
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: D:/new_msys64/ucrt64/bin
 (in-process)
 "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp
clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32"
ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include"
ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include"
#include "..." search starts here:
#include <...> search starts here:
 D:/new_msys64/ucrt64/include/c++/13.1.0
 D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32
 D:/new_msys64/ucrt64/include/c++/13.1.0/backward
 D:/new_msys64/ucrt64/lib/clang/16/include
 D:/new_msys64/ucrt64/include
End of search list.
Linking CXX executable cmTC_d1bc9.exe
/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a
/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj" 
/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl,--whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl,--no-whole-archive -o cmTC_d1bc9.exe -Wl,--out-implib,libcmTC_d1bc9.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
clang version 16.0.5
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: D:/new_msys64/ucrt64/bin
 "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o
make[1]: Leaving directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd'

 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(45):  foreach(line IN LISTS output_lines )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif( MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: []
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd' MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd' MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd' )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd' MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd' MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd' MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd']
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT /D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line /D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT /D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(clang version 16.0.5 MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT clang version 16.0.5 MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line clang version 16.0.5 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(clang version 16.0.5 MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT clang version 16.0.5 MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(clang version 16.0.5 MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [clang version 16.0.5]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(Target: x86_64-w64-windows-gnu MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Target: x86_64-w64-windows-gnu MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line Target: x86_64-w64-windows-gnu )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(Target: x86_64-w64-windows-gnu MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Target: x86_64-w64-windows-gnu MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(Target: x86_64-w64-windows-gnu MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [Target: x86_64-w64-windows-gnu]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(Thread model: posix MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Thread model: posix MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line Thread model: posix )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(Thread model: posix MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Thread model: posix MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(Thread model: posix MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [Thread model: posix]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(InstalledDir: D:/new_msys64/ucrt64/bin MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT InstalledDir: D:/new_msys64/ucrt64/bin MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line InstalledDir: D:/new_msys64/ucrt64/bin )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(InstalledDir: D:/new_msys64/ucrt64/bin MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT InstalledDir: D:/new_msys64/ucrt64/bin MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(InstalledDir: D:/new_msys64/ucrt64/bin MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [InstalledDir: D:/new_msys64/ucrt64/bin]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if( (in-process) MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  (in-process) MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line  (in-process) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if( (in-process) MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  (in-process) MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif( (in-process) MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ (in-process)]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if( "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line  "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if( "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif( "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include" )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include" MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include" MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include" MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include"]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(#include "..." search starts here: MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT #include "..." search starts here: MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line #include "..." search starts here: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(#include "..." search starts here: MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT #include "..." search starts here: MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(#include "..." search starts here: MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [#include "..." search starts here:]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(#include <...> search starts here: MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT #include <...> search starts here: MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line #include <...> search starts here: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(#include <...> search starts here: MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT #include <...> search starts here: MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(#include <...> search starts here: MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [#include <...> search starts here:]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if( D:/new_msys64/ucrt64/include/c++/13.1.0 MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  D:/new_msys64/ucrt64/include/c++/13.1.0 MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line  D:/new_msys64/ucrt64/include/c++/13.1.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if( D:/new_msys64/ucrt64/include/c++/13.1.0 MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  D:/new_msys64/ucrt64/include/c++/13.1.0 MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif( D:/new_msys64/ucrt64/include/c++/13.1.0 MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ D:/new_msys64/ucrt64/include/c++/13.1.0]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if( D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line  D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if( D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif( D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if( D:/new_msys64/ucrt64/include/c++/13.1.0/backward MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  D:/new_msys64/ucrt64/include/c++/13.1.0/backward MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line  D:/new_msys64/ucrt64/include/c++/13.1.0/backward )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if( D:/new_msys64/ucrt64/include/c++/13.1.0/backward MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  D:/new_msys64/ucrt64/include/c++/13.1.0/backward MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif( D:/new_msys64/ucrt64/include/c++/13.1.0/backward MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ D:/new_msys64/ucrt64/include/c++/13.1.0/backward]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if( D:/new_msys64/ucrt64/lib/clang/16/include MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  D:/new_msys64/ucrt64/lib/clang/16/include MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line  D:/new_msys64/ucrt64/lib/clang/16/include )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if( D:/new_msys64/ucrt64/lib/clang/16/include MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  D:/new_msys64/ucrt64/lib/clang/16/include MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif( D:/new_msys64/ucrt64/lib/clang/16/include MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ D:/new_msys64/ucrt64/lib/clang/16/include]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if( D:/new_msys64/ucrt64/include MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  D:/new_msys64/ucrt64/include MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line  D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if( D:/new_msys64/ucrt64/include MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  D:/new_msys64/ucrt64/include MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif( D:/new_msys64/ucrt64/include MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [ D:/new_msys64/ucrt64/include]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(End of search list. MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT End of search list. MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line End of search list. )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(End of search list. MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT End of search list. MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(End of search list. MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [End of search list.]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(Linking CXX executable cmTC_d1bc9.exe MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Linking CXX executable cmTC_d1bc9.exe MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line Linking CXX executable cmTC_d1bc9.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(Linking CXX executable cmTC_d1bc9.exe MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Linking CXX executable cmTC_d1bc9.exe MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(Linking CXX executable cmTC_d1bc9.exe MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [Linking CXX executable cmTC_d1bc9.exe]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT /D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line /D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT /D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj"  MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT /D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj"  MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line /D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj"  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj"  MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT /D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj"  MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj"  MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj" ]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl,--whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl,--no-whole-archive -o cmTC_d1bc9.exe -Wl,--out-implib,libcmTC_d1bc9.dll.a -Wl,--major-image-version,0,--minor-image-version,0  MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT /D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl,--whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl,--no-whole-archive -o cmTC_d1bc9.exe -Wl,--out-implib,libcmTC_d1bc9.dll.a -Wl,--major-image-version,0,--minor-image-version,0  MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line /D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl,--whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl,--no-whole-archive -o cmTC_d1bc9.exe -Wl,--out-implib,libcmTC_d1bc9.dll.a -Wl,--major-image-version,0,--minor-image-version,0  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl --no-whole-archive -o cmTC_d1bc9.exe -Wl --out-implib libcmTC_d1bc9.dll.a -Wl --major-image-version 0 --minor-image-version 0  MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT /D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl --no-whole-archive -o cmTC_d1bc9.exe -Wl --out-implib libcmTC_d1bc9.dll.a -Wl --major-image-version 0 --minor-image-version 0  MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl --no-whole-archive -o cmTC_d1bc9.exe -Wl --out-implib libcmTC_d1bc9.dll.a -Wl --major-image-version 0 --minor-image-version 0  MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl --no-whole-archive -o cmTC_d1bc9.exe -Wl --out-implib libcmTC_d1bc9.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(clang version 16.0.5 MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT clang version 16.0.5 MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line clang version 16.0.5 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(clang version 16.0.5 MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT clang version 16.0.5 MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(clang version 16.0.5 MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [clang version 16.0.5]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(Target: x86_64-w64-windows-gnu MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Target: x86_64-w64-windows-gnu MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line Target: x86_64-w64-windows-gnu )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(Target: x86_64-w64-windows-gnu MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Target: x86_64-w64-windows-gnu MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(Target: x86_64-w64-windows-gnu MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [Target: x86_64-w64-windows-gnu]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(Thread model: posix MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Thread model: posix MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line Thread model: posix )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(Thread model: posix MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT Thread model: posix MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(Thread model: posix MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [Thread model: posix]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if(InstalledDir: D:/new_msys64/ucrt64/bin MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT InstalledDir: D:/new_msys64/ucrt64/bin MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(65):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(67):  string(REGEX REPLACE ,   line InstalledDir: D:/new_msys64/ucrt64/bin )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(68):  if(InstalledDir: D:/new_msys64/ucrt64/bin MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT InstalledDir: D:/new_msys64/ucrt64/bin MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if( MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(168):  elseif(InstalledDir: D:/new_msys64/ucrt64/bin MATCHES LPATH(=| is:? *)(.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(174):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(175):  string(APPEND log   ignore line: [InstalledDir: D:/new_msys64/ucrt64/bin]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(46):  set(cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(47):  if( "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) AND NOT  "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o MATCHES collect2 version |^[A-Za-z0-9_]+=|/ldfe  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(49):  if(XCODE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(59):  separate_arguments(args NATIVE_COMMAND  "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(60):  list(GET args 0 cmd )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(61):  if(D:/new_msys64/ucrt64/bin/ld MATCHES -> )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(78):  set(is_msvc 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(79):  if(EXTRA_PARSE_LANGUAGE AND ( x STREQUAL xMSVC OR x STREQUAL xMSVC ) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(84):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(85):  if(D:/new_msys64/ucrt64/bin/ld MATCHES ^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(86):  string(APPEND log   link line: [ "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(87):  string(REGEX REPLACE ;-([LYz]); ;-\1 args D:/new_msys64/ucrt64/bin/ld;-m;i386pep;-Bdynamic;-o;cmTC_d1bc9.exe;D:/new_msys64/ucrt64/lib/crt2.o;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o;-LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0;-LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib;-LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib;-LD:/new_msys64/ucrt64/lib;-LD:/new_msys64/ucrt64/lib/clang/16/lib/windows;--whole-archive;CMakeFiles/cmTC_d1bc9.dir/objects.a;--no-whole-archive;--out-implib;libcmTC_d1bc9.dll.a;--major-image-version;0;--minor-image-version;0;-lstdc++;-lmingw32;-lgcc_s;-lgcc;-lmoldname;-lmingwex;-lmsvcrt;-lpthread;-ladvapi32;-lshell32;-luser32;-lkernel32;-lmingw32;-lgcc_s;-lgcc;-lmoldname;-lmingwex;-lmsvcrt;-lkernel32;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(88):  set(skip_value_of  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(89):  foreach(arg IN LISTS args )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(D:/new_msys64/ucrt64/bin/ld MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(D:/new_msys64/ucrt64/bin/ld MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND D:/new_msys64/ucrt64/bin/ld STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND D:/new_msys64/ucrt64/bin/ld MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(D:/new_msys64/ucrt64/bin/ld STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(D:/new_msys64/ucrt64/bin/ld MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(D:/new_msys64/ucrt64/bin/ld MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(D:/new_msys64/ucrt64/bin/ld MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(D:/new_msys64/ucrt64/bin/ld MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(D:/new_msys64/ucrt64/bin/ld MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(D:/new_msys64/ucrt64/bin/ld STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(D:/new_msys64/ucrt64/bin/ld STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(D:/new_msys64/ucrt64/bin/ld MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(D:/new_msys64/ucrt64/bin/ld MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(D:/new_msys64/ucrt64/bin/ld STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [D:/new_msys64/ucrt64/bin/ld] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-m MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-m MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -m STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -m MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-m STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-m MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(-m MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(-m MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(-m MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(-m MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(-m STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(-m STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(-m MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(-m MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(-m STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [-m] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(i386pep MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(i386pep MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND i386pep STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND i386pep MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(i386pep STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(i386pep MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(i386pep MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(i386pep MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(i386pep MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(i386pep MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(i386pep STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(i386pep STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(i386pep MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(i386pep MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(i386pep STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [i386pep] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-Bdynamic MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-Bdynamic MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -Bdynamic STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -Bdynamic MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-Bdynamic STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-Bdynamic MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(-Bdynamic MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(-Bdynamic MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(-Bdynamic MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(-Bdynamic MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(-Bdynamic STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(-Bdynamic STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(150):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(151):  string(APPEND log     arg [-Bdynamic] ==> search dynamic
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-o MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-o MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -o STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -o MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-o STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-o MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(-o MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(-o MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(-o MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(-o MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(-o STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(-o STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(-o MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(-o MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(-o STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [-o] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(cmTC_d1bc9.exe MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(cmTC_d1bc9.exe MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND cmTC_d1bc9.exe STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND cmTC_d1bc9.exe MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(cmTC_d1bc9.exe STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(cmTC_d1bc9.exe MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(cmTC_d1bc9.exe MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(cmTC_d1bc9.exe MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(cmTC_d1bc9.exe MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(cmTC_d1bc9.exe MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(cmTC_d1bc9.exe STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(cmTC_d1bc9.exe STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(cmTC_d1bc9.exe MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(cmTC_d1bc9.exe MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(cmTC_d1bc9.exe STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [cmTC_d1bc9.exe] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(D:/new_msys64/ucrt64/lib/crt2.o MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(D:/new_msys64/ucrt64/lib/crt2.o MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND D:/new_msys64/ucrt64/lib/crt2.o STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND D:/new_msys64/ucrt64/lib/crt2.o MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(D:/new_msys64/ucrt64/lib/crt2.o STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(D:/new_msys64/ucrt64/lib/crt2.o MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(D:/new_msys64/ucrt64/lib/crt2.o MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(D:/new_msys64/ucrt64/lib/crt2.o MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(D:/new_msys64/ucrt64/lib/crt2.o MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(132):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(133):  list(APPEND implicit_objs_tmp D:/new_msys64/ucrt64/lib/crt2.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(134):  string(APPEND log     arg [D:/new_msys64/ucrt64/lib/crt2.o] ==> obj [D:/new_msys64/ucrt64/lib/crt2.o]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(136):  if(obj_regex AND D:/new_msys64/ucrt64/lib/crt2.o MATCHES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(132):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(133):  list(APPEND implicit_objs_tmp D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(134):  string(APPEND log     arg [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o] ==> obj [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(136):  if(obj_regex AND D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o MATCHES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(95):  string(REGEX REPLACE ^-L  dir -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(96):  list(APPEND implicit_dirs_tmp D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(97):  string(APPEND log     arg [-LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0] ==> dir [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(95):  string(REGEX REPLACE ^-L  dir -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(96):  list(APPEND implicit_dirs_tmp D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(97):  string(APPEND log     arg [-LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib] ==> dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(95):  string(REGEX REPLACE ^-L  dir -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(96):  list(APPEND implicit_dirs_tmp D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(97):  string(APPEND log     arg [-LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib] ==> dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-LD:/new_msys64/ucrt64/lib MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(95):  string(REGEX REPLACE ^-L  dir -LD:/new_msys64/ucrt64/lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(96):  list(APPEND implicit_dirs_tmp D:/new_msys64/ucrt64/lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(97):  string(APPEND log     arg [-LD:/new_msys64/ucrt64/lib] ==> dir [D:/new_msys64/ucrt64/lib]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-LD:/new_msys64/ucrt64/lib/clang/16/lib/windows MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(95):  string(REGEX REPLACE ^-L  dir -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(96):  list(APPEND implicit_dirs_tmp D:/new_msys64/ucrt64/lib/clang/16/lib/windows )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(97):  string(APPEND log     arg [-LD:/new_msys64/ucrt64/lib/clang/16/lib/windows] ==> dir [D:/new_msys64/ucrt64/lib/clang/16/lib/windows]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(--whole-archive MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(--whole-archive MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND --whole-archive STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND --whole-archive MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(--whole-archive STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(--whole-archive MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(--whole-archive MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(--whole-archive MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(--whole-archive MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(--whole-archive MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(--whole-archive STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(--whole-archive STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(--whole-archive MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(--whole-archive MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(--whole-archive STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [--whole-archive] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND CMakeFiles/cmTC_d1bc9.dir/objects.a STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(CMakeFiles/cmTC_d1bc9.dir/objects.a STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [CMakeFiles/cmTC_d1bc9.dir/objects.a] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(--no-whole-archive MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(--no-whole-archive MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND --no-whole-archive STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND --no-whole-archive MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(--no-whole-archive STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(--no-whole-archive MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(--no-whole-archive MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(--no-whole-archive MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(--no-whole-archive MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(--no-whole-archive MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(--no-whole-archive STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(--no-whole-archive STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(--no-whole-archive MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(--no-whole-archive MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(--no-whole-archive STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [--no-whole-archive] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(--out-implib MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(--out-implib MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND --out-implib STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND --out-implib MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(--out-implib STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(--out-implib MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(--out-implib MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(--out-implib MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(--out-implib MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(--out-implib MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(--out-implib STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(--out-implib STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(--out-implib MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(--out-implib MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(--out-implib STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [--out-implib] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(libcmTC_d1bc9.dll.a MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(libcmTC_d1bc9.dll.a MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND libcmTC_d1bc9.dll.a STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND libcmTC_d1bc9.dll.a MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(libcmTC_d1bc9.dll.a STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(libcmTC_d1bc9.dll.a MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(libcmTC_d1bc9.dll.a MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(libcmTC_d1bc9.dll.a MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(libcmTC_d1bc9.dll.a MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(libcmTC_d1bc9.dll.a MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(libcmTC_d1bc9.dll.a STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(libcmTC_d1bc9.dll.a STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(libcmTC_d1bc9.dll.a MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(libcmTC_d1bc9.dll.a MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(libcmTC_d1bc9.dll.a STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [libcmTC_d1bc9.dll.a] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(--major-image-version MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(--major-image-version MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND --major-image-version STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND --major-image-version MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(--major-image-version STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(--major-image-version MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(--major-image-version MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(--major-image-version MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(--major-image-version MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(--major-image-version MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(--major-image-version STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(--major-image-version STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(--major-image-version MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(--major-image-version MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(--major-image-version STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [--major-image-version] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(0 MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(0 MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND 0 STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND 0 MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(0 STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(0 MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(0 MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(0 MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(0 MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(0 MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(0 STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(0 STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(0 MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(0 MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(0 STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [0] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(--minor-image-version MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(--minor-image-version MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND --minor-image-version STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND --minor-image-version MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(--minor-image-version STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(--minor-image-version MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(--minor-image-version MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(--minor-image-version MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(--minor-image-version MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(--minor-image-version MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(--minor-image-version STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(--minor-image-version STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(--minor-image-version MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(--minor-image-version MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(--minor-image-version STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [--minor-image-version] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(0 MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(0 MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND 0 STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND 0 MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(0 STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(0 MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(0 MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(0 MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(0 MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(140):  elseif(0 MATCHES ^-Y(P,)?[^0-9] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(146):  elseif(0 STREQUAL -Bstatic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(149):  elseif(0 STREQUAL -Bdynamic )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(152):  elseif(0 MATCHES ^-l: )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(156):  elseif(0 MATCHES ^-z(all|default|weak)extract )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(160):  elseif(0 STREQUAL cl.exe )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(163):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(164):  string(APPEND log     arg [0] ==> ignore
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lstdc++ MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lstdc++ MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lstdc++ STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lstdc++ MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lstdc++ STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lstdc++ MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib stdc++ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp stdc++ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lstdc++] ==> lib [stdc++]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lmingw32 MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lmingw32 MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lmingw32 STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lmingw32 MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lmingw32 STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lmingw32 MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lmingw32] ==> lib [mingw32]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lgcc_s MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lgcc_s MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lgcc_s STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lgcc_s MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lgcc_s STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lgcc_s MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib gcc_s )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp gcc_s )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lgcc_s] ==> lib [gcc_s]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lgcc MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lgcc MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lgcc STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lgcc MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lgcc STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lgcc MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lgcc] ==> lib [gcc]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lmoldname MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lmoldname MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lmoldname STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lmoldname MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lmoldname STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lmoldname MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib moldname )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp moldname )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lmoldname] ==> lib [moldname]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lmingwex MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lmingwex MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lmingwex STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lmingwex MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lmingwex STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lmingwex MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib mingwex )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp mingwex )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lmingwex] ==> lib [mingwex]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lmsvcrt MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lmsvcrt MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lmsvcrt STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lmsvcrt MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lmsvcrt STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lmsvcrt MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib msvcrt )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp msvcrt )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lmsvcrt] ==> lib [msvcrt]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lpthread MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lpthread MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lpthread STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lpthread MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lpthread STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lpthread MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib pthread )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp pthread )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lpthread] ==> lib [pthread]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-ladvapi32 MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-ladvapi32 MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -ladvapi32 STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -ladvapi32 MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-ladvapi32 STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-ladvapi32 MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib advapi32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp advapi32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-ladvapi32] ==> lib [advapi32]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lshell32 MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lshell32 MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lshell32 STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lshell32 MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lshell32 STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lshell32 MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib shell32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp shell32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lshell32] ==> lib [shell32]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-luser32 MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-luser32 MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -luser32 STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -luser32 MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-luser32 STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-luser32 MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib user32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp user32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-luser32] ==> lib [user32]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lkernel32 MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lkernel32 MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lkernel32 STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lkernel32 MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lkernel32 STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lkernel32 MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib kernel32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp kernel32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lkernel32] ==> lib [kernel32]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lmingw32 MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lmingw32 MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lmingw32 STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lmingw32 MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lmingw32 STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lmingw32 MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lmingw32] ==> lib [mingw32]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lgcc_s MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lgcc_s MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lgcc_s STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lgcc_s MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lgcc_s STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lgcc_s MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib gcc_s )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp gcc_s )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lgcc_s] ==> lib [gcc_s]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lgcc MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lgcc MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lgcc STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lgcc MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lgcc STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lgcc MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lgcc] ==> lib [gcc]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lmoldname MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lmoldname MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lmoldname STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lmoldname MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lmoldname STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lmoldname MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib moldname )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp moldname )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lmoldname] ==> lib [moldname]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lmingwex MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lmingwex MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lmingwex STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lmingwex MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lmingwex STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lmingwex MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib mingwex )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp mingwex )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lmingwex] ==> lib [mingwex]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lmsvcrt MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lmsvcrt MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lmsvcrt STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lmsvcrt MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lmsvcrt STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lmsvcrt MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib msvcrt )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp msvcrt )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lmsvcrt] ==> lib [msvcrt]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(-lkernel32 MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(-lkernel32 MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND -lkernel32 STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND -lkernel32 MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(-lkernel32 STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(-lkernel32 MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(115):  set(lib kernel32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(116):  if(search_static AND lib MATCHES ^(gfortran|stdc\+\+)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(120):  list(APPEND implicit_libs_tmp kernel32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(121):  string(APPEND log     arg [-lkernel32] ==> lib [kernel32]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(90):  if(skip_value_of )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(93):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o MATCHES ^-L(.:)?[/\] )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(98):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o MATCHES ^[-/](LIBPATH|libpath):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(103):  elseif(is_msvc AND D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o STREQUAL -link )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(105):  elseif(is_msvc AND D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o MATCHES ^(.*\.[Ll][Ii][Bb])$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(109):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o STREQUAL -lto_library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(113):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o MATCHES ^-l([^:].*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(122):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o MATCHES ^(.:)?[/\].*\.a$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(126):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o MATCHES ^[-/](DEFAULTLIB|defaultlib):(.+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(131):  elseif(D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o MATCHES ^(.:)?[/\].*\.o$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(132):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(133):  list(APPEND implicit_objs_tmp D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(134):  string(APPEND log     arg [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o] ==> obj [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(136):  if(obj_regex AND D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o MATCHES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(167):  break()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(180):  if(Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd;;Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build;make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd';Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj;/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp;clang version 16.0.5;Target: x86_64-w64-windows-gnu;Thread model: posix;InstalledDir: D:/new_msys64/ucrt64/bin; (in-process); "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp;clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu;ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include";#include "..." search starts here:;#include <...> search starts here:; D:/new_msys64/ucrt64/include/c++/13.1.0; D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32; D:/new_msys64/ucrt64/include/c++/13.1.0/backward; D:/new_msys64/ucrt64/lib/clang/16/include; D:/new_msys64/ucrt64/include;End of search list.;Linking CXX executable cmTC_d1bc9.exe;/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a;/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj" ;/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl,--whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl,--no-whole-archive -o cmTC_d1bc9.exe -Wl,--out-implib,libcmTC_d1bc9.dll.a -Wl,--major-image-version,0,--minor-image-version,0 ;clang version 16.0.5;Target: x86_64-w64-windows-gnu;Thread model: posix;InstalledDir: D:/new_msys64/ucrt64/bin; "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o;make[1]: Leaving directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd';; MATCHES ;Library search paths:((;	[^;]+)+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(185):  if(Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd;;Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build;make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd';Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj;/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp;clang version 16.0.5;Target: x86_64-w64-windows-gnu;Thread model: posix;InstalledDir: D:/new_msys64/ucrt64/bin; (in-process); "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp;clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu;ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32";ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include";ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include";#include "..." search starts here:;#include <...> search starts here:; D:/new_msys64/ucrt64/include/c++/13.1.0; D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32; D:/new_msys64/ucrt64/include/c++/13.1.0/backward; D:/new_msys64/ucrt64/lib/clang/16/include; D:/new_msys64/ucrt64/include;End of search list.;Linking CXX executable cmTC_d1bc9.exe;/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a;/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj" ;/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl,--whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl,--no-whole-archive -o cmTC_d1bc9.exe -Wl,--out-implib,libcmTC_d1bc9.dll.a -Wl,--major-image-version,0,--minor-image-version,0 ;clang version 16.0.5;Target: x86_64-w64-windows-gnu;Thread model: posix;InstalledDir: D:/new_msys64/ucrt64/bin; "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o;make[1]: Leaving directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd';; MATCHES ;Framework search paths:((;	[^;]+)+) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(193):  set(implicit_libs  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(194):  foreach(lib IN LISTS implicit_libs_tmp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xstdc++ MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xstdc++ MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE stdc++ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs stdc++ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xmingw32 MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xmingw32 MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xgcc_s MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xgcc_s MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE gcc_s )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs gcc_s )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xgcc MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xgcc MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xmoldname MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xmoldname MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE moldname )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs moldname )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xmingwex MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xmingwex MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE mingwex )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs mingwex )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xmsvcrt MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xmsvcrt MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(202):  string(APPEND log   remove lib [msvcrt]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xpthread MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xpthread MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE pthread )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs pthread )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xadvapi32 MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xadvapi32 MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE advapi32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs advapi32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xshell32 MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xshell32 MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE shell32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs shell32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xuser32 MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xuser32 MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE user32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs user32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xkernel32 MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xkernel32 MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE kernel32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs kernel32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xmingw32 MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xmingw32 MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs mingw32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xgcc_s MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xgcc_s MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE gcc_s )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs gcc_s )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xgcc MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xgcc MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs gcc )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xmoldname MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xmoldname MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE moldname )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs moldname )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xmingwex MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xmingwex MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE mingwex )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs mingwex )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xmsvcrt MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xmsvcrt MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(202):  string(APPEND log   remove lib [msvcrt]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(195):  if(xkernel32 MATCHES ^xSEARCH_STATIC:(.*) )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(198):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(199):  set(search_static 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(201):  if(xkernel32 MATCHES ^x(crt.*\.o|gcc_eh.*|.*libgcc_eh.*|System.*|.*libclang_rt.*|msvcrt.*|libvcruntime.*|libucrt.*|libcmt.*)$ )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(203):  elseif(search_static )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(218):  elseif(IS_ABSOLUTE kernel32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(224):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(225):  list(APPEND implicit_libs kernel32 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(229):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(230):  set(implicit_objs  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(231):  foreach(obj IN LISTS implicit_objs_tmp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(232):  if(IS_ABSOLUTE D:/new_msys64/ucrt64/lib/crt2.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(233):  get_filename_component(abs D:/new_msys64/ucrt64/lib/crt2.o ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(234):  if(NOT xD:/new_msys64/ucrt64/lib/crt2.o STREQUAL xD:/new_msys64/ucrt64/lib/crt2.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(237):  list(APPEND implicit_objs D:/new_msys64/ucrt64/lib/crt2.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(232):  if(IS_ABSOLUTE D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(233):  get_filename_component(abs D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(234):  if(NOT xD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o STREQUAL xD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(237):  list(APPEND implicit_objs D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(232):  if(IS_ABSOLUTE D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(233):  get_filename_component(abs D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(234):  if(NOT xD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o STREQUAL xD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(237):  list(APPEND implicit_objs D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(245):  set(desc_dirs library )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(246):  set(desc_fwks framework )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(247):  foreach(t dirs fwks )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(248):  set(implicit_dirs  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(249):  foreach(d IN LISTS implicit_dirs_tmp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(250):  get_filename_component(dir D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(251):  string(FIND D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 /CMakeFiles/ pos )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(252):  if(NOT pos LESS 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(254):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(255):  set(msg  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(256):  list(APPEND implicit_dirs D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(258):  string(APPEND log   collapse library dir [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0] ==> [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(250):  get_filename_component(dir D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(251):  string(FIND D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib /CMakeFiles/ pos )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(252):  if(NOT pos LESS 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(254):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(255):  set(msg  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(256):  list(APPEND implicit_dirs D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(258):  string(APPEND log   collapse library dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib] ==> [D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(250):  get_filename_component(dir D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(251):  string(FIND D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib /CMakeFiles/ pos )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(252):  if(NOT pos LESS 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(254):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(255):  set(msg  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(256):  list(APPEND implicit_dirs D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(258):  string(APPEND log   collapse library dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib] ==> [D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(250):  get_filename_component(dir D:/new_msys64/ucrt64/lib ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(251):  string(FIND D:/new_msys64/ucrt64/lib /CMakeFiles/ pos )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(252):  if(NOT pos LESS 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(254):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(255):  set(msg  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(256):  list(APPEND implicit_dirs D:/new_msys64/ucrt64/lib )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(258):  string(APPEND log   collapse library dir [D:/new_msys64/ucrt64/lib] ==> [D:/new_msys64/ucrt64/lib]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(250):  get_filename_component(dir D:/new_msys64/ucrt64/lib/clang/16/lib/windows ABSOLUTE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(251):  string(FIND D:/new_msys64/ucrt64/lib/clang/16/lib/windows /CMakeFiles/ pos )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(252):  if(NOT pos LESS 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(254):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(255):  set(msg  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(256):  list(APPEND implicit_dirs D:/new_msys64/ucrt64/lib/clang/16/lib/windows )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(258):  string(APPEND log   collapse library dir [D:/new_msys64/ucrt64/lib/clang/16/lib/windows] ==> [D:/new_msys64/ucrt64/lib/clang/16/lib/windows]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(260):  list(REMOVE_DUPLICATES implicit_dirs )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(248):  set(implicit_fwks  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(249):  foreach(d IN LISTS implicit_fwks_tmp )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(260):  list(REMOVE_DUPLICATES implicit_fwks )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(264):  string(APPEND log   implicit libs: [stdc++;mingw32;gcc_s;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc_s;gcc;moldname;mingwex;kernel32]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(265):  string(APPEND log   implicit objs: [D:/new_msys64/ucrt64/lib/crt2.o;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(266):  string(APPEND log   implicit dirs: [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0;D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib;D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib;D:/new_msys64/ucrt64/lib;D:/new_msys64/ucrt64/lib/clang/16/lib/windows]
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(267):  string(APPEND log   implicit fwks: []
 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(270):  set(implicit_libs stdc++;mingw32;gcc_s;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc_s;gcc;moldname;mingwex;kernel32 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(271):  set(implicit_dirs D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0;D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib;D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib;D:/new_msys64/ucrt64/lib;D:/new_msys64/ucrt64/lib/clang/16/lib/windows PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(272):  set(implicit_fwks  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(273):  set(log   link line regex: [^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd]
  ignore line: []
  ignore line: [Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build]
  ignore line: [make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd']
  ignore line: [Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj]
  ignore line: [/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp]
  ignore line: [clang version 16.0.5]
  ignore line: [Target: x86_64-w64-windows-gnu]
  ignore line: [Thread model: posix]
  ignore line: [InstalledDir: D:/new_msys64/ucrt64/bin]
  ignore line: [ (in-process)]
  ignore line: [ "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp]
  ignore line: [clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include"]
  ignore line: [#include "..." search starts here:]
  ignore line: [#include <...> search starts here:]
  ignore line: [ D:/new_msys64/ucrt64/include/c++/13.1.0]
  ignore line: [ D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32]
  ignore line: [ D:/new_msys64/ucrt64/include/c++/13.1.0/backward]
  ignore line: [ D:/new_msys64/ucrt64/lib/clang/16/include]
  ignore line: [ D:/new_msys64/ucrt64/include]
  ignore line: [End of search list.]
  ignore line: [Linking CXX executable cmTC_d1bc9.exe]
  ignore line: [/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a]
  ignore line: [/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj" ]
  ignore line: [/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl --no-whole-archive -o cmTC_d1bc9.exe -Wl --out-implib libcmTC_d1bc9.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
  ignore line: [clang version 16.0.5]
  ignore line: [Target: x86_64-w64-windows-gnu]
  ignore line: [Thread model: posix]
  ignore line: [InstalledDir: D:/new_msys64/ucrt64/bin]
  link line: [ "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o]
    arg [D:/new_msys64/ucrt64/bin/ld] ==> ignore
    arg [-m] ==> ignore
    arg [i386pep] ==> ignore
    arg [-Bdynamic] ==> search dynamic
    arg [-o] ==> ignore
    arg [cmTC_d1bc9.exe] ==> ignore
    arg [D:/new_msys64/ucrt64/lib/crt2.o] ==> obj [D:/new_msys64/ucrt64/lib/crt2.o]
    arg [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o] ==> obj [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o]
    arg [-LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0] ==> dir [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0]
    arg [-LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib] ==> dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib]
    arg [-LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib] ==> dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib]
    arg [-LD:/new_msys64/ucrt64/lib] ==> dir [D:/new_msys64/ucrt64/lib]
    arg [-LD:/new_msys64/ucrt64/lib/clang/16/lib/windows] ==> dir [D:/new_msys64/ucrt64/lib/clang/16/lib/windows]
    arg [--whole-archive] ==> ignore
    arg [CMakeFiles/cmTC_d1bc9.dir/objects.a] ==> ignore
    arg [--no-whole-archive] ==> ignore
    arg [--out-implib] ==> ignore
    arg [libcmTC_d1bc9.dll.a] ==> ignore
    arg [--major-image-version] ==> ignore
    arg [0] ==> ignore
    arg [--minor-image-version] ==> ignore
    arg [0] ==> ignore
    arg [-lstdc++] ==> lib [stdc++]
    arg [-lmingw32] ==> lib [mingw32]
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [-lgcc] ==> lib [gcc]
    arg [-lmoldname] ==> lib [moldname]
    arg [-lmingwex] ==> lib [mingwex]
    arg [-lmsvcrt] ==> lib [msvcrt]
    arg [-lpthread] ==> lib [pthread]
    arg [-ladvapi32] ==> lib [advapi32]
    arg [-lshell32] ==> lib [shell32]
    arg [-luser32] ==> lib [user32]
    arg [-lkernel32] ==> lib [kernel32]
    arg [-lmingw32] ==> lib [mingw32]
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [-lgcc] ==> lib [gcc]
    arg [-lmoldname] ==> lib [moldname]
    arg [-lmingwex] ==> lib [mingwex]
    arg [-lmsvcrt] ==> lib [msvcrt]
    arg [-lkernel32] ==> lib [kernel32]
    arg [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o] ==> obj [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o]
  remove lib [msvcrt]
  remove lib [msvcrt]
  collapse library dir [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0] ==> [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0]
  collapse library dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib] ==> [D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib]
  collapse library dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib] ==> [D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib]
  collapse library dir [D:/new_msys64/ucrt64/lib] ==> [D:/new_msys64/ucrt64/lib]
  collapse library dir [D:/new_msys64/ucrt64/lib/clang/16/lib/windows] ==> [D:/new_msys64/ucrt64/lib/clang/16/lib/windows]
  implicit libs: [stdc++;mingw32;gcc_s;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc_s;gcc;moldname;mingwex;kernel32]
  implicit objs: [D:/new_msys64/ucrt64/lib/crt2.o;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o]
  implicit dirs: [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0;D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib;D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib;D:/new_msys64/ucrt64/lib;D:/new_msys64/ucrt64/lib/clang/16/lib/windows]
  implicit fwks: []
 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(275):  if(EXTRA_PARSE_COMPUTE_IMPLICIT_OBJECTS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake(276):  set(implicit_objs D:/new_msys64/ucrt64/lib/crt2.o;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(152):  message(CONFIGURE_LOG Parsed CXX implicit link information:
  link line regex: [^( *|.*[/\])(ld\.lld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd]
  ignore line: []
  ignore line: [Run Build Command(s):D:/new_msys64/ucrt64/bin/cmake.exe -E env VERBOSE=1 D:/new_msys64/usr/bin/make.exe -f Makefile cmTC_d1bc9/fast && /usr/bin/make  -f CMakeFiles/cmTC_d1bc9.dir/build.make CMakeFiles/cmTC_d1bc9.dir/build]
  ignore line: [make[1]: Entering directory '/d/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd']
  ignore line: [Building CXX object CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj]
  ignore line: [/D/new_msys64/ucrt64/bin/clang++.exe   -v -MD -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -MF CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -c /D/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp]
  ignore line: [clang version 16.0.5]
  ignore line: [Target: x86_64-w64-windows-gnu]
  ignore line: [Thread model: posix]
  ignore line: [InstalledDir: D:/new_msys64/ucrt64/bin]
  ignore line: [ (in-process)]
  ignore line: [ "D:/new_msys64/ucrt64/bin/clang++.exe" -cc1 -triple x86_64-w64-windows-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -mms-bitfields -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -mllvm -treat-scalable-fixed-error-as-warning -debugger-tuning=gdb -v -fcoverage-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -resource-dir D:/new_msys64/ucrt64/lib/clang/16 -dependency-file CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj.d -MT CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -sys-header-deps -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++ -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/include/c++/13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++ -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32 -internal-isystem D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward -internal-isystem D:/new_msys64/ucrt64/lib/clang/16/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/include -internal-isystem D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include -internal-isystem D:/new_msys64/ucrt64/include -fdeprecated-macro -fdebug-compilation-dir=D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/CMakeScratch/TryCompile-i250wd -ferror-limit 19 -fno-use-cxa-atexit -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -exception-model=seh -faddrsig -o CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj -x c++ D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompilerABI.cpp]
  ignore line: [clang -cc1 version 16.0.5 based upon LLVM 16.0.5 default target x86_64-w64-windows-gnu]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include/c++/13.1.0/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1.0/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13.1/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/x86_64-w64-mingw32"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/include/g++-v13/backward"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/include"]
  ignore line: [ignoring nonexistent directory "D:/new_msys64/ucrt64/x86_64-w64-mingw32/usr/include"]
  ignore line: [#include "..." search starts here:]
  ignore line: [#include <...> search starts here:]
  ignore line: [ D:/new_msys64/ucrt64/include/c++/13.1.0]
  ignore line: [ D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32]
  ignore line: [ D:/new_msys64/ucrt64/include/c++/13.1.0/backward]
  ignore line: [ D:/new_msys64/ucrt64/lib/clang/16/include]
  ignore line: [ D:/new_msys64/ucrt64/include]
  ignore line: [End of search list.]
  ignore line: [Linking CXX executable cmTC_d1bc9.exe]
  ignore line: [/D/new_msys64/ucrt64/bin/cmake.exe -E rm -f CMakeFiles/cmTC_d1bc9.dir/objects.a]
  ignore line: [/D/new_msys64/ucrt64/bin/llvm-ar.exe qc CMakeFiles/cmTC_d1bc9.dir/objects.a "CMakeFiles/cmTC_d1bc9.dir/CMakeCXXCompilerABI.cpp.obj" ]
  ignore line: [/D/new_msys64/ucrt64/bin/clang++.exe  -v -Wl --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a -Wl --no-whole-archive -o cmTC_d1bc9.exe -Wl --out-implib libcmTC_d1bc9.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
  ignore line: [clang version 16.0.5]
  ignore line: [Target: x86_64-w64-windows-gnu]
  ignore line: [Thread model: posix]
  ignore line: [InstalledDir: D:/new_msys64/ucrt64/bin]
  link line: [ "D:/new_msys64/ucrt64/bin/ld" -m i386pep -Bdynamic -o cmTC_d1bc9.exe D:/new_msys64/ucrt64/lib/crt2.o D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0 -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib -LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib -LD:/new_msys64/ucrt64/lib -LD:/new_msys64/ucrt64/lib/clang/16/lib/windows --whole-archive CMakeFiles/cmTC_d1bc9.dir/objects.a --no-whole-archive --out-implib libcmTC_d1bc9.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o]
    arg [D:/new_msys64/ucrt64/bin/ld] ==> ignore
    arg [-m] ==> ignore
    arg [i386pep] ==> ignore
    arg [-Bdynamic] ==> search dynamic
    arg [-o] ==> ignore
    arg [cmTC_d1bc9.exe] ==> ignore
    arg [D:/new_msys64/ucrt64/lib/crt2.o] ==> obj [D:/new_msys64/ucrt64/lib/crt2.o]
    arg [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o] ==> obj [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o]
    arg [-LD:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0] ==> dir [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0]
    arg [-LD:/new_msys64/ucrt64/x86_64-w64-mingw32/lib] ==> dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib]
    arg [-LD:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib] ==> dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib]
    arg [-LD:/new_msys64/ucrt64/lib] ==> dir [D:/new_msys64/ucrt64/lib]
    arg [-LD:/new_msys64/ucrt64/lib/clang/16/lib/windows] ==> dir [D:/new_msys64/ucrt64/lib/clang/16/lib/windows]
    arg [--whole-archive] ==> ignore
    arg [CMakeFiles/cmTC_d1bc9.dir/objects.a] ==> ignore
    arg [--no-whole-archive] ==> ignore
    arg [--out-implib] ==> ignore
    arg [libcmTC_d1bc9.dll.a] ==> ignore
    arg [--major-image-version] ==> ignore
    arg [0] ==> ignore
    arg [--minor-image-version] ==> ignore
    arg [0] ==> ignore
    arg [-lstdc++] ==> lib [stdc++]
    arg [-lmingw32] ==> lib [mingw32]
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [-lgcc] ==> lib [gcc]
    arg [-lmoldname] ==> lib [moldname]
    arg [-lmingwex] ==> lib [mingwex]
    arg [-lmsvcrt] ==> lib [msvcrt]
    arg [-lpthread] ==> lib [pthread]
    arg [-ladvapi32] ==> lib [advapi32]
    arg [-lshell32] ==> lib [shell32]
    arg [-luser32] ==> lib [user32]
    arg [-lkernel32] ==> lib [kernel32]
    arg [-lmingw32] ==> lib [mingw32]
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [-lgcc] ==> lib [gcc]
    arg [-lmoldname] ==> lib [moldname]
    arg [-lmingwex] ==> lib [mingwex]
    arg [-lmsvcrt] ==> lib [msvcrt]
    arg [-lkernel32] ==> lib [kernel32]
    arg [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o] ==> obj [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o]
  remove lib [msvcrt]
  remove lib [msvcrt]
  collapse library dir [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0] ==> [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0]
  collapse library dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib] ==> [D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib]
  collapse library dir [D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib] ==> [D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib]
  collapse library dir [D:/new_msys64/ucrt64/lib] ==> [D:/new_msys64/ucrt64/lib]
  collapse library dir [D:/new_msys64/ucrt64/lib/clang/16/lib/windows] ==> [D:/new_msys64/ucrt64/lib/clang/16/lib/windows]
  implicit libs: [stdc++;mingw32;gcc_s;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc_s;gcc;moldname;mingwex;kernel32]
  implicit objs: [D:/new_msys64/ucrt64/lib/crt2.o;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o]
  implicit dirs: [D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0;D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib;D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib;D:/new_msys64/ucrt64/lib;D:/new_msys64/ucrt64/lib/clang/16/lib/windows]
  implicit fwks: []


 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(158):  if(CXX MATCHES Fortran AND MSYS Makefiles MATCHES Visual Studio )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(178):  if(DEFINED CMAKE_OSX_ARCHITECTURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(184):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES stdc++;mingw32;gcc_s;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc_s;gcc;moldname;mingwex;kernel32 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(185):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0;D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib;D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib;D:/new_msys64/ucrt64/lib;D:/new_msys64/ucrt64/lib/clang/16/lib/windows PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(186):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(188):  cmake_parse_library_architecture(CXX D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0;D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib;D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib;D:/new_msys64/ucrt64/lib;D:/new_msys64/ucrt64/lib/clang/16/lib/windows D:/new_msys64/ucrt64/lib/crt2.o;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o;D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o architecture_flag )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake(13):  unset(library_arch )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake(15):  if(CMAKE_LIBRARY_ARCHITECTURE_REGEX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake(34):  if(CMAKE_CXX_COMPILER_ID STREQUAL QCC )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake(49):  if(library_arch )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake(189):  if(architecture_flag )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(27):  if(CMAKE_CXX_ABI_COMPILED )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(29):  set(CMAKE_CXX_COMPILER_WORKS TRUE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(30):  message(STATUS Check for working CXX compiler: D:/new_msys64/ucrt64/bin/clang++.exe - skipped )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(38):  if(NOT CMAKE_CXX_COMPILER_WORKS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(69):  include(D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(5):  function(cmake_determine_compile_features lang )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(70):  CMAKE_DETERMINE_COMPILE_FEATURES(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(7):  if(xCXX STREQUAL xC AND COMMAND cmake_record_c_compile_features )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(57):  elseif(xCXX STREQUAL xCXX AND COMMAND cmake_record_cxx_compile_features )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(58):  message(CHECK_START Detecting CXX compile features )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(60):  set(CMAKE_CXX98_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(61):  set(CMAKE_CXX11_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(62):  set(CMAKE_CXX14_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(63):  set(CMAKE_CXX17_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(64):  set(CMAKE_CXX20_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(65):  set(CMAKE_CXX23_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(66):  set(CMAKE_CXX26_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(68):  include(D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(2):  macro(_record_compiler_features lang compile_flags feature_list )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(68):  macro(_record_compiler_features_c std )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(78):  macro(_record_compiler_features_cxx std )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(88):  macro(_record_compiler_features_cuda std )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(98):  macro(_record_compiler_features_hip std )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(108):  macro(_has_compiler_features lang level compile_flags feature_list )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(114):  macro(_has_compiler_features_c std )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(118):  macro(_has_compiler_features_cxx std )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(122):  macro(_has_compiler_features_cuda std )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(126):  macro(_has_compiler_features_hip std )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(70):  cmake_record_cxx_compile_features()
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(107):  set(_result 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(108):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX23_STANDARD_COMPILE_OPTION )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(109):  _has_compiler_features_cxx(23 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(119):  list(APPEND CMAKE_CXX23_COMPILE_FEATURES cxx_std_23 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(120):  _has_compiler_features(CXX 23 -std=c++2b CMAKE_CXX23_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(110):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX23_KNOWN_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(111):  list(APPEND CMAKE_CXX23_COMPILE_FEATURES  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(111):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX20_STANDARD_COMPILE_OPTION )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(112):  _has_compiler_features_cxx(20 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(119):  list(APPEND CMAKE_CXX20_COMPILE_FEATURES cxx_std_20 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(120):  _has_compiler_features(CXX 20 -std=c++20 CMAKE_CXX20_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(110):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX20_KNOWN_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(111):  list(APPEND CMAKE_CXX20_COMPILE_FEATURES  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(114):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX17_STANDARD_COMPILE_OPTION )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(115):  _has_compiler_features_cxx(17 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(119):  list(APPEND CMAKE_CXX17_COMPILE_FEATURES cxx_std_17 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(120):  _has_compiler_features(CXX 17 -std=c++17 CMAKE_CXX17_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(110):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX17_KNOWN_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(111):  list(APPEND CMAKE_CXX17_COMPILE_FEATURES  )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(117):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX14_STANDARD_COMPILE_OPTION )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(118):  if(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(119):  _has_compiler_features_cxx(14 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(119):  list(APPEND CMAKE_CXX14_COMPILE_FEATURES cxx_std_14 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(120):  _has_compiler_features(CXX 14 -std=c++14 CMAKE_CXX14_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(110):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX14_KNOWN_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(111):  list(APPEND CMAKE_CXX14_COMPILE_FEATURES cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(123):  unset(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(125):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX11_STANDARD_COMPILE_OPTION )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(126):  if(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(127):  _has_compiler_features_cxx(11 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(119):  list(APPEND CMAKE_CXX11_COMPILE_FEATURES cxx_std_11 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(120):  _has_compiler_features(CXX 11 -std=c++11 CMAKE_CXX11_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(110):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX11_KNOWN_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(111):  list(APPEND CMAKE_CXX11_COMPILE_FEATURES cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(131):  unset(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(133):  if(_result EQUAL 0 AND DEFINED CMAKE_CXX98_STANDARD_COMPILE_OPTION )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(134):  if(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(135):  _has_compiler_features_cxx(98 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(119):  list(APPEND CMAKE_CXX98_COMPILE_FEATURES cxx_std_98 )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(120):  _has_compiler_features(CXX 98 -std=c++98 CMAKE_CXX98_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(110):  get_property(known_features GLOBAL PROPERTY CMAKE_CXX98_KNOWN_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/Internal/FeatureTesting.cmake(111):  list(APPEND CMAKE_CXX98_COMPILE_FEATURES cxx_template_template_parameters )
D:/new_msys64/ucrt64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(139):  unset(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(72):  if(NOT _result EQUAL 0 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(77):  if(CMAKE_CXX23_COMPILE_FEATURES AND CMAKE_CXX26_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(80):  if(CMAKE_CXX20_COMPILE_FEATURES AND CMAKE_CXX23_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(81):  list(REMOVE_ITEM CMAKE_CXX23_COMPILE_FEATURES cxx_std_20 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(83):  if(CMAKE_CXX17_COMPILE_FEATURES AND CMAKE_CXX20_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(84):  list(REMOVE_ITEM CMAKE_CXX20_COMPILE_FEATURES cxx_std_17 )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(86):  if(CMAKE_CXX14_COMPILE_FEATURES AND CMAKE_CXX17_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(87):  list(REMOVE_ITEM CMAKE_CXX17_COMPILE_FEATURES cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(89):  if(CMAKE_CXX11_COMPILE_FEATURES AND CMAKE_CXX14_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(90):  list(REMOVE_ITEM CMAKE_CXX14_COMPILE_FEATURES cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(92):  if(CMAKE_CXX98_COMPILE_FEATURES AND CMAKE_CXX11_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(93):  list(REMOVE_ITEM CMAKE_CXX11_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(96):  if(NOT CMAKE_CXX_COMPILE_FEATURES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(97):  set(CMAKE_CXX_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates cxx_std_17 cxx_std_20 cxx_std_23  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(108):  set(CMAKE_CXX_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(109):  set(CMAKE_CXX98_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(110):  set(CMAKE_CXX11_COMPILE_FEATURES cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(111):  set(CMAKE_CXX14_COMPILE_FEATURES cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(112):  set(CMAKE_CXX17_COMPILE_FEATURES cxx_std_17 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(113):  set(CMAKE_CXX20_COMPILE_FEATURES cxx_std_20 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(114):  set(CMAKE_CXX23_COMPILE_FEATURES cxx_std_23 PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(115):  set(CMAKE_CXX26_COMPILE_FEATURES  PARENT_SCOPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeDetermineCompileFeatures.cmake(117):  message(CHECK_PASS done )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(73):  configure_file(D:/new_msys64/ucrt64/share/cmake/Modules/CMakeCXXCompiler.cmake.in D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake @ONLY )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(78):  include(D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER D:/new_msys64/ucrt64/bin/clang++.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID Clang )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION 16.0.5 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 17 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT ON )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX98_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX11_COMPILE_FEATURES cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX14_COMPILE_FEATURES cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX17_COMPILE_FEATURES cxx_std_17 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(14):  set(CMAKE_CXX20_COMPILE_FEATURES cxx_std_20 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX23_COMPILE_FEATURES cxx_std_23 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX_PLATFORM_ID MinGW )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(18):  set(CMAKE_CXX_SIMULATE_ID  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(19):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT GNU )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(20):  set(CMAKE_CXX_SIMULATE_VERSION  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(25):  set(CMAKE_AR D:/new_msys64/ucrt64/bin/llvm-ar.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(26):  set(CMAKE_CXX_COMPILER_AR D:/new_msys64/ucrt64/bin/llvm-ar.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(27):  set(CMAKE_RANLIB D:/new_msys64/ucrt64/bin/llvm-ranlib.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(28):  set(CMAKE_CXX_COMPILER_RANLIB D:/new_msys64/ucrt64/bin/llvm-ranlib.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(29):  set(CMAKE_LINKER D:/new_msys64/ucrt64/bin/ld.lld.exe )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(30):  set(CMAKE_MT  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(31):  set(CMAKE_COMPILER_IS_GNUCXX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(32):  set(CMAKE_CXX_COMPILER_LOADED 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(33):  set(CMAKE_CXX_COMPILER_WORKS TRUE )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(34):  set(CMAKE_CXX_ABI_COMPILED TRUE )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(36):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(38):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(39):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(40):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(42):  foreach(lang C OBJC OBJCXX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(43):  if(CMAKE_C_COMPILER_ID_RUN )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(43):  if(CMAKE_OBJC_COMPILER_ID_RUN )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(43):  if(CMAKE_OBJCXX_COMPILER_ID_RUN )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(50):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(51):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(54):  set(CMAKE_CXX_SIZEOF_DATA_PTR 8 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(55):  set(CMAKE_CXX_COMPILER_ABI  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(56):  set(CMAKE_CXX_BYTE_ORDER LITTLE_ENDIAN )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(57):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(59):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(60):  set(CMAKE_SIZEOF_VOID_P 8 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(63):  if(CMAKE_CXX_COMPILER_ABI )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(67):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(71):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(72):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(80):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES D:/new_msys64/ucrt64/include/c++/13.1.0;D:/new_msys64/ucrt64/include/c++/13.1.0/x86_64-w64-mingw32;D:/new_msys64/ucrt64/include/c++/13.1.0/backward;D:/new_msys64/ucrt64/lib/clang/16/include;D:/new_msys64/ucrt64/include )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(81):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES stdc++;mingw32;gcc_s;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc_s;gcc;moldname;mingwex;kernel32 )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(82):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES D:/new_msys64/ucrt64/lib/gcc/x86_64-w64-mingw32/13.1.0;D:/new_msys64/ucrt64/x86_64-w64-mingw32/lib;D:/new_msys64/ucrt64/x86_64-w64-mingw32/mingw/lib;D:/new_msys64/ucrt64/lib;D:/new_msys64/ucrt64/lib/clang/16/lib/windows )
D:/ass/VisualStudio/Repos/open_FUCK/build/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake(83):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(80):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(81):  foreach(f Platform/Windows-GNU-CXX-ABI )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(82):  include(Platform/Windows-GNU-CXX-ABI )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU-CXX-ABI.cmake(1):  __windows_compiler_gnu_abi(CXX )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(170):  if(CMAKE_NO_GNUtoMS )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(172):  else()
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(173):  option(CMAKE_GNUtoMS Convert GNU import libraries to MS format (requires Visual Studio) OFF )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(176):  if(CMAKE_GNUtoMS AND NOT CMAKE_GNUtoMS_LIB )
D:/new_msys64/ucrt64/share/cmake/Modules/Platform/Windows-GNU.cmake(232):  if(CMAKE_GNUtoMS )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(84):  unset(CMAKE_CXX_ABI_FILES )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(87):  set(CMAKE_TRY_COMPILE_TARGET_TYPE  )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(88):  unset(__CMAKE_SAVED_TRY_COMPILE_TARGET_TYPE )
D:/new_msys64/ucrt64/share/cmake/Modules/CMakeTestCXXCompiler.cmake(89):  unset(__CMAKE_CXX_COMPILER_OUTPUT )
D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(4):  set(CMAKE_CXX_STANDARD 20 )
D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(5):  set(CMAKE_CXX_STANDARD_REQUIRED TRUE )
D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(7):  find_package(TBB REQUIRED )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBConfigVersion.cmake(10):  set(PACKAGE_VERSION 2021.9.0 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBConfigVersion.cmake(12):  if(PACKAGE_FIND_VERSION_RANGE )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBConfigVersion.cmake(21):  else()
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBConfigVersion.cmake(22):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBConfigVersion.cmake(24):  else()
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBConfigVersion.cmake(25):  set(PACKAGE_VERSION_COMPATIBLE TRUE )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBConfigVersion.cmake(26):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBConfigVersion.cmake(34):  if(8 STREQUAL  OR 8 STREQUAL  )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBConfigVersion.cmake(39):  if(NOT CMAKE_SIZEOF_VOID_P STREQUAL 8 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBConfig.cmake(1):  include(D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(3):  if(3.26 LESS 2.8 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 2.8.3 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(9):  cmake_policy(PUSH )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(10):  cmake_policy(VERSION 2.8.3...3.24 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(19):  set(_cmake_targets_defined  )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(20):  set(_cmake_targets_not_defined  )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(21):  set(_cmake_expected_targets  )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS TBB::tbb TBB::tbbmalloc TBB::tbbmalloc_proxy TBB::tbbbind_2_5 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(23):  list(APPEND _cmake_expected_targets TBB::tbb )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(24):  if(TARGET TBB::tbb )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(26):  else()
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(27):  list(APPEND _cmake_targets_not_defined TBB::tbb )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(23):  list(APPEND _cmake_expected_targets TBB::tbbmalloc )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(24):  if(TARGET TBB::tbbmalloc )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(26):  else()
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(27):  list(APPEND _cmake_targets_not_defined TBB::tbbmalloc )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(23):  list(APPEND _cmake_expected_targets TBB::tbbmalloc_proxy )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(24):  if(TARGET TBB::tbbmalloc_proxy )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(26):  else()
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(27):  list(APPEND _cmake_targets_not_defined TBB::tbbmalloc_proxy )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(23):  list(APPEND _cmake_expected_targets TBB::tbbbind_2_5 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(24):  if(TARGET TBB::tbbbind_2_5 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(26):  else()
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(27):  list(APPEND _cmake_targets_not_defined TBB::tbbbind_2_5 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(30):  unset(_cmake_expected_target )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(44):  unset(_cmake_targets_defined )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(45):  unset(_cmake_targets_not_defined )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(46):  unset(_cmake_expected_targets )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake PATH )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib/cmake/TBB PATH )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib/cmake PATH )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(53):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib PATH )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(54):  if(_IMPORT_PREFIX STREQUAL / )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(59):  add_library(TBB::tbb SHARED IMPORTED )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(61):  set_target_properties(TBB::tbb PROPERTIES INTERFACE_COMPILE_DEFINITIONS $<$<CONFIG:DEBUG>:TBB_USE_DEBUG> INTERFACE_INCLUDE_DIRECTORIES D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(67):  add_library(TBB::tbbmalloc SHARED IMPORTED )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(69):  set_target_properties(TBB::tbbmalloc PROPERTIES INTERFACE_COMPILE_DEFINITIONS $<$<CONFIG:DEBUG>:TBB_USE_DEBUG> INTERFACE_INCLUDE_DIRECTORIES D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(75):  add_library(TBB::tbbmalloc_proxy SHARED IMPORTED )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(77):  set_target_properties(TBB::tbbmalloc_proxy PROPERTIES INTERFACE_COMPILE_DEFINITIONS $<$<CONFIG:DEBUG>:TBB_USE_DEBUG> INTERFACE_INCLUDE_DIRECTORIES D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(83):  add_library(TBB::tbbbind_2_5 SHARED IMPORTED )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(85):  set_target_properties(TBB::tbbbind_2_5 PROPERTIES INTERFACE_COMPILE_DEFINITIONS $<$<CONFIG:DEBUG>:TBB_USE_DEBUG> INTERFACE_INCLUDE_DIRECTORIES D:/new_msys64/ucrt64/include INTERFACE_LINK_LIBRARIES PkgConfig::HWLOC )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(91):  if(CMAKE_VERSION VERSION_LESS 2.8.12 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(96):  file(GLOB _cmake_config_files D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-*.cmake )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(97):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(98):  include(D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(9):  set_property(TARGET TBB::tbb APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(10):  set_target_properties(TBB::tbb PROPERTIES IMPORTED_IMPLIB_RELEASE D:/new_msys64/ucrt64/lib/libtbb12.dll.a IMPORTED_LOCATION_RELEASE D:/new_msys64/ucrt64/bin/libtbb12.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(15):  list(APPEND _cmake_import_check_targets TBB::tbb )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(16):  list(APPEND _cmake_import_check_files_for_TBB::tbb D:/new_msys64/ucrt64/lib/libtbb12.dll.a D:/new_msys64/ucrt64/bin/libtbb12.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(19):  set_property(TARGET TBB::tbbmalloc APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(20):  set_target_properties(TBB::tbbmalloc PROPERTIES IMPORTED_IMPLIB_RELEASE D:/new_msys64/ucrt64/lib/libtbbmalloc.dll.a IMPORTED_LOCATION_RELEASE D:/new_msys64/ucrt64/bin/libtbbmalloc.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(25):  list(APPEND _cmake_import_check_targets TBB::tbbmalloc )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(26):  list(APPEND _cmake_import_check_files_for_TBB::tbbmalloc D:/new_msys64/ucrt64/lib/libtbbmalloc.dll.a D:/new_msys64/ucrt64/bin/libtbbmalloc.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(29):  set_property(TARGET TBB::tbbmalloc_proxy APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(30):  set_target_properties(TBB::tbbmalloc_proxy PROPERTIES IMPORTED_IMPLIB_RELEASE D:/new_msys64/ucrt64/lib/libtbbmalloc_proxy.dll.a IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE TBB::tbbmalloc IMPORTED_LOCATION_RELEASE D:/new_msys64/ucrt64/bin/libtbbmalloc_proxy.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(36):  list(APPEND _cmake_import_check_targets TBB::tbbmalloc_proxy )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(37):  list(APPEND _cmake_import_check_files_for_TBB::tbbmalloc_proxy D:/new_msys64/ucrt64/lib/libtbbmalloc_proxy.dll.a D:/new_msys64/ucrt64/bin/libtbbmalloc_proxy.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(40):  set_property(TARGET TBB::tbbbind_2_5 APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(41):  set_target_properties(TBB::tbbbind_2_5 PROPERTIES IMPORTED_IMPLIB_RELEASE D:/new_msys64/ucrt64/lib/libtbbbind_2_5.dll.a IMPORTED_LOCATION_RELEASE D:/new_msys64/ucrt64/bin/libtbbbind_2_5.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(46):  list(APPEND _cmake_import_check_targets TBB::tbbbind_2_5 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(47):  list(APPEND _cmake_import_check_files_for_TBB::tbbbind_2_5 D:/new_msys64/ucrt64/lib/libtbbbind_2_5.dll.a D:/new_msys64/ucrt64/bin/libtbbbind_2_5.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets-release.cmake(50):  set(CMAKE_IMPORT_FILE_VERSION )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(100):  unset(_cmake_config_file )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(101):  unset(_cmake_config_files )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(104):  set(_IMPORT_PREFIX )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(107):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(108):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_TBB::tbb )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(109):  if(NOT EXISTS D:/new_msys64/ucrt64/lib/libtbb12.dll.a )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(109):  if(NOT EXISTS D:/new_msys64/ucrt64/bin/libtbb12.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(121):  unset(_cmake_file )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(122):  unset(_cmake_import_check_files_for_TBB::tbb )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(108):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_TBB::tbbmalloc )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(109):  if(NOT EXISTS D:/new_msys64/ucrt64/lib/libtbbmalloc.dll.a )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(109):  if(NOT EXISTS D:/new_msys64/ucrt64/bin/libtbbmalloc.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(121):  unset(_cmake_file )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(122):  unset(_cmake_import_check_files_for_TBB::tbbmalloc )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(108):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_TBB::tbbmalloc_proxy )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(109):  if(NOT EXISTS D:/new_msys64/ucrt64/lib/libtbbmalloc_proxy.dll.a )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(109):  if(NOT EXISTS D:/new_msys64/ucrt64/bin/libtbbmalloc_proxy.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(121):  unset(_cmake_file )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(122):  unset(_cmake_import_check_files_for_TBB::tbbmalloc_proxy )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(108):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_TBB::tbbbind_2_5 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(109):  if(NOT EXISTS D:/new_msys64/ucrt64/lib/libtbbbind_2_5.dll.a )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(109):  if(NOT EXISTS D:/new_msys64/ucrt64/bin/libtbbbind_2_5.dll )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(121):  unset(_cmake_file )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(122):  unset(_cmake_import_check_files_for_TBB::tbbbind_2_5 )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(124):  unset(_cmake_target )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(125):  unset(_cmake_import_check_targets )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(131):  set(CMAKE_IMPORT_FILE_VERSION )
D:/new_msys64/ucrt64/lib/cmake/TBB/TBBTargets.cmake(132):  cmake_policy(POP )
D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(8):  find_package(glm REQUIRED )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfigVersion.cmake(10):  set(PACKAGE_VERSION 0.9.9 )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfigVersion.cmake(12):  if(PACKAGE_FIND_VERSION_RANGE )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfigVersion.cmake(21):  else()
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfigVersion.cmake(22):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfigVersion.cmake(24):  else()
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfigVersion.cmake(25):  set(PACKAGE_VERSION_COMPATIBLE TRUE )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfigVersion.cmake(26):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfigVersion.cmake(34):  if(FALSE )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfigVersion.cmake(39):  if(8 STREQUAL  OR  STREQUAL  )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfigVersion.cmake(40):  return()
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfig.cmake(1):  set(GLM_VERSION 0.9.9 )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfig.cmake(8):  get_filename_component(PACKAGE_PREFIX_DIR D:/new_msys64/ucrt64/lib/cmake/glm/../../../ ABSOLUTE )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfig.cmake(10):  macro(set_and_check _var _file )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfig.cmake(19):  set_and_check(GLM_INCLUDE_DIRS D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfig.cmake(11):  set(GLM_INCLUDE_DIRS D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfig.cmake(12):  if(NOT EXISTS D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfig.cmake(21):  if(NOT CMAKE_VERSION VERSION_LESS 3.0 )
D:/new_msys64/ucrt64/lib/cmake/glm/glmConfig.cmake(22):  include(D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(3):  if(3.26 LESS 2.8 )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 2.8.3 )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(9):  cmake_policy(PUSH )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(10):  cmake_policy(VERSION 2.8.3...3.23 )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(19):  set(_cmake_targets_defined  )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(20):  set(_cmake_targets_not_defined  )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(21):  set(_cmake_expected_targets  )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS glm )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(23):  list(APPEND _cmake_expected_targets glm )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(24):  if(TARGET glm )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(26):  else()
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(27):  list(APPEND _cmake_targets_not_defined glm )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(30):  unset(_cmake_expected_target )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(44):  unset(_cmake_targets_defined )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(45):  unset(_cmake_targets_not_defined )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(46):  unset(_cmake_expected_targets )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake PATH )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib/cmake/glm PATH )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib/cmake PATH )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(53):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib PATH )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(54):  if(_IMPORT_PREFIX STREQUAL / )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(59):  add_library(glm INTERFACE IMPORTED )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(61):  set_target_properties(glm PROPERTIES INTERFACE_INCLUDE_DIRECTORIES D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(65):  if(CMAKE_VERSION VERSION_LESS 3.0.0 )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(70):  file(GLOB _cmake_config_files D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets-*.cmake )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(71):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(74):  unset(_cmake_config_file )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(75):  unset(_cmake_config_files )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(78):  set(_IMPORT_PREFIX )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(81):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(98):  unset(_cmake_target )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(99):  unset(_cmake_import_check_targets )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(105):  set(CMAKE_IMPORT_FILE_VERSION )
D:/new_msys64/ucrt64/lib/cmake/glm/glmTargets.cmake(106):  cmake_policy(POP )
D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(9):  find_package(ZSTD REQUIRED )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(12):  set(PACKAGE_VERSION 1.5.5 )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(14):  if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(16):  else()
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(18):  if(1.5.5 MATCHES ^([0-9]+)\. )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(19):  set(CVF_VERSION_MAJOR 1 )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(20):  if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0 )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(21):  string(REGEX REPLACE ^0+  CVF_VERSION_MAJOR 1 )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(27):  if(PACKAGE_FIND_VERSION_RANGE )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(41):  else()
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(42):  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(44):  else()
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(45):  set(PACKAGE_VERSION_COMPATIBLE FALSE )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(48):  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(56):  if(8 STREQUAL  OR 8 STREQUAL  )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfigVersion.cmake(61):  if(NOT CMAKE_SIZEOF_VOID_P STREQUAL 8 )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdConfig.cmake(1):  include(D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(3):  if(3.26 LESS 2.8 )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(6):  if(CMAKE_VERSION VERSION_LESS 2.8.3 )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(9):  cmake_policy(PUSH )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(10):  cmake_policy(VERSION 2.8.3...3.24 )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(16):  set(CMAKE_IMPORT_FILE_VERSION 1 )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(19):  set(_cmake_targets_defined  )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(20):  set(_cmake_targets_not_defined  )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(21):  set(_cmake_expected_targets  )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(22):  foreach(_cmake_expected_target IN ITEMS zstd::libzstd_shared zstd::libzstd_static )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(23):  list(APPEND _cmake_expected_targets zstd::libzstd_shared )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(24):  if(TARGET zstd::libzstd_shared )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(26):  else()
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(27):  list(APPEND _cmake_targets_not_defined zstd::libzstd_shared )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(23):  list(APPEND _cmake_expected_targets zstd::libzstd_static )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(24):  if(TARGET zstd::libzstd_static )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(26):  else()
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(27):  list(APPEND _cmake_targets_not_defined zstd::libzstd_static )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(30):  unset(_cmake_expected_target )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(31):  if(_cmake_targets_defined STREQUAL _cmake_expected_targets )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(39):  if(NOT _cmake_targets_defined STREQUAL  )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(44):  unset(_cmake_targets_defined )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(45):  unset(_cmake_targets_not_defined )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(46):  unset(_cmake_expected_targets )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(50):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake PATH )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(51):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib/cmake/zstd PATH )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(52):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib/cmake PATH )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(53):  get_filename_component(_IMPORT_PREFIX D:/new_msys64/ucrt64/lib PATH )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(54):  if(_IMPORT_PREFIX STREQUAL / )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(59):  add_library(zstd::libzstd_shared SHARED IMPORTED )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(61):  set_target_properties(zstd::libzstd_shared PROPERTIES INTERFACE_INCLUDE_DIRECTORIES D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(66):  add_library(zstd::libzstd_static STATIC IMPORTED )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(68):  set_target_properties(zstd::libzstd_static PROPERTIES INTERFACE_INCLUDE_DIRECTORIES D:/new_msys64/ucrt64/include )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(73):  file(GLOB _cmake_config_files D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-*.cmake )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(74):  foreach(_cmake_config_file IN LISTS _cmake_config_files )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(75):  include(D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-release.cmake )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-release.cmake(6):  set(CMAKE_IMPORT_FILE_VERSION 1 )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-release.cmake(9):  set_property(TARGET zstd::libzstd_shared APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-release.cmake(10):  set_target_properties(zstd::libzstd_shared PROPERTIES IMPORTED_IMPLIB_RELEASE D:/new_msys64/ucrt64/lib/libzstd.dll.a IMPORTED_LOCATION_RELEASE D:/new_msys64/ucrt64/bin/libzstd.dll )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-release.cmake(15):  list(APPEND _cmake_import_check_targets zstd::libzstd_shared )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-release.cmake(16):  list(APPEND _cmake_import_check_files_for_zstd::libzstd_shared D:/new_msys64/ucrt64/lib/libzstd.dll.a D:/new_msys64/ucrt64/bin/libzstd.dll )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-release.cmake(19):  set_property(TARGET zstd::libzstd_static APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-release.cmake(20):  set_target_properties(zstd::libzstd_static PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE C IMPORTED_LOCATION_RELEASE D:/new_msys64/ucrt64/lib/libzstd.a )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-release.cmake(25):  list(APPEND _cmake_import_check_targets zstd::libzstd_static )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-release.cmake(26):  list(APPEND _cmake_import_check_files_for_zstd::libzstd_static D:/new_msys64/ucrt64/lib/libzstd.a )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets-release.cmake(29):  set(CMAKE_IMPORT_FILE_VERSION )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(77):  unset(_cmake_config_file )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(78):  unset(_cmake_config_files )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(81):  set(_IMPORT_PREFIX )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(84):  foreach(_cmake_target IN LISTS _cmake_import_check_targets )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(85):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_zstd::libzstd_shared )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(86):  if(NOT EXISTS D:/new_msys64/ucrt64/lib/libzstd.dll.a )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(86):  if(NOT EXISTS D:/new_msys64/ucrt64/bin/libzstd.dll )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(98):  unset(_cmake_file )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(99):  unset(_cmake_import_check_files_for_zstd::libzstd_shared )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(85):  foreach(_cmake_file IN LISTS _cmake_import_check_files_for_zstd::libzstd_static )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(86):  if(NOT EXISTS D:/new_msys64/ucrt64/lib/libzstd.a )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(98):  unset(_cmake_file )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(99):  unset(_cmake_import_check_files_for_zstd::libzstd_static )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(101):  unset(_cmake_target )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(102):  unset(_cmake_import_check_targets )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(108):  set(CMAKE_IMPORT_FILE_VERSION )
D:/new_msys64/ucrt64/lib/cmake/zstd/zstdTargets.cmake(109):  cmake_policy(POP )
D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(11):  add_definitions(-DMAIN_PACKAGE_NAMESPACE=openVCB )
D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(13):  add_library(openVCB SHARED cSharpExportInterface.cpp openVCB.cpp openVCBAssembler.cpp openVCBBlueprint.cpp openVCBExpr.cpp openVCBMain.cpp openVCBPreprocessing.cpp openVCBReader.cpp openVCBSim.cpp macros.h openVCB.h openVCBExpr.h openVCB_Data.hh openVCB_Expr.hh openVCB_Helpers.hh openVCB_Utils.hh )
D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(33):  message( )

D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(35):  target_include_directories(openVCB PRIVATE D:/new_msys64/ucrt64/include   )
D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(41):  target_link_libraries(openVCB zstd::libzstd_shared TBB::tbb glm )
D:/ass/VisualStudio/Repos/open_FUCK/CMakeLists.txt(47):  set_target_properties(openVCB PROPERTIES PREFIX  )
